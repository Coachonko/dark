{"version":3,"file":"704.build.js","mappings":"wHAMA,MAAMA,GAAgB,SAA8B,EAAGC,WAC9C,kBAASC,MAAM,uBAAuBD,I,6JCE/C,MAgCA,GAhCa,EAAAE,EAAA,KAAqB,EAAGF,WACnC,MAAM,IAAEG,GCAV,WACE,MAAMC,GAAc,WACpB,QAAkBA,GAClB,MAAMC,GAAO,WAEXC,UAAU,SAAEC,IACVH,EACED,GAAM,QAAQ,IAAOE,GAAO,QAAeE,EAAUF,GAAQ,IAAK,CAACA,EAAME,IAG/E,MAFqB,CAAEF,OAAMF,MAG/B,CDXkBK,GACVC,GAAU,SACVC,GAAS,SACTJ,GAAW,UACVK,EAAOC,IAAY,OAAS,GAQnC,OANA,SAAU,KACiB,SAArBF,EAAOG,IAAI,OACbJ,EAAQK,KAAK,Y,GAEd,CAACR,EAASH,OAGX,OAAC,IAAa,MACZ,0BACA,sBACE,OAAC,IAAU,CAACY,GAAI,GAAGZ,MAAM,kBACzB,OAAC,IAAU,CAACY,GAAI,GAAGZ,MAAM,kBACzB,OAAC,IAAU,CAACY,GAAI,GAAGZ,MAAM,kBACzB,iBAAQa,QAAS,IAAMJ,EAASD,EAAQ,I,SAAWA,E,YAErD,2PAKCX,EAEJ,G,8CEnCH,SAASiB,IACP,MAAMC,GAAQ,UAId,OAFA,QAAkBA,GAEXA,EAAMR,MACf,C","sources":["webpack:///./components/animated-route.tsx","webpack:///./components/home.tsx","webpack:///../../../packages/web-router/src/use-match/use-match.ts","webpack:///../../../packages/web-router/src/use-params/use-params.ts"],"sourcesContent":["import { h, component, type DarkElement } from '@dark-engine/core';\r\n\r\ntype AnimatedRouteProps = {\r\n  slot: DarkElement;\r\n};\r\n\r\nconst AnimatedRoute = component<AnimatedRouteProps>(({ slot }) => {\r\n  return <article class='fade animated-route'>{slot}</article>;\r\n});\r\n\r\nexport { AnimatedRoute };\r\n","import { h, component, type DarkElement, useState, useEffect } from '@dark-engine/core';\r\nimport { RouterLink, useMatch, useHistory, useParams, useLocation } from '@dark-engine/web-router';\r\n\r\nimport { AnimatedRoute } from './animated-route';\r\n\r\ntype HomeProps = {\r\n  slot: DarkElement;\r\n};\r\n\r\nconst Home = component<HomeProps>(({ slot }) => {\r\n  const { url } = useMatch();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const location = useLocation();\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (params.get('id') === 'null') {\r\n      history.push('/home/888');\r\n    }\r\n  }, [location.url]);\r\n\r\n  return (\r\n    <AnimatedRoute>\r\n      <h1>Home</h1>\r\n      <header>\r\n        <RouterLink to={`${url}a`}>child route a</RouterLink>\r\n        <RouterLink to={`${url}b`}>child route b</RouterLink>\r\n        <RouterLink to={`${url}c`}>child route c</RouterLink>\r\n        <button onClick={() => setCount(count + 1)}>fired {count} times</button>\r\n      </header>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Vero excepturi quae harum laborum temporibus?\r\n        Repellendus laboriosam sunt corporis quasi. Quo accusamus aperiam consequuntur quia veritatis nobis minima omnis\r\n        error expedita!\r\n      </p>\r\n      {slot}\r\n    </AnimatedRoute>\r\n  );\r\n});\r\n\r\nexport default Home;\r\n","import { useMemo } from '@dark-engine/core';\r\n\r\nimport { useActiveRouteContext, useCurrentPathContext, checkContextValue } from '../context';\r\nimport { createPathname } from '../create-routes';\r\n\r\nexport type Match = {\r\n  path: string;\r\n  url: string;\r\n};\r\n\r\nfunction useMatch(): Match {\r\n  const activeRoute = useActiveRouteContext();\r\n  checkContextValue(activeRoute);\r\n  const path = useCurrentPathContext();\r\n  const {\r\n    location: { pathname },\r\n  } = activeRoute;\r\n  const url = useMemo(() => (path ? createPathname(pathname, path) : ''), [path, pathname]);\r\n  const value: Match = { path, url };\r\n\r\n  return value;\r\n}\r\n\r\nexport { useMatch };\r\n","import { useActiveRouteContext, checkContextValue } from '../context';\r\nimport { type Params } from '../create-routes';\r\n\r\nfunction useParams(): Params {\r\n  const value = useActiveRouteContext();\r\n\r\n  checkContextValue(value);\r\n\r\n  return value.params;\r\n}\r\n\r\nexport { Params, useParams };\r\n"],"names":["AnimatedRoute","slot","class","component","url","activeRoute","path","location","pathname","useMatch","history","params","count","setCount","get","push","to","onClick","useParams","value"],"sourceRoot":""}