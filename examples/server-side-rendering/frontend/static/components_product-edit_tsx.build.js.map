{"version":3,"file":"components_product-edit_tsx.build.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAiD;AAEyB;AAEV;AACL;AAE3D,MAAM,WAAW,GAAG,4DAAS,CAAC,GAAG,EAAE;IACjC,MAAM,MAAM,GAAG,kEAAS,EAAE,CAAC;IAC3B,MAAM,EAAE,GAAG,EAAE,GAAG,iEAAQ,EAAE,CAAC;IAC3B,MAAM,OAAO,GAAG,mEAAU,EAAE,CAAC;IAC7B,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACpC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,kDAAU,CAAC,EAAE,CAAC,CAAC;IACzC,MAAM,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,CAAC,GAAG,gEAAwB,EAAE,CAAC;IAChE,MAAM,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IAEjD,MAAM,YAAY,GAAG,KAAK,EAAE,CAA8C,EAAE,EAAE;QAC5E,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;QAC9B,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAe,CAAC;QAC9C,MAAM,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAe,CAAC;QAErD,IAAI,OAAO;YAAE,OAAO;QACpB,MAAM,aAAa,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;QAC/C,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,CACL,qDAAC,qCAAI,gBAAW,OAAO;QACrB,gFAAqB;QACrB,qDAAC,qCAAI,IAAC,QAAQ,EAAE,YAAY;YAC1B,gEAAO,GAAG,EAAC,MAAM,YAAc;YAC/B,qDAAC,sCAAK,IAAC,EAAE,EAAC,MAAM,EAAC,QAAQ,QAAC,KAAK,EAAE,OAAO,CAAC,IAAI,GAAI;YACjD,gEAAO,GAAG,EAAC,MAAM,mBAAqB;YACtC,qDAAC,yCAAQ,IAAC,EAAE,EAAC,MAAM,EAAC,QAAQ,QAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,WAAW,GAAI;YACpE,qDAAC,uCAAM,IAAC,IAAI,EAAC,QAAQ,WAAc,CAC9B,CACF,CACR,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,iEAAe,WAAW,EAAC","sources":["webpack:///./components/product-edit.tsx"],"sourcesContent":["import { h, component } from '@dark-engine/core';\r\nimport { type SyntheticEvent } from '@dark-engine/platform-browser';\r\nimport { useMatch, useHistory, useParams } from '@dark-engine/web-router';\r\n\r\nimport { useProduct, useChangeProductMutation } from '../hooks';\r\nimport { Card, Input, Textarea, Form, Button } from './ui';\r\n\r\nconst ProductEdit = component(() => {\r\n  const params = useParams();\r\n  const { url } = useMatch();\r\n  const history = useHistory();\r\n  const id = Number(params.get('id'));\r\n  const { data: product } = useProduct(id);\r\n  const [changeProduct, { loading }] = useChangeProductMutation();\r\n  const urlToList = url.replace(`${id}/edit/`, '');\r\n\r\n  const handleSubmit = async (e: SyntheticEvent<InputEvent, HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const { elements } = e.target;\r\n    const name = elements['name'].value as string;\r\n    const description = elements['desc'].value as string;\r\n\r\n    if (loading) return;\r\n    await changeProduct(id, { name, description });\r\n    history.push(urlToList);\r\n  };\r\n\r\n  return (\r\n    <Card $loading={loading}>\r\n      <h3>Edit product</h3>\r\n      <Form onSubmit={handleSubmit}>\r\n        <label for='name'>Name:</label>\r\n        <Input id='name' required value={product.name} />\r\n        <label for='desc'>Description:</label>\r\n        <Textarea id='desc' required rows={5} value={product.description} />\r\n        <Button type='submit'>Edit</Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ProductEdit;\r\n"],"names":[],"sourceRoot":""}