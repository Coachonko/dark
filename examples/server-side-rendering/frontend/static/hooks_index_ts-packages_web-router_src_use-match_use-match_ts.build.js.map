{"version":3,"file":"hooks_index_ts-packages_web-router_src_use-match_use-match_ts.build.js","mappings":"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","sources":["webpack:///./api/index.ts","webpack:///./hooks/index.ts","webpack:///../../../packages/core/src/use-mutation/use-mutation.ts","webpack:///../../../packages/core/src/use-query/use-query.ts","webpack:///../../../packages/web-router/src/use-match/use-match.ts"],"sourcesContent":["import { type Api, type ProductBrief, type Product } from '../contract';\r\n\r\nconst IS_SERVER = typeof globalThis.window === 'undefined';\r\nconst TIMEOUT = IS_SERVER ? 100 : 600;\r\n\r\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n// sumulates the database\r\nlet nextId = 0;\r\nconst products: Array<Product> = new Array(50).fill(null).map(() => ({\r\n  id: ++nextId,\r\n  name: `Product #${nextId}`,\r\n  description:\r\n    'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Nostrum blanditiis quia minus corrupti quidem. Ipsam quae ad velit repudiandae molestias unde'.repeat(\r\n      3,\r\n    ),\r\n}));\r\n\r\nconst api: Api = {\r\n  async fetchProducts() {\r\n    await sleep(TIMEOUT);\r\n    const briefs = products.map(x => ({ ...x, description: null })) as Array<ProductBrief>;\r\n\r\n    return briefs;\r\n  },\r\n  async fetchProduct(id: number) {\r\n    if (!detectIsValidId(id)) throwError();\r\n    await sleep(TIMEOUT);\r\n    const product = products.find(x => x.id === id) || null;\r\n\r\n    return product;\r\n  },\r\n  async addProduct(product: Partial<Product>) {\r\n    if (detectIsValidId(product.id)) throwError();\r\n    await sleep(TIMEOUT);\r\n\r\n    product.id = ++nextId;\r\n    products.push(product as Product);\r\n\r\n    return product as Product;\r\n  },\r\n  async changeProduct(product: Product) {\r\n    if (!detectIsValidId(product.id)) throwError();\r\n    if (!product) return null;\r\n    await sleep(TIMEOUT);\r\n    const idx = products.findIndex(x => x.id === product.id);\r\n\r\n    if (idx !== -1) {\r\n      products.splice(idx, 1, product);\r\n    }\r\n\r\n    return product;\r\n  },\r\n  async removeProduct(id: number) {\r\n    if (!detectIsValidId(id)) throwError();\r\n    await sleep(TIMEOUT);\r\n    const idx = products.findIndex(x => x.id === id);\r\n\r\n    if (idx !== -1) {\r\n      products.splice(idx, 1);\r\n    }\r\n\r\n    return true;\r\n  },\r\n};\r\n\r\nconst detectIsValidId = (id: unknown) => typeof id === 'number' && !Number.isNaN(id);\r\n\r\nconst throwError = () => {\r\n  throw new Error('Invalid id!');\r\n};\r\n\r\nexport { api, type ProductBrief, type Product };\r\n","import { useQuery, useMutation } from '@dark-engine/core';\r\n\r\nimport { type ProductBrief, api } from '../api';\r\n\r\nexport enum Key {\r\n  FETCH_PRODUCTS = 'FETCH_PRODUCTS',\r\n  FETCH_PRODUCT = 'FETCH_PRODUCT',\r\n  ADD_PRODUCT = 'ADD_PRODUCT',\r\n  CHANGE_PRODUCT = 'CHANGE_PRODUCT',\r\n  REMOVE_PRODUCT = 'REMOVE_PRODUCT',\r\n}\r\n\r\nfunction useProducts() {\r\n  return useQuery(() => api.fetchProducts(), { key: Key.FETCH_PRODUCTS });\r\n}\r\n\r\nfunction useProduct(id: number) {\r\n  return useQuery(({ id }) => api.fetchProduct(id), {\r\n    key: Key.FETCH_PRODUCT,\r\n    variables: { id },\r\n    extractId: x => x.id,\r\n  });\r\n}\r\n\r\nfunction useAddProductMutation() {\r\n  return useMutation(api.addProduct, {\r\n    key: Key.ADD_PRODUCT,\r\n    onSuccess: (cache, product) => {\r\n      const record = cache.read<Array<ProductBrief>>({ key: Key.FETCH_PRODUCTS });\r\n\r\n      if (record) {\r\n        const products = record.data;\r\n\r\n        products.push(product);\r\n        cache.optimistic({ key: Key.FETCH_PRODUCTS, data: products });\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nfunction useChangeProductMutation() {\r\n  return useMutation(api.changeProduct, {\r\n    key: Key.CHANGE_PRODUCT,\r\n    onSuccess: (cache, product) => {\r\n      const record = cache.read<Array<ProductBrief>>({ key: Key.FETCH_PRODUCTS });\r\n\r\n      if (record) {\r\n        const products = record.data;\r\n        const $product = products.find(x => x.id === product.id);\r\n\r\n        $product.name = product.name;\r\n        cache.optimistic({ key: Key.FETCH_PRODUCTS, data: products });\r\n        cache.optimistic({ key: Key.FETCH_PRODUCT, data: product, id: product.id });\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nfunction useRemoveProductMutation(id: number) {\r\n  return useMutation(() => api.removeProduct(id), {\r\n    key: Key.REMOVE_PRODUCT,\r\n    onSuccess: cache => {\r\n      const record = cache.read<Array<ProductBrief>>({ key: Key.FETCH_PRODUCTS });\r\n\r\n      if (record) {\r\n        const products = record.data;\r\n        const idx = products.findIndex(x => x.id === id);\r\n\r\n        if (idx !== -1) {\r\n          products.splice(idx, 1);\r\n          cache.optimistic({ key: Key.FETCH_PRODUCTS, data: products });\r\n        }\r\n      }\r\n\r\n      cache.delete({ key: Key.FETCH_PRODUCT, id });\r\n    },\r\n  });\r\n}\r\n\r\nexport { useProducts, useProduct, useAddProductMutation, useChangeProductMutation, useRemoveProductMutation };\r\n","import { type InMemoryCache, useCache, MonitorEventType, checkCache } from '../cache';\r\nimport { error, detectIsFunction } from '../utils';\r\nimport { useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\n\r\ntype UseMutatinOptions<T> = {\r\n  key: string;\r\n  refetchQueries?: Array<string>;\r\n  onSuccess?: (x: InMemoryCache, data: T) => void;\r\n};\r\n\r\nfunction useMutation<M extends Mutation>(mutation: M, options: UseMutatinOptions<Awaited<ReturnType<M>>>) {\r\n  type Params = Parameters<M>;\r\n  type AwaitedResult = Awaited<ReturnType<M>>;\r\n  const { key, refetchQueries = [], onSuccess } = options || {};\r\n  const update = useUpdate();\r\n  const cache = useCache();\r\n  checkCache(cache);\r\n  const state = useMemo<State<AwaitedResult>>(() => ({ isFetching: false, data: null, error: null }), []);\r\n  const make = async (...args: Params) => {\r\n    let data: AwaitedResult = null;\r\n\r\n    cache.__emit({ type: MonitorEventType.MUTATION, phase: 'start', key, data: args });\r\n\r\n    try {\r\n      state.isFetching = true;\r\n      state.error = null;\r\n      update();\r\n      data = (await mutation(...args)) as AwaitedResult;\r\n      cache.__emit({ type: MonitorEventType.MUTATION, phase: 'finish', key, data });\r\n      detectIsFunction(onSuccess) && onSuccess(cache, data);\r\n      refetchQueries.forEach(x => cache.invalidate({ key: x }));\r\n    } catch (err) {\r\n      error(err);\r\n      state.error = String(err);\r\n      cache.__emit({ type: MonitorEventType.MUTATION, phase: 'error', key, data: err });\r\n    } finally {\r\n      state.isFetching = false;\r\n      update();\r\n    }\r\n\r\n    return data;\r\n  };\r\n  const result: MutationResult<AwaitedResult> = {\r\n    loading: state.isFetching,\r\n    data: state.data,\r\n    error: state.error,\r\n  };\r\n\r\n  return [make, result] as [(...args: Params) => ReturnType<M>, MutationResult<AwaitedResult>];\r\n}\r\n\r\ntype State<T> = {\r\n  isFetching: boolean;\r\n  data: T;\r\n  error: string;\r\n};\r\n\r\ntype MutationResult<T> = {\r\n  loading: boolean;\r\n} & Pick<State<T>, 'data' | 'error'>;\r\n\r\ntype Mutation = (...args: Array<unknown>) => Promise<unknown>;\r\n\r\nexport { useMutation };\r\n","import { type InMemoryCache, useCache, MonitorEventType, checkCache, CACHE_ROOT_ID } from '../cache';\r\nimport { type AppResource, type Callback, type TextBased } from '../shared';\r\nimport { error, detectIsFunction, mapRecord } from '../utils';\r\nimport { useLayoutEffect } from '../use-layout-effect';\r\nimport { detectIsServer } from '../platform';\r\nimport { useEffect } from '../use-effect';\r\nimport { useSuspense } from '../suspense';\r\nimport { useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\nimport { $$scope } from '../scope';\r\n\r\nexport type UseQueryOptions<V extends Variables> = {\r\n  key: string;\r\n  variables?: V;\r\n  extractId?: (x: V) => TextBased;\r\n  lazy?: boolean;\r\n};\r\n\r\nfunction useQuery<T, V extends Variables>(query: Query<T, V>, options: UseQueryOptions<V>) {\r\n  const {\r\n    variables = {} as V,\r\n    key: cacheKey,\r\n    extractId = () => CACHE_ROOT_ID,\r\n    lazy = false,\r\n  } = options || { variables: {} as V };\r\n  const $scope = $$scope();\r\n  const cache = useCache();\r\n  checkCache(cache);\r\n  const cacheId = extractId(variables);\r\n  const id = useMemo(() => $scope.getNextResourceId(), []);\r\n  const state = useMemo<State<T>>(() => createState<T>(cache, cacheKey, cacheId, lazy), []);\r\n  const { register, unregister } = useSuspense();\r\n  const [mounted, firstTime] = useMounted();\r\n  const update = useUpdate();\r\n  const $update = () => mounted() && update();\r\n  const isServer = detectIsServer();\r\n  const isHydrateZone = $scope.getIsHydrateZone();\r\n  const { isLoaded } = state;\r\n\r\n  state.cacheKey = cacheKey;\r\n  state.cacheId = cacheId;\r\n\r\n  const make = async ($variables?: V) => {\r\n    const $$variables = $variables || variables;\r\n    const $cacheId = extractId($$variables);\r\n\r\n    cache.__emit({ type: MonitorEventType.QUERY, phase: 'start', key: cacheKey, data: $$variables });\r\n\r\n    try {\r\n      if (!isServer && !firstTime()) {\r\n        state.isFetching = true;\r\n        $update();\r\n      }\r\n\r\n      const data = await query($$variables);\r\n\r\n      cache.__emit({ type: MonitorEventType.QUERY, phase: 'finish', key: cacheKey, data });\r\n\r\n      if (isServer) {\r\n        $scope.setResource(id, [data, null]);\r\n      } else {\r\n        unregister(id);\r\n        state.data = data;\r\n        state.isFetching = false;\r\n        state.error = null;\r\n      }\r\n\r\n      if (data) {\r\n        cache.write({ key: cacheKey, id: $cacheId, data });\r\n      }\r\n\r\n      return data;\r\n    } catch (err) {\r\n      error(err);\r\n      cache.__emit({ type: MonitorEventType.QUERY, phase: 'error', key: cacheKey, data: err });\r\n\r\n      if (isServer) {\r\n        $scope.setResource(id, [null, String(err)]);\r\n      } else {\r\n        unregister(id);\r\n        state.isFetching = false;\r\n        state.error = String(err);\r\n      }\r\n    } finally {\r\n      if (!isServer) {\r\n        state.isLoaded = true;\r\n        $update();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isHydrateZone) return;\r\n    if (lazy) return;\r\n    const record = cache.read({ key: cacheKey, id: cacheId });\r\n\r\n    if (record?.valid) return;\r\n\r\n    make();\r\n  }, [...mapRecord(variables)]);\r\n\r\n  useEffect(() => {\r\n    let off: Callback = null;\r\n\r\n    off = cache.subscribe(({ type, key, id }) => {\r\n      if (key === state.cacheKey && id === state.cacheId) {\r\n        if (type === 'invalidate' || type === 'optimistic') {\r\n          if (cache.__canUpdate(key)) {\r\n            make();\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unregister(id);\r\n      detectIsFunction(off) && off();\r\n    };\r\n  }, []);\r\n\r\n  if (isServer || isHydrateZone) {\r\n    const res = $scope.getResource(id) as AppResource<T>;\r\n\r\n    if (isServer) {\r\n      if (res) {\r\n        mutate(state, res);\r\n      } else {\r\n        $scope.defer(make);\r\n      }\r\n    } else if (isHydrateZone) {\r\n      if (!res) throw new Error('[Dark]: can not read app state from the server!');\r\n      const [data] = res;\r\n\r\n      mutate(state, res);\r\n\r\n      if (data) {\r\n        cache.write({ key: cacheKey, id: cacheId, data });\r\n      }\r\n    }\r\n  } else {\r\n    firstTime() && !isLoaded && !lazy && register(id);\r\n  }\r\n\r\n  const result: QueryResult<T> = {\r\n    loading: state.isFetching,\r\n    data: state.data,\r\n    error: state.error,\r\n    refetch: make,\r\n  };\r\n\r\n  return result;\r\n}\r\n\r\nfunction createState<T>(cache: InMemoryCache, cacheKey: string, cacheId: TextBased, lazy) {\r\n  const state: State<T> = {\r\n    isFetching: !lazy,\r\n    isLoaded: false,\r\n    data: null,\r\n    error: null,\r\n    cacheKey,\r\n    cacheId,\r\n  };\r\n  const record = cache.read({ key: cacheKey, id: cacheId });\r\n\r\n  if (record) {\r\n    state.isFetching = false;\r\n    state.isLoaded = true;\r\n    state.data = record.data as T;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction mutate<T>(state: State<T>, res: AppResource<T>) {\r\n  const [data, error] = res;\r\n\r\n  state.isFetching = false;\r\n  state.isLoaded = true;\r\n  state.data = data;\r\n  state.error = error;\r\n}\r\n\r\nfunction useMounted() {\r\n  const scope = useMemo(() => ({ isMounted: true, isFirstTime: true }), []);\r\n  const { isFirstTime } = scope;\r\n\r\n  useLayoutEffect(() => {\r\n    scope.isFirstTime = false;\r\n    return () => (scope.isMounted = false);\r\n  }, []);\r\n\r\n  return [() => scope.isMounted, () => isFirstTime] as [BooleanFn, BooleanFn];\r\n}\r\n\r\ntype BooleanFn = () => boolean;\r\n\r\ntype State<T> = {\r\n  isFetching: boolean;\r\n  isLoaded: boolean;\r\n  data: T;\r\n  error: string;\r\n  cacheId: TextBased;\r\n  cacheKey: string;\r\n};\r\n\r\nexport type QueryResult<T> = {\r\n  loading: boolean;\r\n  refetch: Query<T>;\r\n} & Pick<State<T>, 'data' | 'error'>;\r\n\r\nexport type Variables<K extends string = string, V = any> = Record<K, V>;\r\nexport type Query<T, V extends Variables = Variables> = (variables?: V) => Promise<T>;\r\n\r\nexport { useQuery };\r\n","import { useMemo } from '@dark-engine/core';\r\n\r\nimport { useActiveRouteContext, useCurrentPathContext, checkContextValue } from '../context';\r\nimport { createPathname } from '../create-routes';\r\n\r\nexport type Match = {\r\n  path: string;\r\n  url: string;\r\n};\r\n\r\nfunction useMatch(): Match {\r\n  const activeRoute = useActiveRouteContext();\r\n  checkContextValue(activeRoute);\r\n  const path = useCurrentPathContext();\r\n  const {\r\n    location: { pathname },\r\n  } = activeRoute;\r\n  const url = useMemo(() => (path ? createPathname(pathname, path) : ''), [path, pathname]);\r\n  const value: Match = { path, url };\r\n\r\n  return value;\r\n}\r\n\r\nexport { useMatch };\r\n"],"names":[],"sourceRoot":""}