{"version":3,"file":"dark-core.production.min.js","mappings":"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","sources":["webpack://DarkCore/webpack/universalModuleDefinition","webpack://DarkCore/webpack/bootstrap","webpack://DarkCore/webpack/runtime/define property getters","webpack://DarkCore/webpack/runtime/hasOwnProperty shorthand","webpack://DarkCore/webpack/runtime/make namespace object","webpack://DarkCore/./src/constants.ts","webpack://DarkCore/./src/helpers/index.ts","webpack://DarkCore/./src/component/component.ts","webpack://DarkCore/./src/view/types.ts","webpack://DarkCore/./src/scope/scope.ts","webpack://DarkCore/./src/use-effect/use-effect.ts","webpack://DarkCore/./src/view/view.ts","webpack://DarkCore/./src/fragment/fragment.ts","webpack://DarkCore/./src/ref/ref.ts","webpack://DarkCore/./src/memo/memo.ts","webpack://DarkCore/./src/use-memo/use-memo.ts","webpack://DarkCore/./src/platform/platform.ts","webpack://DarkCore/./src/fiber/types.ts","webpack://DarkCore/./src/use-layout-effect/use-layout-effect.ts","webpack://DarkCore/./src/walk/walk.ts","webpack://DarkCore/./src/unmount/unmount.ts","webpack://DarkCore/./src/fiber/fiber.ts","webpack://DarkCore/./src/use-update/use-update.ts","webpack://DarkCore/./src/use-context/use-context.ts","webpack://DarkCore/./src/context/context.ts","webpack://DarkCore/./src/element/element.ts","webpack://DarkCore/./src/use-callback/use-callback.ts","webpack://DarkCore/./src/use-state/use-state.ts","webpack://DarkCore/./src/suspense/suspense.ts","webpack://DarkCore/./src/lazy/lazy.ts","webpack://DarkCore/./src/use-deferred-value/use-deferred-value.ts","webpack://DarkCore/./src/use-error/use-error.ts","webpack://DarkCore/./src/use-event/use-event.ts","webpack://DarkCore/./src/use-imperative-handle/use-imperative-handle.ts","webpack://DarkCore/./src/use-reducer/use-reducer.ts","webpack://DarkCore/./src/use-ref/use-ref.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DarkCore\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DarkCore\"] = factory();\n\telse\n\t\troot[\"DarkCore\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const ROOT = 'root';\r\nexport const EMPTY_NODE = 'dark:matter';\r\nexport const ATTR_KEY = 'key';\r\nexport const ATTR_REF = 'ref';\r\nexport const PARTIAL_UPDATE = 'partial-update';\r\n\r\nexport enum TaskPriority {\r\n  HIGH = 2,\r\n  NORMAL = 1,\r\n  LOW = 0,\r\n}\r\n","import type { NestedArray } from '../shared';\r\n\r\nconst detectIsFunction = (o: any): o is Function => typeof o === 'function';\r\nconst detectIsUndefined = (o: any) => typeof o === 'undefined';\r\nconst detectIsNumber = (o: any) => typeof o === 'number';\r\nconst detectIsString = (o: any) => typeof o === 'string';\r\nconst detectIsObject = (o: any) => typeof o === 'object';\r\nconst detectIsBoolean = (o: any) => typeof o === 'boolean';\r\nconst detectIsArray = (o: any): o is Array<any> => Array.isArray(o);\r\nconst detectIsNull = (o: any) => o === null;\r\nconst detectIsEmpty = (o: any) => detectIsNull(o) || detectIsUndefined(o);\r\n\r\nfunction error(str: string) {\r\n  !detectIsUndefined(console) && console.error(str);\r\n}\r\n\r\nfunction flatten<T = any>(source: Array<NestedArray<T>>): Array<T> {\r\n  const list = [];\r\n  const levelMap = { 0: { idx: 0, source } };\r\n  let level = 0;\r\n\r\n  do {\r\n    const { source, idx } = levelMap[level];\r\n    const item = source[idx];\r\n\r\n    if (idx >= source.length) {\r\n      level--;\r\n      levelMap[level].idx++;\r\n      continue;\r\n    }\r\n\r\n    if (detectIsArray(item)) {\r\n      level++;\r\n      levelMap[level] = {\r\n        idx: 0,\r\n        source: item,\r\n      };\r\n    } else {\r\n      list.push(item);\r\n      levelMap[level].idx++;\r\n    }\r\n  } while (level > 0 || levelMap[level].idx < levelMap[level].source.length);\r\n\r\n  return list;\r\n}\r\n\r\nfunction getTime() {\r\n  return Date.now();\r\n}\r\n\r\nfunction keyBy<T = any>(\r\n  list: Array<T>,\r\n  fn: (o: T) => string | number,\r\n  value = false,\r\n): Record<string | number, T | boolean> {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\n\r\nfunction takeListFromEnd(source: Array<any>, count: number) {\r\n  return source.slice(source.length - count, source.length);\r\n}\r\n\r\nconst dummyFn = () => {};\r\n\r\nfunction detectIsDepsDifferent(deps: Array<unknown>, prevDeps: Array<unknown>): boolean {\r\n  if (!detectIsUndefined(deps) && !detectIsUndefined(prevDeps) && deps.length > 0 && prevDeps.length > 0) {\r\n    for (let i = 0; i < prevDeps.length; i++) {\r\n      if (prevDeps[i] !== deps[i]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  error,\r\n  flatten,\r\n  getTime,\r\n  keyBy,\r\n  takeListFromEnd,\r\n  dummyFn,\r\n  detectIsDepsDifferent,\r\n};\r\n","import { ATTR_KEY } from '../constants';\r\nimport { error, detectIsEmpty } from '../helpers';\r\nimport type { DarkElementKey, DarkElementInstance } from '../shared';\r\nimport type { MutableRef } from '../ref';\r\nimport type { CreateElement, ComponentOptions, StandardComponentProps, SlotProps } from './types';\r\n\r\nconst $$component = Symbol('component');\r\nconst defaultOptions: ComponentOptions<any> = {\r\n  displayName: '',\r\n  defaultProps: {},\r\n  token: $$component,\r\n};\r\nclass ComponentFactory<P extends StandardComponentProps = any, R = any> {\r\n  public type: CreateElement<P>;\r\n  public token: Symbol;\r\n  public props: P;\r\n  public ref: MutableRef<R>;\r\n  public displayName: string;\r\n  public children: Array<DarkElementInstance> = [];\r\n  public shouldUpdate?: (props: P, nextProps: P) => boolean;\r\n\r\n  constructor(options: ComponentFactory<P>) {\r\n    this.type = options.type || null;\r\n    this.token = options.token || null;\r\n    this.props = options.props || null;\r\n    this.ref = options.ref || null;\r\n    this.displayName = options.displayName || '';\r\n    this.shouldUpdate = options.shouldUpdate || null;\r\n  }\r\n}\r\n\r\nfunction createComponent<P, R = any>(\r\n  createElement: CreateElement<P & SlotProps, R>,\r\n  options: ComponentOptions<P> = {},\r\n) {\r\n  type Props = P & StandardComponentProps;\r\n  const computedOptions = { ...defaultOptions, ...options };\r\n  const { token, defaultProps, displayName, shouldUpdate } = computedOptions;\r\n\r\n  return (props = {} as Props, ref?: MutableRef<R>): ComponentFactory<Props> => {\r\n    const computedProps = { ...defaultProps, ...props };\r\n    const factory = new ComponentFactory({\r\n      token,\r\n      ref,\r\n      displayName,\r\n      shouldUpdate,\r\n      props: computedProps,\r\n      type: createElement,\r\n      children: [],\r\n    });\r\n\r\n    if (computedProps.ref) {\r\n      delete computedProps.ref;\r\n\r\n      if (process.env.NODE_ENV === 'development') {\r\n        error(`[Dark]: To use ref you need to wrap the createComponent with forwardRef!`);\r\n      }\r\n    }\r\n\r\n    return factory;\r\n  };\r\n}\r\n\r\nconst detectIsComponentFactory = (factory: unknown): factory is ComponentFactory => factory instanceof ComponentFactory;\r\n\r\nconst getComponentFactoryKey = (factory: ComponentFactory): DarkElementKey =>\r\n  !detectIsEmpty(factory.props[ATTR_KEY]) ? factory.props[ATTR_KEY] : null;\r\n\r\nexport { ComponentFactory, createComponent, detectIsComponentFactory, getComponentFactoryKey };\r\n","export type ViewDef = {\r\n  as: string;\r\n  slot?: any;\r\n  isVoid?: boolean;\r\n  [prop: string]: any;\r\n};\r\n\r\nexport enum NodeType {\r\n  TAG = 'TAG',\r\n  TEXT = 'TEXT',\r\n  COMMENT = 'COMMENT',\r\n}\r\n","import type { Fiber } from '../fiber';\r\n\r\nclass Store {\r\n  public wipRoot: Fiber = null;\r\n  public currentRoot: Fiber = null;\r\n  public nextUnitOfWork: Fiber = null;\r\n  public fromHookUpdate = false;\r\n  public events: Map<string, WeakMap<object, Function>> = new Map();\r\n  public unsubscribers: Array<() => void> = [];\r\n  public deletions: Array<Fiber> = [];\r\n  public fiberMount = {\r\n    level: 0,\r\n    navigation: {},\r\n    isDeepWalking: true,\r\n  };\r\n  public componentFiber: Fiber = null;\r\n  public effects: Array<() => void> = [];\r\n  public layoutEffects: Array<() => void> = [];\r\n}\r\n\r\nlet rootId = null;\r\nconst stores = new Map<number, Store>();\r\n\r\nconst effectStoreHelper = {\r\n  set: (id: number) => effectStore(id),\r\n  remove: (id: number) => stores.delete(id),\r\n};\r\n\r\nconst getRootId = (): number => rootId;\r\n\r\nconst effectStore = (id: number) => {\r\n  rootId = id;\r\n  !stores.get(rootId) && stores.set(rootId, new Store());\r\n};\r\n\r\nconst storeHelper = {\r\n  get: (id: number = rootId) => stores.get(id),\r\n};\r\n\r\nconst wipRootHelper = {\r\n  get: () => storeHelper.get()?.wipRoot || null,\r\n  set: (fiber: Fiber) => (storeHelper.get().wipRoot = fiber),\r\n};\r\n\r\nconst currentRootHelper = {\r\n  get: (id?: number) => storeHelper.get(id)?.currentRoot || null,\r\n  set: (fiber: Fiber) => (storeHelper.get().currentRoot = fiber),\r\n};\r\n\r\nconst nextUnitOfWorkHelper = {\r\n  get: () => storeHelper.get()?.nextUnitOfWork || null,\r\n  set: (fiber: Fiber) => (storeHelper.get().nextUnitOfWork = fiber),\r\n};\r\n\r\nconst componentFiberHelper = {\r\n  get: () => storeHelper.get()?.componentFiber,\r\n  set: (fiber: Fiber) => (storeHelper.get().componentFiber = fiber),\r\n};\r\n\r\nconst fromHookUpdateHelper = {\r\n  get: () => storeHelper.get()?.fromHookUpdate || false,\r\n  set: (value: boolean) => (storeHelper.get().fromHookUpdate = value),\r\n};\r\n\r\nconst eventsHelper = {\r\n  get: () => storeHelper.get().events,\r\n  addUnsubscriber: (fn: () => void) => storeHelper.get().unsubscribers.push(fn),\r\n  mapUnsubscribers: (id: number) => storeHelper.get(id).unsubscribers.forEach(fn => fn()),\r\n};\r\n\r\nconst deletionsHelper = {\r\n  get: () => storeHelper.get().deletions,\r\n  set: (deletions: Array<Fiber>) => (storeHelper.get().deletions = deletions),\r\n};\r\n\r\nconst fiberMountHelper = {\r\n  reset: () => {\r\n    storeHelper.get().fiberMount = {\r\n      level: 0,\r\n      navigation: {},\r\n      isDeepWalking: true,\r\n    };\r\n  },\r\n  getIndex: () => storeHelper.get().fiberMount.navigation[storeHelper.get().fiberMount.level],\r\n  jumpToChild: () => {\r\n    const { fiberMount } = storeHelper.get();\r\n    const level = fiberMount.level;\r\n    const nextLevel = level + 1;\r\n\r\n    fiberMount.level = nextLevel;\r\n    fiberMount.navigation[nextLevel] = 0;\r\n  },\r\n  jumpToParent: () => {\r\n    const { fiberMount } = storeHelper.get();\r\n    const level = fiberMount.level;\r\n    const nextLevel = level - 1;\r\n\r\n    fiberMount.navigation[level] = 0;\r\n    fiberMount.level = nextLevel;\r\n  },\r\n  jumpToSibling: () => {\r\n    const { fiberMount } = storeHelper.get();\r\n    const level = fiberMount.level;\r\n    const idx = fiberMount.navigation[level] + 1;\r\n\r\n    fiberMount.navigation[level] = idx;\r\n  },\r\n  deepWalking: {\r\n    get: () => storeHelper.get().fiberMount.isDeepWalking,\r\n    set: (value: boolean) => (storeHelper.get().fiberMount.isDeepWalking = value),\r\n  },\r\n};\r\n\r\nconst effectsHelper = {\r\n  get: () => storeHelper.get().effects,\r\n  reset: () => (storeHelper.get().effects = []),\r\n  add: (effect: () => void) => storeHelper.get().effects.push(effect),\r\n};\r\n\r\nconst layoutEffectsHelper = {\r\n  get: () => storeHelper.get().layoutEffects,\r\n  reset: () => (storeHelper.get().layoutEffects = []),\r\n  add: (effect: () => void) => storeHelper.get().layoutEffects.push(effect),\r\n};\r\n\r\nexport {\r\n  getRootId,\r\n  effectStoreHelper,\r\n  wipRootHelper,\r\n  currentRootHelper,\r\n  nextUnitOfWorkHelper,\r\n  componentFiberHelper,\r\n  fromHookUpdateHelper,\r\n  eventsHelper,\r\n  deletionsHelper,\r\n  fiberMountHelper,\r\n  effectsHelper,\r\n  layoutEffectsHelper,\r\n};\r\n","import { detectIsUndefined, detectIsFunction, detectIsDepsDifferent } from '../helpers';\r\nimport { componentFiberHelper, effectsHelper } from '../scope';\r\nimport type { Fiber, Hook, HookValue } from '../fiber';\r\nimport type { Effect, EffectCleanup } from './types';\r\n\r\nconst $$useEffect = Symbol('use-effect');\r\n\r\nconst { useEffect, hasEffects, cleanupEffects } = createEffectFunctions($$useEffect, effectsHelper);\r\n\r\nfunction createEffectFunctions(token: Symbol, store: typeof effectsHelper) {\r\n  function useEffect(effect: Effect, deps?: Array<any>) {\r\n    const fiber = componentFiberHelper.get();\r\n    const hook = fiber.hook as Hook<HookValue<EffectCleanup>>;\r\n    const { idx, values } = hook;\r\n    const runEffect = () => {\r\n      values[idx] = {\r\n        deps,\r\n        token,\r\n        value: undefined,\r\n      };\r\n\r\n      store.add(() => {\r\n        values[idx].value = effect();\r\n      });\r\n    };\r\n\r\n    if (detectIsUndefined(values[idx])) {\r\n      runEffect();\r\n    } else {\r\n      const { deps: prevDeps, value: cleanup } = values[idx];\r\n      const isDepsDifferent = deps ? detectIsDepsDifferent(deps, prevDeps) : true;\r\n\r\n      if (isDepsDifferent) {\r\n        detectIsFunction(cleanup) && cleanup();\r\n        runEffect();\r\n      }\r\n    }\r\n\r\n    hook.idx++;\r\n  }\r\n\r\n  function hasEffects(fiber: Fiber) {\r\n    const { values } = fiber.hook as Hook<HookValue>;\r\n    const hasEffect = values.some(x => x.token === token);\r\n\r\n    return hasEffect;\r\n  }\r\n\r\n  function cleanupEffects(hook: Hook<HookValue<EffectCleanup>>) {\r\n    const { values } = hook;\r\n\r\n    for (const value of values) {\r\n      if (value.token === token) {\r\n        const cleanup = value.value;\r\n\r\n        detectIsFunction(cleanup) && cleanup();\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    useEffect,\r\n    hasEffects,\r\n    cleanupEffects,\r\n  };\r\n}\r\n\r\nexport { useEffect, hasEffects, cleanupEffects, createEffectFunctions };\r\n","import { EMPTY_NODE, ATTR_KEY } from '../constants';\r\nimport { detectIsArray, detectIsEmpty, detectIsFunction } from '../helpers';\r\nimport type { DarkElementKey } from '../shared';\r\nimport type { ComponentFactory, StandardComponentProps } from '../component';\r\nimport { NodeType, type ViewDef } from './types';\r\n\r\nexport type VirtualNodeFactory = () => VirtualNode;\r\nexport type TagVirtualNodeFactory = () => TagVirtualNode;\r\nexport type TextVirtualNodeFactory = () => TextVirtualNode;\r\nexport type CommentVirtualNodeFactory = () => CommentVirtualNode;\r\n\r\nconst $$virtualNode = Symbol('virtual-node');\r\n\r\nclass VirtualNode {\r\n  public type: NodeType = null;\r\n\r\n  constructor(options: Partial<VirtualNode>) {\r\n    this.type = options.type;\r\n  }\r\n}\r\n\r\nclass TagVirtualNode extends VirtualNode {\r\n  public type = NodeType.TAG;\r\n  public name: string = null;\r\n  public isVoid = false;\r\n  public attrs: Record<string, any> = {};\r\n  public children: Array<VirtualNodeFactory | ComponentFactory> = [];\r\n\r\n  constructor(options: Partial<TagVirtualNode>) {\r\n    super(options);\r\n    this.name = options.name || this.name;\r\n    this.isVoid = options.isVoid || this.isVoid;\r\n    this.attrs = options.attrs || this.attrs;\r\n    this.children = options.children || this.children;\r\n  }\r\n}\r\n\r\nclass TextVirtualNode extends VirtualNode {\r\n  public type = NodeType.TEXT;\r\n  public value = '';\r\n\r\n  constructor(text: string) {\r\n    super({});\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nclass CommentVirtualNode extends VirtualNode {\r\n  public type = NodeType.COMMENT;\r\n  public value = '';\r\n\r\n  constructor(text: string) {\r\n    super({});\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nconst detectIsVirtualNode = (vNode: unknown): vNode is VirtualNode => vNode instanceof VirtualNode;\r\nconst detectIsTagVirtualNode = (vNode: unknown): vNode is TagVirtualNode => vNode instanceof TagVirtualNode;\r\nconst detectIsCommentVirtualNode = (vNode: unknown): vNode is CommentVirtualNode => vNode instanceof CommentVirtualNode;\r\nconst detectIsTextVirtualNode = (vNode: unknown): vNode is TextVirtualNode => vNode instanceof TextVirtualNode;\r\nconst detectIsEmptyVirtualNode = (vNode: unknown): boolean =>\r\n  detectIsCommentVirtualNode(vNode) && vNode.value === EMPTY_NODE;\r\n\r\nfunction getVirtualNodeKey(vNode: TagVirtualNode): DarkElementKey | null {\r\n  const key = vNode && vNode.attrs[ATTR_KEY];\r\n\r\n  return !detectIsEmpty(key) ? key : null;\r\n}\r\n\r\nfunction Text(source: string | StandardComponentProps['slot']): string | TextVirtualNode {\r\n  const text =\r\n    typeof source === 'string' ? new TextVirtualNode(source) : detectIsTextVirtualNode(source) ? source.value : '';\r\n\r\n  return text;\r\n}\r\n\r\nfunction Comment(text: string): CommentVirtualNodeFactory {\r\n  const factory = () => new CommentVirtualNode(text);\r\n\r\n  factory[$$virtualNode] = true;\r\n\r\n  return factory;\r\n}\r\n\r\nfunction View(def: ViewDef): TagVirtualNodeFactory {\r\n  const factory = () => {\r\n    const { as, slot, isVoid = false, ...rest } = def;\r\n    const children = isVoid ? [] : detectIsArray(slot) ? slot : slot ? [slot] : [];\r\n\r\n    return new TagVirtualNode({\r\n      name: as,\r\n      isVoid,\r\n      attrs: { ...rest },\r\n      children: children as Array<VirtualNodeFactory>,\r\n    });\r\n  };\r\n\r\n  factory[$$virtualNode] = true;\r\n\r\n  return factory;\r\n}\r\n\r\nconst createEmptyVirtualNode = () => new CommentVirtualNode(EMPTY_NODE);\r\n\r\nconst detectIsVirtualNodeFactory = (factory: unknown): factory is VirtualNodeFactory =>\r\n  detectIsFunction(factory) && factory[$$virtualNode] === true;\r\n\r\nexport {\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsEmptyVirtualNode,\r\n  getVirtualNodeKey,\r\n  Text,\r\n  Comment,\r\n  View,\r\n  createEmptyVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n};\r\n","import { type KeyProps, createComponent, detectIsComponentFactory } from '../component';\r\n\r\nconst $$fragment = Symbol('fragment');\r\n\r\nconst Fragment = createComponent<KeyProps>(({ slot }) => slot || null, {\r\n  token: $$fragment,\r\n});\r\n\r\nconst detectIsFragment = (factory: unknown) => detectIsComponentFactory(factory) && factory.token === $$fragment;\r\n\r\nexport { Fragment, detectIsFragment };\r\n","import { detectIsObject, detectIsNull } from '../helpers';\r\nimport type { Component, RefProps, ComponentFactory } from '../component';\r\nimport type { MutableRef } from './types';\r\n\r\nfunction forwardRef<P, R>(component: Component<P, R>) {\r\n  type Props = P & RefProps<R>;\r\n\r\n  return ({ ref, ...rest }: Props) => {\r\n    return component(rest as P, ref) as ComponentFactory<P, R>;\r\n  };\r\n}\r\n\r\nconst detectIsRef = (ref: unknown) => {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref as MutableRef;\r\n\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport { forwardRef, detectIsRef };\r\n","import {\r\n  type Component,\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n  type RefProps,\r\n  type SlotProps,\r\n  createComponent,\r\n  detectIsComponentFactory,\r\n} from '../component';\r\nimport { type MutableRef, forwardRef } from '../ref';\r\n\r\ntype ShouldUpdate<T> = (props: T, nextProps: T) => boolean;\r\n\r\nconst $$memo = Symbol('memo');\r\n\r\nconst defaultShouldUpdate = (props: {}, nextProps: {}): boolean => {\r\n  const keys = Object.keys(nextProps);\r\n\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst detectIsMemo = (factory: unknown) => detectIsComponentFactory(factory) && factory.token === $$memo;\r\n\r\nfunction memo<T>(\r\n  component: (props: T, ref?: MutableRef<unknown>) => ComponentFactory<T, unknown>,\r\n  shouldUpdate: ShouldUpdate<T & SlotProps> = defaultShouldUpdate,\r\n): Component<T & StandardComponentProps> {\r\n  return forwardRef(\r\n    createComponent(\r\n      (props: T & RefProps, ref) => {\r\n        ref && (props.ref = ref);\r\n\r\n        return component(props);\r\n      },\r\n      { token: $$memo, shouldUpdate },\r\n    ),\r\n  );\r\n}\r\n\r\nexport { $$memo, memo, detectIsMemo };\r\n","import { type DarkElement } from '../shared';\r\nimport { detectIsUndefined, detectIsArray, detectIsDepsDifferent } from '../helpers';\r\nimport { detectIsComponentFactory, createComponent } from '../component';\r\nimport { detectIsVirtualNodeFactory } from '../view';\r\nimport { componentFiberHelper } from '../scope';\r\nimport { Fragment } from '../fragment';\r\nimport { $$memo } from '../memo';\r\n\r\nconst Memo = createComponent(({ slot }) => slot, { token: $$memo });\r\n\r\nfunction wrap<T>(value: T, isDepsDifferent: boolean) {\r\n  const check = (value: T) => detectIsVirtualNodeFactory(value) || detectIsComponentFactory(value);\r\n\r\n  if (detectIsArray(value) ? check(value[0]) : check(value)) {\r\n    const slot = value as unknown as DarkElement;\r\n    const factory = Memo({\r\n      slot: Fragment({ slot }),\r\n    });\r\n\r\n    factory.shouldUpdate = () => isDepsDifferent;\r\n\r\n    return factory;\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nfunction processValue<T>(getValue: () => T, isDepsDifferent = false) {\r\n  return wrap(getValue(), isDepsDifferent);\r\n}\r\n\r\nfunction useMemo<T>(getValue: () => T, deps: Array<any>): T {\r\n  const fiber = componentFiberHelper.get();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook;\r\n\r\n  if (detectIsUndefined(values[idx])) {\r\n    const value = processValue(getValue);\r\n\r\n    values[idx] = {\r\n      deps,\r\n      value,\r\n    };\r\n\r\n    hook.idx++;\r\n\r\n    return value as T;\r\n  }\r\n\r\n  const hookValue = values[idx];\r\n  const prevDeps = hookValue.deps as Array<any>;\r\n  const isDepsDifferent = detectIsDepsDifferent(deps, prevDeps);\r\n  const computedGetValue = isDepsDifferent ? getValue : () => hookValue.value;\r\n\r\n  hookValue.deps = deps;\r\n  hookValue.value = processValue(computedGetValue, isDepsDifferent);\r\n\r\n  hook.idx++;\r\n\r\n  return hookValue.value;\r\n}\r\n\r\nexport { useMemo };\r\n","import type { Platform } from './types';\r\n\r\nexport const platform: Platform = {\r\n  scheduleCallback: () => {\r\n    throw new Error('scheduleCallback not installed by renderer');\r\n  },\r\n  shouldYeildToHost: () => {\r\n    throw new Error('shouldYeildToHost not installed by renderer');\r\n  },\r\n  createNativeElement: () => {\r\n    throw new Error('createNativeElement not installed by renderer');\r\n  },\r\n  applyCommits: () => {\r\n    throw new Error('applyCommits not installed by renderer');\r\n  },\r\n  detectIsPortal: () => {\r\n    throw new Error('detectIsPortal not installed by renderer');\r\n  },\r\n  unmountPortal: () => {\r\n    throw new Error('unmountPortal not installed by renderer');\r\n  },\r\n};\r\n","export enum EffectTag {\r\n  PLACEMENT = 'PLACEMENT',\r\n  UPDATE = 'UPDATE',\r\n  DELETION = 'DELETION',\r\n  SKIP = 'SKIP',\r\n}\r\n\r\nexport type NativeElement = unknown;\r\n\r\nexport type HookValue<T = any> = {\r\n  token?: Symbol;\r\n  deps: Array<any>;\r\n  value: T;\r\n};\r\n\r\nexport type Hook<T = any> = {\r\n  idx: number;\r\n  values: Array<T>;\r\n};\r\n\r\nexport const cloneTagMap = {\r\n  [EffectTag.PLACEMENT]: true,\r\n  [EffectTag.SKIP]: true,\r\n};\r\n","import { layoutEffectsHelper } from '../scope';\r\nimport { createEffectFunctions } from '../use-effect';\r\n\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\n\r\nconst {\r\n  useEffect: useLayoutEffect,\r\n  hasEffects: hasLayoutEffects,\r\n  cleanupEffects: cleanupLayoutEffects,\r\n} = createEffectFunctions($$useLayoutEffect, layoutEffectsHelper);\r\n\r\nexport { useLayoutEffect, hasLayoutEffects, cleanupLayoutEffects };\r\n","import { type Fiber } from '../fiber';\r\n\r\ntype WalkFiberOptions<T> = {\r\n  fiber: Fiber;\r\n  onLoop: (options: OnLoopOptions<T>) => void;\r\n};\r\n\r\ntype OnLoopOptions<T> = {\r\n  nextFiber: Fiber<T>;\r\n  isReturn: boolean;\r\n  resetIsDeepWalking: () => void;\r\n  stop: () => void;\r\n};\r\n\r\nfunction walkFiber<T = unknown>(options: WalkFiberOptions<T>) {\r\n  const { fiber, onLoop } = options;\r\n  let nextFiber = fiber;\r\n  let isDeepWalking = true;\r\n  let isReturn = false;\r\n  let isStopped = false;\r\n  const visitedMap = new Map<Fiber, true>();\r\n  const detectCanVisit = (fiber: Fiber) => !visitedMap.get(fiber);\r\n\r\n  while (nextFiber) {\r\n    onLoop({\r\n      nextFiber: nextFiber as Fiber<T>,\r\n      isReturn,\r\n      resetIsDeepWalking: () => (isDeepWalking = false),\r\n      stop: () => (isStopped = true),\r\n    });\r\n\r\n    if (isStopped) {\r\n      break;\r\n    }\r\n\r\n    if (nextFiber.child && isDeepWalking && detectCanVisit(nextFiber.child)) {\r\n      const newFiber = nextFiber.child;\r\n\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap.set(newFiber, true);\r\n    } else if (nextFiber.nextSibling && detectCanVisit(nextFiber.nextSibling)) {\r\n      const newFiber = nextFiber.nextSibling;\r\n\r\n      isDeepWalking = true;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap.set(newFiber, true);\r\n    } else if (\r\n      nextFiber.parent &&\r\n      nextFiber.parent === fiber &&\r\n      nextFiber.parent.nextSibling &&\r\n      detectCanVisit(nextFiber.parent.nextSibling)\r\n    ) {\r\n      const newFiber = nextFiber.parent.nextSibling;\r\n\r\n      isDeepWalking = true;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap.set(newFiber, true);\r\n    } else if (nextFiber.parent && nextFiber.parent !== fiber) {\r\n      isDeepWalking = false;\r\n      isReturn = true;\r\n      nextFiber = nextFiber.parent;\r\n    } else {\r\n      nextFiber = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport { walkFiber };\r\n","import { type Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { detectIsComponentFactory } from '../component';\r\nimport { cleanupEffects } from '../use-effect';\r\nimport { cleanupLayoutEffects } from '../use-layout-effect';\r\nimport { walkFiber } from '../walk';\r\nimport { detectIsUndefined } from '../helpers';\r\nimport { currentRootHelper, eventsHelper, effectStoreHelper } from '../scope';\r\n\r\nfunction unmountFiber(fiber: Fiber) {\r\n  if (fiber.effectHost || fiber.layoutEffectHost) {\r\n    walkFiber({\r\n      fiber,\r\n      onLoop: ({ nextFiber, isReturn, stop }) => {\r\n        if (nextFiber === fiber.nextSibling || fiber.transposition) return stop();\r\n\r\n        if (!isReturn && detectIsComponentFactory(nextFiber.instance)) {\r\n          cleanupLayoutEffects(nextFiber.hook);\r\n          cleanupEffects(nextFiber.hook);\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  fiber.portalHost && platform.unmountPortal(fiber);\r\n}\r\n\r\nfunction unmountRoot(rootId: number, onComplete: () => void) {\r\n  if (detectIsUndefined(rootId)) return;\r\n\r\n  unmountFiber(currentRootHelper.get(rootId));\r\n  eventsHelper.mapUnsubscribers(rootId);\r\n  effectStoreHelper.remove(rootId);\r\n  onComplete();\r\n}\r\n\r\nexport { unmountFiber, unmountRoot };\r\n","import { flatten, detectIsEmpty, error, keyBy, takeListFromEnd, detectIsUndefined, detectIsArray } from '../helpers';\r\nimport { platform } from '../platform';\r\nimport {\r\n  wipRootHelper,\r\n  currentRootHelper,\r\n  nextUnitOfWorkHelper,\r\n  deletionsHelper,\r\n  fiberMountHelper,\r\n  componentFiberHelper,\r\n  fromHookUpdateHelper,\r\n  effectStoreHelper,\r\n  effectsHelper,\r\n  layoutEffectsHelper,\r\n} from '../scope';\r\nimport { type ComponentFactory, detectIsComponentFactory, getComponentFactoryKey } from '../component';\r\nimport {\r\n  type TagVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  createEmptyVirtualNode,\r\n  getVirtualNodeKey,\r\n  detectIsVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport type { Context, ContextProviderValue } from '../context';\r\nimport type { DarkElementKey, DarkElement, DarkElementInstance } from '../shared';\r\nimport { PARTIAL_UPDATE } from '../constants';\r\nimport { type NativeElement, type Hook, EffectTag, cloneTagMap } from './types';\r\nimport { hasEffects } from '../use-effect';\r\nimport { hasLayoutEffects } from '../use-layout-effect';\r\nimport { walkFiber } from '../walk';\r\nimport { unmountFiber } from '../unmount';\r\n\r\nclass Fiber<N = NativeElement> {\r\n  public nativeElement: N;\r\n  public parent: Fiber<N>;\r\n  public child: Fiber<N>;\r\n  public nextSibling: Fiber<N>;\r\n  public alternate: Fiber<N>;\r\n  public effectTag: EffectTag;\r\n  public instance: DarkElementInstance;\r\n  public hook: Hook;\r\n  public shadow: Fiber<N>;\r\n  public provider: Map<Context, ContextProviderValue>;\r\n  public transposition: boolean;\r\n  public mountedToHost: boolean;\r\n  public portalHost: boolean;\r\n  public effectHost: boolean;\r\n  public layoutEffectHost: boolean;\r\n  public childrenCount: number;\r\n  public marker: string;\r\n  public isUsed: boolean;\r\n  public catchException: (error: Error) => void;\r\n\r\n  constructor(options: Partial<Fiber<N>>) {\r\n    this.nativeElement = options.nativeElement || null;\r\n    this.parent = options.parent || null;\r\n    this.child = options.child || null;\r\n    this.nextSibling = options.nextSibling || null;\r\n    this.alternate = options.alternate || null;\r\n    this.effectTag = options.effectTag || null;\r\n    this.instance = options.instance || null;\r\n    this.hook = options.hook || createHook();\r\n    this.shadow = options.shadow || null;\r\n    this.provider = options.provider || null;\r\n    this.transposition = !detectIsUndefined(options.transposition) ? options.transposition : false;\r\n    this.mountedToHost = !detectIsUndefined(options.mountedToHost) || false;\r\n    this.portalHost = !detectIsUndefined(options.portalHost) ? options.portalHost : false;\r\n    this.effectHost = !detectIsUndefined(options.effectHost) ? options.effectHost : false;\r\n    this.layoutEffectHost = !detectIsUndefined(options.layoutEffectHost) ? options.layoutEffectHost : false;\r\n    this.childrenCount = options.childrenCount || 0;\r\n    this.marker = options.marker || '';\r\n    this.isUsed = options.isUsed || false;\r\n  }\r\n\r\n  public markPortalHost() {\r\n    this.portalHost = true;\r\n    this.parent && !this.parent.portalHost && this.parent.markPortalHost();\r\n  }\r\n\r\n  public markEffectHost() {\r\n    this.effectHost = true;\r\n    this.parent && !this.parent.effectHost && this.parent.markEffectHost();\r\n  }\r\n\r\n  public markLayoutEffectHost() {\r\n    this.layoutEffectHost = true;\r\n    this.parent && !this.parent.layoutEffectHost && this.parent.markLayoutEffectHost();\r\n  }\r\n\r\n  public setError(error: Error) {\r\n    if (typeof this.catchException === 'function') {\r\n      this.catchException(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n}\r\n\r\nfunction workLoop() {\r\n  const wipFiber = wipRootHelper.get();\r\n  let nextUnitOfWork = nextUnitOfWorkHelper.get();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(nextUnitOfWork);\r\n\r\n  while (nextUnitOfWork && !shouldYield) {\r\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\r\n    nextUnitOfWorkHelper.set(nextUnitOfWork);\r\n    hasMoreWork = Boolean(nextUnitOfWork);\r\n    shouldYield = platform.shouldYeildToHost();\r\n  }\r\n\r\n  if (!nextUnitOfWork && wipFiber) {\r\n    commitChanges();\r\n  }\r\n\r\n  return hasMoreWork;\r\n}\r\n\r\nfunction performUnitOfWork(fiber: Fiber) {\r\n  let isDeepWalking = true;\r\n  let nextFiber = fiber;\r\n  let shadow: Fiber = fiber.shadow;\r\n  let instance = fiber.instance;\r\n\r\n  while (true) {\r\n    isDeepWalking = fiberMountHelper.deepWalking.get();\r\n    nextFiber.hook.idx = 0;\r\n\r\n    if (isDeepWalking) {\r\n      const hasChildren = hasChildrenProp(instance) && instance.children.length > 0;\r\n\r\n      if (hasChildren) {\r\n        const { performedFiber, performedNextFiber, performedShadow, performedInstance } = performChild({\r\n          nextFiber,\r\n          shadow,\r\n          instance,\r\n        });\r\n\r\n        nextFiber = performedNextFiber;\r\n        shadow = performedShadow;\r\n        instance = performedInstance;\r\n\r\n        if (performedFiber) return performedFiber;\r\n      } else {\r\n        const { performedFiber, performedNextFiber, performedShadow, performedInstance } = performSibling({\r\n          nextFiber,\r\n          shadow,\r\n          instance,\r\n        });\r\n\r\n        nextFiber = performedNextFiber;\r\n        shadow = performedShadow;\r\n        instance = performedInstance;\r\n\r\n        if (performedFiber) return performedFiber;\r\n      }\r\n    } else {\r\n      const { performedFiber, performedNextFiber, performedShadow, performedInstance } = performSibling({\r\n        nextFiber,\r\n        shadow,\r\n        instance,\r\n      });\r\n\r\n      nextFiber = performedNextFiber;\r\n      shadow = performedShadow;\r\n      instance = performedInstance;\r\n\r\n      if (performedFiber) return performedFiber;\r\n    }\r\n\r\n    performPartialUpdateEffects(nextFiber);\r\n\r\n    if (nextFiber.parent === null) return null;\r\n  }\r\n}\r\n\r\nfunction performPartialUpdateEffects(nextFiber: Fiber) {\r\n  if (nextFiber.marker === PARTIAL_UPDATE) {\r\n    const alternate = nextFiber.child?.alternate || null;\r\n    const fiber = nextFiber.child || null;\r\n\r\n    if (alternate && fiber && alternate.nextSibling && !fiber.nextSibling) {\r\n      let nextFiber = alternate.nextSibling;\r\n      const deletions: Array<Fiber> = [];\r\n\r\n      while (nextFiber) {\r\n        nextFiber.effectTag = EffectTag.DELETION;\r\n        deletions.push(nextFiber);\r\n        nextFiber = nextFiber.nextSibling;\r\n      }\r\n\r\n      deletionsHelper.get().push(...deletions);\r\n    }\r\n  }\r\n}\r\n\r\ntype PerformChildOptions = {\r\n  nextFiber: Fiber;\r\n  shadow: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction performChild(options: PerformChildOptions) {\r\n  fiberMountHelper.jumpToChild();\r\n  let nextFiber = options.nextFiber;\r\n  let shadow = options.shadow;\r\n  let instance = options.instance;\r\n\r\n  shadow = shadow ? shadow.child : null;\r\n\r\n  const alternate = getChildAlternate(nextFiber);\r\n  const hook = getHook({ shadow, alternate, instance });\r\n  const provider = shadow ? shadow.provider : alternate ? alternate.provider : null;\r\n  let fiber = new Fiber({ hook, provider });\r\n\r\n  componentFiberHelper.set(fiber);\r\n  fiber.parent = nextFiber;\r\n\r\n  const { performedInstance, performedShadow } = pertformInstance({\r\n    instance,\r\n    idx: 0,\r\n    fiber,\r\n    alternate,\r\n  });\r\n  instance = performedInstance || instance;\r\n  shadow = performedShadow || shadow;\r\n  alternate && mutateAlternate({ fiber, alternate, instance });\r\n  mutateFiber({ fiber, alternate, instance });\r\n  fiber = alternate ? performMemo({ fiber, alternate, instance }) : fiber;\r\n\r\n  nextFiber.child = fiber;\r\n  fiber.parent = nextFiber;\r\n  fiber.shadow = shadow;\r\n  nextFiber = fiber;\r\n\r\n  cloneTagMap[fiber.parent.effectTag] && (fiber.effectTag = fiber.parent.effectTag);\r\n\r\n  return {\r\n    performedFiber: nextFiber,\r\n    performedNextFiber: nextFiber,\r\n    performedShadow: shadow,\r\n    performedInstance: instance,\r\n  };\r\n}\r\n\r\ntype PerformSiblingOptions = {\r\n  nextFiber: Fiber;\r\n  shadow: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction performSibling(options: PerformSiblingOptions) {\r\n  fiberMountHelper.jumpToSibling();\r\n  let nextFiber = options.nextFiber;\r\n  let shadow = options.shadow;\r\n  let instance = options.instance;\r\n  const parent = nextFiber.parent.instance;\r\n  const childrenIdx = fiberMountHelper.getIndex();\r\n  const hasSibling = hasChildrenProp(parent) && parent.children[childrenIdx];\r\n\r\n  if (hasSibling) {\r\n    fiberMountHelper.deepWalking.set(true);\r\n\r\n    shadow = shadow ? shadow.nextSibling : null;\r\n    const alternate = getNextSiblingAlternate(nextFiber);\r\n    const hook = getHook({ shadow, alternate, instance });\r\n    const provider = shadow ? shadow.provider : alternate ? alternate.provider : null;\r\n    let fiber = new Fiber({ hook, provider });\r\n\r\n    componentFiberHelper.set(fiber);\r\n    fiber.parent = nextFiber.parent;\r\n\r\n    const { performedInstance, performedShadow } = pertformInstance({\r\n      instance: parent,\r\n      idx: childrenIdx,\r\n      fiber,\r\n      alternate,\r\n    });\r\n    instance = performedInstance || instance;\r\n    shadow = performedShadow || shadow;\r\n    alternate && mutateAlternate({ fiber, alternate, instance });\r\n    mutateFiber({ fiber, alternate, instance });\r\n    fiber = alternate ? performMemo({ fiber, alternate, instance }) : fiber;\r\n\r\n    fiber.parent = nextFiber.parent;\r\n    nextFiber.nextSibling = fiber;\r\n    fiber.shadow = shadow;\r\n    nextFiber = fiber;\r\n\r\n    cloneTagMap[fiber.parent.effectTag] && (fiber.effectTag = fiber.parent.effectTag);\r\n\r\n    return {\r\n      performedFiber: nextFiber,\r\n      performedNextFiber: nextFiber,\r\n      performedShadow: shadow,\r\n      performedInstance: instance,\r\n    };\r\n  } else {\r\n    fiberMountHelper.jumpToParent();\r\n    fiberMountHelper.deepWalking.set(false);\r\n    shadow = shadow ? shadow.parent : null;\r\n    nextFiber = nextFiber.parent;\r\n    instance = nextFiber.instance;\r\n\r\n    if (hasChildrenProp(nextFiber.instance)) {\r\n      nextFiber.instance.children = [];\r\n    }\r\n  }\r\n\r\n  return {\r\n    performedFiber: null,\r\n    performedNextFiber: nextFiber,\r\n    performedShadow: shadow,\r\n    performedInstance: instance,\r\n  };\r\n}\r\n\r\ntype MutateFiberOptions = {\r\n  fiber: Fiber;\r\n  alternate: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction mutateFiber(options: MutateFiberOptions) {\r\n  const { fiber, alternate, instance } = options;\r\n  const key = alternate ? getElementKey(alternate.instance) : null;\r\n  const nextKey = alternate ? getElementKey(instance) : null;\r\n  const isDifferentKeys = key !== nextKey;\r\n  const isSameType = Boolean(alternate) && getInstanceType(alternate.instance) === getInstanceType(instance);\r\n  const isUpdate = isSameType && !isDifferentKeys;\r\n\r\n  fiber.instance = instance;\r\n  fiber.alternate = alternate || null;\r\n  fiber.nativeElement = isUpdate ? alternate.nativeElement : null;\r\n  fiber.effectTag = isUpdate ? EffectTag.UPDATE : EffectTag.PLACEMENT;\r\n  fiber.mountedToHost = fiber.nativeElement ? isUpdate : false;\r\n\r\n  if (hasChildrenProp(fiber.instance)) {\r\n    fiber.childrenCount = fiber.instance.children.length;\r\n  }\r\n\r\n  if (fiber.alternate) {\r\n    fiber.alternate.shadow = null;\r\n    fiber.alternate.alternate = null;\r\n  }\r\n\r\n  if (!fiber.nativeElement && detectIsVirtualNode(fiber.instance)) {\r\n    fiber.nativeElement = platform.createNativeElement(fiber);\r\n  }\r\n}\r\n\r\ntype PerformAlternateOptions = {\r\n  fiber: Fiber;\r\n  alternate: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction mutateAlternate(options: PerformAlternateOptions) {\r\n  const { fiber, alternate, instance } = options;\r\n  const alternateType = getInstanceType(alternate.instance);\r\n  const elementType = getInstanceType(instance);\r\n  const isSameType = elementType === alternateType;\r\n  const prevKey = getElementKey(alternate.instance);\r\n  const nextKey = getElementKey(instance);\r\n  const isSameKeys = prevKey === nextKey;\r\n\r\n  alternate.isUsed = true;\r\n\r\n  if (!isSameType || !isSameKeys) {\r\n    alternate.effectTag = EffectTag.DELETION;\r\n    deletionsHelper.get().push(alternate);\r\n  } else if (hasChildrenProp(alternate.instance) && hasChildrenProp(instance)) {\r\n    const prevElementsCount = alternate.childrenCount;\r\n    const nextElementsCount = instance.children.length;\r\n    const isRequestedKeys = prevElementsCount !== nextElementsCount;\r\n\r\n    if (isRequestedKeys) {\r\n      const isRemovingCase = nextElementsCount < prevElementsCount;\r\n      const isInsertingCase = nextElementsCount > prevElementsCount;\r\n      const children = hasChildrenProp(instance) ? instance.children : [];\r\n      const { keys, nextKeys } = extractKeys(alternate.child, children);\r\n      const hasKeys = keys.length > 0;\r\n      const hasAnyKeys = hasKeys || nextKeys.length > 0;\r\n\r\n      if (process.env.NODE_ENV === 'development') {\r\n        if (!hasAnyKeys && prevElementsCount !== 0 && nextElementsCount !== 0) {\r\n          error(`\r\n            [Dark]: Operation of inserting, adding, replacing elements into list requires to have a unique key for every node (string or number, but not array index)!\r\n          `);\r\n        }\r\n      }\r\n\r\n      const performRemovingNodes = () => {\r\n        const diffKeys = getDiffKeys(keys, nextKeys);\r\n\r\n        if (diffKeys.length > 0) {\r\n          const fibersMap = createFibersByKeyMap(alternate.child);\r\n\r\n          for (const key of diffKeys) {\r\n            const fiber = fibersMap[key] || null;\r\n\r\n            if (fiber) {\r\n              fiber.effectTag = EffectTag.DELETION;\r\n              deletionsHelper.get().push(fiber);\r\n            }\r\n          }\r\n        } else if (!hasKeys) {\r\n          const diffCount = prevElementsCount - nextElementsCount;\r\n          const fibers: Array<Fiber> = takeListFromEnd(getSiblingFibers(alternate.child), diffCount);\r\n\r\n          for (const fiber of fibers) {\r\n            fiber.effectTag = EffectTag.DELETION;\r\n          }\r\n\r\n          deletionsHelper.get().push(...fibers);\r\n        }\r\n      };\r\n\r\n      const performInsertingNodes = () => {\r\n        const diffKeys = getDiffKeys(nextKeys, keys);\r\n\r\n        if (diffKeys.length > 0) {\r\n          const diffKeyMap = keyBy(diffKeys, x => x);\r\n          const fibersByPositionsMap = createFibersByPositionMap(alternate.child);\r\n          const usedKeyMap = {};\r\n          let keyIdx = 0;\r\n\r\n          for (const nextKey of nextKeys) {\r\n            if (process.env.NODE_ENV === 'development') {\r\n              if (usedKeyMap[nextKey]) {\r\n                error(`Some key of node already has been used!`);\r\n              }\r\n            }\r\n\r\n            usedKeyMap[nextKey] = true;\r\n\r\n            if (nextKey !== keys[keyIdx] && diffKeyMap[nextKey]) {\r\n              const insertionFiber = new Fiber({\r\n                instance: createEmptyVirtualNode(),\r\n                parent: alternate,\r\n                effectTag: EffectTag.PLACEMENT,\r\n              });\r\n\r\n              if (keyIdx === 0) {\r\n                insertionFiber.nextSibling = alternate.child;\r\n                alternate.child = insertionFiber;\r\n              } else {\r\n                const fiber = fibersByPositionsMap[keyIdx] || null;\r\n\r\n                if (fiber) {\r\n                  insertionFiber.nextSibling = fiber;\r\n                }\r\n              }\r\n            }\r\n\r\n            keyIdx++;\r\n          }\r\n        }\r\n      };\r\n\r\n      isRemovingCase && performRemovingNodes();\r\n      isInsertingCase && performInsertingNodes();\r\n    }\r\n  }\r\n}\r\n\r\ntype PerformMemoOptions = {\r\n  fiber: Fiber;\r\n  alternate: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction performMemo(options: PerformMemoOptions) {\r\n  const { fiber, alternate, instance } = options;\r\n\r\n  if (detectIsMemo(fiber.instance)) {\r\n    let memoFiber: Fiber = null;\r\n    const factory = instance as ComponentFactory;\r\n    const alternateFactory = alternate.instance as ComponentFactory;\r\n\r\n    if (factory.type !== alternateFactory.type) return fiber;\r\n\r\n    const props = alternateFactory.props;\r\n    const nextProps = factory.props;\r\n    const skip = !factory.shouldUpdate(props, nextProps);\r\n\r\n    if (skip) {\r\n      let nextFiber: Fiber = null;\r\n      fiberMountHelper.deepWalking.set(false);\r\n\r\n      memoFiber = new Fiber({\r\n        ...alternate,\r\n        alternate,\r\n        effectTag: EffectTag.SKIP,\r\n        nextSibling: alternate.nextSibling\r\n          ? alternate.nextSibling.effectTag === EffectTag.DELETION\r\n            ? null\r\n            : alternate.nextSibling\r\n          : null,\r\n      });\r\n\r\n      alternate.alternate = null;\r\n      nextFiber = memoFiber.child;\r\n\r\n      while (nextFiber) {\r\n        nextFiber.parent = memoFiber;\r\n        nextFiber = nextFiber.nextSibling;\r\n      }\r\n\r\n      if (memoFiber.effectHost) {\r\n        fiber.markEffectHost();\r\n      }\r\n\r\n      if (memoFiber.layoutEffectHost) {\r\n        fiber.markLayoutEffectHost();\r\n      }\r\n\r\n      if (memoFiber.portalHost) {\r\n        fiber.markPortalHost();\r\n      }\r\n\r\n      return memoFiber;\r\n    }\r\n  }\r\n\r\n  return fiber;\r\n}\r\n\r\ntype PerformInstanceOptions = {\r\n  instance: DarkElementInstance;\r\n  idx: number;\r\n  fiber: Fiber;\r\n  alternate: Fiber;\r\n};\r\n\r\nfunction pertformInstance(options: PerformInstanceOptions) {\r\n  const { instance, idx, fiber, alternate } = options;\r\n  let performedInstance: DarkElementInstance = null;\r\n  let performedShadow: Fiber = null;\r\n\r\n  if (hasChildrenProp(instance)) {\r\n    const elements = detectIsArray(instance.children[idx])\r\n      ? flatten([instance.children[idx]])\r\n      : [instance.children[idx]];\r\n\r\n    instance.children.splice(idx, 1, ...elements);\r\n    performedInstance = instance.children[idx];\r\n    performedShadow = alternate\r\n      ? getRootShadow({\r\n          instance: performedInstance,\r\n          fiber,\r\n          alternate,\r\n        })\r\n      : performedShadow;\r\n    performedInstance = mountInstance(fiber, performedInstance);\r\n  }\r\n\r\n  if (detectIsComponentFactory(performedInstance)) {\r\n    if (hasEffects(fiber)) {\r\n      fiber.markEffectHost();\r\n    }\r\n\r\n    if (hasLayoutEffects(fiber)) {\r\n      fiber.markLayoutEffectHost();\r\n    }\r\n\r\n    if (platform.detectIsPortal(performedInstance)) {\r\n      fiber.markPortalHost();\r\n    }\r\n  }\r\n\r\n  return {\r\n    performedInstance,\r\n    performedShadow,\r\n  };\r\n}\r\n\r\ntype GetRootShadowOptions = {\r\n  instance: DarkElementInstance;\r\n  fiber: Fiber;\r\n  alternate: Fiber;\r\n};\r\n\r\nfunction getRootShadow(options: GetRootShadowOptions) {\r\n  const { instance, fiber, alternate } = options;\r\n  const key = getElementKey(alternate.instance);\r\n  const nextKey = getElementKey(instance);\r\n  let shadow: Fiber = null;\r\n\r\n  if (key !== nextKey) {\r\n    shadow = getAlternateByKey(nextKey, alternate.parent.child);\r\n\r\n    if (shadow) {\r\n      fiber.hook = shadow.hook;\r\n      fiber.provider = shadow.provider;\r\n      alternate.transposition = true;\r\n    }\r\n  }\r\n\r\n  return shadow;\r\n}\r\n\r\nfunction mountInstance(fiber: Fiber, instance: DarkElementInstance) {\r\n  const isComponentFactory = detectIsComponentFactory(instance);\r\n  const factory = instance as ComponentFactory;\r\n\r\n  if (isComponentFactory) {\r\n    try {\r\n      const result = factory.type(factory.props, factory.ref);\r\n\r\n      factory.children = detectIsArray(result)\r\n        ? (flatten([result]) as Array<DarkElementInstance>)\r\n        : ([result] as Array<DarkElementInstance>);\r\n    } catch (err) {\r\n      factory.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(instance)) {\r\n    instance = instance();\r\n  }\r\n\r\n  if (hasChildrenProp(instance)) {\r\n    for (let i = 0; i < instance.children.length; i++) {\r\n      if (!instance.children[i]) {\r\n        instance.children[i] = transformElementInstance(instance.children[i]) as DarkElementInstance;\r\n      }\r\n    }\r\n\r\n    instance.children = isComponentFactory\r\n      ? instance.children\r\n      : detectIsArray(instance.children)\r\n      ? flatten([instance.children])\r\n      : [instance.children];\r\n\r\n    if (isComponentFactory && factory.children.length === 0) {\r\n      factory.children.push(createEmptyVirtualNode());\r\n    }\r\n  }\r\n\r\n  return instance;\r\n}\r\n\r\nfunction createFibersByPositionMap(fiber: Fiber) {\r\n  let nextFiber = fiber;\r\n  let position = 0;\r\n  const map: Record<string, Fiber> = {};\r\n\r\n  while (nextFiber) {\r\n    map[position] = nextFiber;\r\n\r\n    position++;\r\n    nextFiber = nextFiber.nextSibling;\r\n  }\r\n\r\n  return map;\r\n}\r\n\r\nfunction createFibersByKeyMap(fiber: Fiber) {\r\n  let nextFiber = fiber;\r\n  const map: Record<string, Fiber> = {};\r\n\r\n  while (nextFiber) {\r\n    const key = getElementKey(nextFiber.instance);\r\n\r\n    if (!detectIsEmpty(key)) {\r\n      map[key] = nextFiber;\r\n    }\r\n\r\n    nextFiber = nextFiber.nextSibling;\r\n  }\r\n\r\n  return map;\r\n}\r\n\r\nfunction extractKeys(alternate: Fiber, children: Array<DarkElementInstance>) {\r\n  let nextFiber = alternate;\r\n  let idx = 0;\r\n  const keys: Array<DarkElementKey> = [];\r\n  const nextKeys: Array<DarkElementKey> = [];\r\n\r\n  while (nextFiber || idx < children.length) {\r\n    const key = nextFiber && getElementKey(nextFiber.instance);\r\n    const nextKey = children[idx] && getElementKey(children[idx]);\r\n\r\n    if (!detectIsEmpty(key)) {\r\n      keys.push(key);\r\n    }\r\n\r\n    if (!detectIsEmpty(nextKey)) {\r\n      nextKeys.push(nextKey);\r\n    }\r\n\r\n    nextFiber = nextFiber ? nextFiber.nextSibling : null;\r\n    idx++;\r\n  }\r\n\r\n  return {\r\n    keys,\r\n    nextKeys,\r\n  };\r\n}\r\n\r\nfunction getAlternateByKey(key: DarkElementKey, fiber: Fiber) {\r\n  if (detectIsEmpty(key)) return null;\r\n  let nextFiber = fiber;\r\n\r\n  while (nextFiber) {\r\n    if (key === getElementKey(nextFiber.instance)) {\r\n      return nextFiber;\r\n    }\r\n\r\n    nextFiber = nextFiber.nextSibling;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getElementKey(instance: DarkElementInstance): DarkElementKey | null {\r\n  const key = detectIsComponentFactory(instance)\r\n    ? getComponentFactoryKey(instance)\r\n    : detectIsTagVirtualNode(instance)\r\n    ? getVirtualNodeKey(instance)\r\n    : null;\r\n\r\n  return key;\r\n}\r\n\r\nfunction getDiffKeys(keys: Array<DarkElementKey>, nextKeys: Array<DarkElementKey>): Array<DarkElementKey> {\r\n  const nextKeysMap = nextKeys.reduce((acc, key) => ((acc[key] = true), acc), {});\r\n  const diff = [];\r\n\r\n  for (const key of keys) {\r\n    if (!nextKeysMap[key]) {\r\n      diff.push(key);\r\n    }\r\n  }\r\n\r\n  return diff;\r\n}\r\n\r\nfunction getChildAlternate(fiber: Fiber): Fiber | null {\r\n  let alternate = fiber.alternate && fiber.alternate.effectTag !== EffectTag.DELETION ? fiber.alternate.child : null;\r\n\r\n  while (alternate && alternate.effectTag === EffectTag.DELETION) {\r\n    alternate = alternate.nextSibling;\r\n  }\r\n\r\n  return alternate;\r\n}\r\n\r\nfunction getNextSiblingAlternate(fiber: Fiber): Fiber | null {\r\n  let alternate = fiber.alternate?.nextSibling || null;\r\n\r\n  while (alternate && alternate.effectTag === EffectTag.DELETION) {\r\n    alternate = alternate.nextSibling;\r\n  }\r\n\r\n  return alternate;\r\n}\r\n\r\nfunction transformElementInstance(instance: DarkElement) {\r\n  return detectIsEmpty(instance) || instance === false ? createEmptyVirtualNode() : instance;\r\n}\r\n\r\nfunction getInstanceType(instance: DarkElementInstance): string | Function {\r\n  return detectIsTagVirtualNode(instance)\r\n    ? instance.name\r\n    : detectIsVirtualNode(instance)\r\n    ? instance.type\r\n    : detectIsComponentFactory(instance)\r\n    ? instance.type\r\n    : null;\r\n}\r\n\r\nfunction getSiblingFibers(fiber: Fiber): Array<Fiber> {\r\n  const list = [];\r\n  let nextFiber = fiber;\r\n\r\n  while (nextFiber) {\r\n    list.push(nextFiber);\r\n    nextFiber = nextFiber.nextSibling;\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction hasChildrenProp(element: DarkElementInstance): element is TagVirtualNode | ComponentFactory {\r\n  return detectIsTagVirtualNode(element) || detectIsComponentFactory(element);\r\n}\r\n\r\nfunction commitChanges() {\r\n  const wipFiber = wipRootHelper.get();\r\n  const fromHook = fromHookUpdateHelper.get();\r\n  const deletions = deletionsHelper.get();\r\n  const hasEffects = Boolean(wipFiber.alternate?.effectHost);\r\n  const hasLayoutEffects = Boolean(wipFiber.alternate?.layoutEffectHost);\r\n  const hasPortals = Boolean(wipFiber.alternate?.portalHost);\r\n\r\n  if (hasEffects || hasLayoutEffects || hasPortals) {\r\n    for (const fiber of deletions) {\r\n      unmountFiber(fiber);\r\n    }\r\n  }\r\n\r\n  commitWork(wipFiber.child, () => {\r\n    const layoutEffects = layoutEffectsHelper.get();\r\n    const effects = effectsHelper.get();\r\n\r\n    for (const fiber of deletions) {\r\n      platform.applyCommits(fiber);\r\n    }\r\n\r\n    deletionsHelper.set([]);\r\n    wipRootHelper.set(null);\r\n\r\n    for (const layoutEffect of layoutEffects) {\r\n      layoutEffect();\r\n    }\r\n\r\n    setTimeout(() => {\r\n      for (const effect of effects) {\r\n        effect();\r\n      }\r\n    });\r\n\r\n    layoutEffectsHelper.reset();\r\n    effectsHelper.reset();\r\n\r\n    if (fromHook) {\r\n      fromHookUpdateHelper.set(false);\r\n    } else {\r\n      currentRootHelper.set(wipFiber);\r\n    }\r\n  });\r\n}\r\n\r\nfunction commitWork(fiber: Fiber, onComplete: Function) {\r\n  walkFiber({\r\n    fiber,\r\n    onLoop: ({ nextFiber, isReturn, resetIsDeepWalking }) => {\r\n      const skip = nextFiber.effectTag === EffectTag.SKIP;\r\n\r\n      if (skip) {\r\n        resetIsDeepWalking();\r\n      } else if (!isReturn) {\r\n        platform.applyCommits(nextFiber);\r\n      }\r\n\r\n      if (nextFiber && nextFiber.shadow) {\r\n        nextFiber.shadow = null;\r\n      }\r\n    },\r\n  });\r\n\r\n  onComplete();\r\n}\r\n\r\nfunction createHook(): Hook {\r\n  return {\r\n    idx: 0,\r\n    values: [],\r\n  };\r\n}\r\n\r\ntype GetHookOptions = {\r\n  shadow: Fiber;\r\n  alternate: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction getHook(options: GetHookOptions) {\r\n  const { shadow, alternate, instance } = options;\r\n\r\n  if (shadow) return shadow.hook;\r\n\r\n  if (alternate && getElementKey(alternate.instance) === getElementKey(instance)) {\r\n    return alternate.hook;\r\n  }\r\n\r\n  return createHook();\r\n}\r\n\r\ntype CreateUpdateCallbackOptions = {\r\n  rootId: number;\r\n  fiber: Fiber;\r\n  forceStart?: boolean;\r\n  onStart: () => void;\r\n};\r\n\r\nfunction createUpdateCallback(options: CreateUpdateCallbackOptions) {\r\n  const { rootId, fiber, forceStart = false, onStart } = options;\r\n  const callback = () => {\r\n    forceStart && onStart();\r\n    if (fiber.isUsed) return;\r\n    !forceStart && onStart();\r\n    effectStoreHelper.set(rootId); // important order!\r\n    fromHookUpdateHelper.set(true);\r\n    fiberMountHelper.reset();\r\n\r\n    fiber.alternate = new Fiber({\r\n      ...fiber,\r\n      alternate: null,\r\n    });\r\n    fiber.marker = PARTIAL_UPDATE;\r\n    fiber.effectTag = EffectTag.UPDATE;\r\n    fiber.child = null;\r\n\r\n    wipRootHelper.set(fiber);\r\n    componentFiberHelper.set(fiber);\r\n    fiber.instance = mountInstance(fiber, fiber.instance);\r\n    nextUnitOfWorkHelper.set(fiber);\r\n  };\r\n\r\n  return callback;\r\n}\r\n\r\nexport { Fiber, workLoop, createHook, hasChildrenProp, createUpdateCallback };\r\n","import { platform, type ScheduleCallbackOptions } from '../platform';\r\nimport { getRootId, componentFiberHelper } from '../scope';\r\nimport { createUpdateCallback } from '../fiber';\r\nimport { useMemo } from '../use-memo';\r\nimport { dummyFn } from '../helpers';\r\n\r\nfunction useUpdate(options?: ScheduleCallbackOptions) {\r\n  const rootId = getRootId();\r\n  const fiber = componentFiberHelper.get();\r\n  const scope = useMemo(() => ({ fiber }), []);\r\n\r\n  scope.fiber = fiber;\r\n\r\n  const update = (onStart?: () => void) => {\r\n    const callback = createUpdateCallback({\r\n      rootId,\r\n      fiber: scope.fiber,\r\n      forceStart: Boolean(options?.timeoutMs),\r\n      onStart: onStart || dummyFn,\r\n    });\r\n\r\n    platform.scheduleCallback(callback, options);\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nexport { useUpdate };\r\n","import { useEffect } from '../use-effect';\r\nimport { useMemo } from '../use-memo';\r\nimport { componentFiberHelper } from '../scope';\r\nimport { useUpdate } from '../use-update';\r\nimport type { Fiber } from '../fiber';\r\nimport type { Context, ContextProviderValue } from '../context';\r\n\r\nfunction useContext<T>(context: Context<T>): T {\r\n  const { defaultValue } = context;\r\n  const fiber = componentFiberHelper.get();\r\n  const provider = getProvider<T>(context, fiber);\r\n  const value = provider ? provider.value : defaultValue;\r\n  const update = useUpdate();\r\n  const scope = useMemo(() => ({ prevValue: value }), []);\r\n  const hasProvider = Boolean(provider);\r\n\r\n  useEffect(() => {\r\n    if (!hasProvider) return;\r\n\r\n    const subscriber = (newValue: T) => {\r\n      if (!Object.is(scope.prevValue, newValue)) {\r\n        update();\r\n      }\r\n    };\r\n\r\n    provider.subscribers.push(subscriber);\r\n\r\n    return () => {\r\n      const idx = provider.subscribers.findIndex(x => x === subscriber);\r\n\r\n      if (idx !== -1) {\r\n        provider.subscribers.splice(idx, 1);\r\n      }\r\n    };\r\n  }, [hasProvider]);\r\n\r\n  scope.prevValue = value;\r\n\r\n  return value;\r\n}\r\n\r\nfunction getProvider<T>(context: Context<T>, fiber: Fiber): ContextProviderValue<T> {\r\n  let nextFiber = fiber;\r\n\r\n  while (nextFiber) {\r\n    if (nextFiber.provider && nextFiber.provider.get(context)) {\r\n      return nextFiber.provider.get(context) as ContextProviderValue<T>;\r\n    }\r\n\r\n    nextFiber = nextFiber.parent;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { useContext };\r\n","import { createComponent } from '../component';\r\nimport { useEffect } from '../use-effect';\r\nimport { componentFiberHelper } from '../scope';\r\nimport { useContext } from '../use-context';\r\nimport { detectIsFunction } from '../helpers';\r\nimport type { Context, ContexProviderProps } from './types';\r\n\r\nfunction createContext<T>(defaultValue: T): Context<T> {\r\n  let displayName = 'Context';\r\n  const context: Context<T> = {\r\n    displayName,\r\n    defaultValue,\r\n    Provider: null,\r\n    Consumer: null,\r\n  };\r\n\r\n  mutateContext(context, defaultValue, displayName);\r\n\r\n  Object.defineProperty(context, 'displayName', {\r\n    get: () => displayName,\r\n    set: (newValue: string) => {\r\n      displayName = newValue;\r\n      mutateContext(context, defaultValue, displayName);\r\n    },\r\n  });\r\n\r\n  return context;\r\n}\r\n\r\nfunction mutateContext<T>(context: Context<T>, defaultValue: T, displayName: string) {\r\n  context.Provider = createProvider(context, defaultValue, displayName);\r\n  context.Consumer = createConsumer(context, displayName);\r\n}\r\n\r\nfunction createProvider<T>(context: Context<T>, defaultValue: T, displayName: string) {\r\n  return createComponent<ContexProviderProps<T>>(\r\n    ({ value = defaultValue, slot }) => {\r\n      const fiber = componentFiberHelper.get();\r\n\r\n      if (!fiber.provider) {\r\n        fiber.provider = new Map();\r\n      }\r\n\r\n      if (!fiber.provider.get(context)) {\r\n        fiber.provider.set(context, {\r\n          subscribers: [],\r\n          value,\r\n        });\r\n      }\r\n\r\n      const provider = fiber.provider.get(context);\r\n\r\n      useEffect(() => {\r\n        for (const subscriber of provider.subscribers) {\r\n          subscriber(value);\r\n        }\r\n      }, [value]);\r\n\r\n      provider.value = value;\r\n\r\n      return slot;\r\n    },\r\n    { displayName: `${displayName}.Provider` },\r\n  );\r\n}\r\n\r\nfunction createConsumer<T>(context: Context<T>, displayName: string) {\r\n  return createComponent(\r\n    ({ slot }) => {\r\n      const value = useContext(context);\r\n\r\n      return detectIsFunction(slot) ? slot(value) : null;\r\n    },\r\n    { displayName: `${displayName}.Consumer` },\r\n  );\r\n}\r\n\r\nexport { createContext };\r\n","import { detectIsNumber, detectIsString, detectIsFunction } from '../helpers';\r\nimport { View, Text, type TagVirtualNodeFactory } from '../view';\r\n\r\nfunction getChildren(children: Array<any>) {\r\n  children = children.map(x => (detectIsString(x) || detectIsNumber(x) ? Text(x.toString()) : x));\r\n\r\n  return children ? (Array.isArray(children) ? [...children] : [children]) : [];\r\n}\r\n\r\nfunction createElement(\r\n  tag: string | Function,\r\n  props: any,\r\n  ...children: Array<any>\r\n): TagVirtualNodeFactory | Function | null {\r\n  if (detectIsString(tag)) {\r\n    return View({\r\n      ...props,\r\n      as: tag,\r\n      slot: getChildren(children),\r\n    });\r\n  }\r\n\r\n  if (detectIsFunction(tag)) {\r\n    let slot = getChildren(children);\r\n\r\n    slot = slot.length === 1 ? slot[0] : slot;\r\n\r\n    return tag({ ...props, slot });\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createElement };\r\n","import { useMemo } from '../use-memo';\r\n\r\nfunction useCallback<T = Function>(callback: T, deps: Array<any>): T {\r\n  const value = useMemo(() => callback, deps);\r\n\r\n  return value;\r\n}\r\n\r\nexport { useCallback };\r\n","import { type ScheduleCallbackOptions } from '../platform';\r\nimport { detectIsUndefined, detectIsFunction } from '../helpers';\r\nimport { componentFiberHelper } from '../scope';\r\nimport { useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\nimport { useCallback } from '../use-callback';\r\nimport { TaskPriority } from '../constants';\r\n\r\ntype Value<T> = T | ((prevValue: T) => T);\r\ntype Scope = {\r\n  idx: number;\r\n  values: Array<any>;\r\n};\r\n\r\nfunction useState<T = unknown>(initialValue: T, options?: ScheduleCallbackOptions): [T, (value: Value<T>) => void] {\r\n  const fiber = componentFiberHelper.get();\r\n  const update = useUpdate(options);\r\n  const scope: Scope = useMemo(\r\n    () => ({\r\n      idx: fiber.hook.idx,\r\n      values: fiber.hook.values,\r\n    }),\r\n    [],\r\n  );\r\n  const setState = useCallback((sourceValue: Value<T>) => {\r\n    const value = scope.values[scope.idx];\r\n    const newValue = detectIsFunction(sourceValue) ? sourceValue(value) : sourceValue;\r\n\r\n    if (!Object.is(value, newValue)) {\r\n      const setValue = () => {\r\n        scope.values[scope.idx] = newValue;\r\n      };\r\n\r\n      if (options?.priority === TaskPriority.LOW) {\r\n        update(() => setValue());\r\n      } else {\r\n        setValue();\r\n        update();\r\n      }\r\n    }\r\n  }, []);\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook;\r\n  const value: T = !detectIsUndefined(values[idx]) ? values[idx] : initialValue;\r\n\r\n  values[idx] = value;\r\n  scope.idx = idx;\r\n  scope.values = values;\r\n  hook.idx++;\r\n\r\n  return [value, setState];\r\n}\r\n\r\nexport { useState };\r\n","import { createComponent } from '../component';\r\nimport { useState } from '../use-state';\r\nimport { createContext } from '../context';\r\nimport { useContext } from '../use-context';\r\nimport { useMemo } from '../use-memo';\r\nimport { useCallback } from '../use-callback';\r\nimport type { DarkElement } from '../shared';\r\n\r\ntype SuspenseProps = {\r\n  fallback: DarkElement;\r\n};\r\n\r\ntype SuspenseContextValue = {\r\n  fallback: DarkElement;\r\n  isLoaded: boolean;\r\n  trigger: () => void;\r\n};\r\n\r\nconst SuspenseContext = createContext<SuspenseContextValue>({\r\n  fallback: null,\r\n  isLoaded: true,\r\n  trigger: () => {},\r\n});\r\n\r\nconst Suspense = createComponent<SuspenseProps>(({ fallback, slot }) => {\r\n  if (!fallback) {\r\n    throw new Error(`Suspense fallback not found`);\r\n  }\r\n  const { isLoaded: isSuspenseLoaded } = useContext(SuspenseContext);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const trigger = useCallback(() => setIsLoaded(true), []);\r\n  const value = useMemo(() => ({ fallback, isLoaded, trigger }), [fallback, isLoaded]);\r\n\r\n  return SuspenseContext.Provider({\r\n    value,\r\n    slot: isSuspenseLoaded ? slot : null,\r\n  });\r\n});\r\n\r\nexport { SuspenseContext, Suspense };\r\n","import { type Component, createComponent, detectIsComponentFactory } from '../component';\r\nimport { useState } from '../use-state';\r\nimport { useEffect } from '../use-effect';\r\nimport { forwardRef } from '../ref';\r\nimport { SuspenseContext } from '../suspense';\r\nimport { useContext } from '../use-context';\r\n\r\nconst $$lazy = Symbol('lazy');\r\n\r\ntype LazyScope<P, R> = {\r\n  component: Component<P, R>;\r\n};\r\n\r\nfunction lazy<P, R = unknown>(dynamic: () => Promise<{ default: Component<P> }>) {\r\n  return forwardRef(\r\n    createComponent<P, R>(\r\n      (props, ref) => {\r\n        const { fallback, trigger } = useContext(SuspenseContext);\r\n        const [scope, setScope] = useState<LazyScope<P, R>>({\r\n          component: null,\r\n        });\r\n\r\n        useEffect(() => {\r\n          fetchModule(dynamic).then(component => {\r\n            setScope({ component });\r\n          });\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n          if (!scope.component) return;\r\n          trigger();\r\n        }, [scope.component]);\r\n\r\n        return scope.component ? scope.component(props, ref) : fallback;\r\n      },\r\n      { token: $$lazy },\r\n    ),\r\n  );\r\n}\r\n\r\nconst detectIsLazy = (factory: unknown) => detectIsComponentFactory(factory) && factory.token === $$lazy;\r\n\r\nfunction fetchModule(dynamic: () => Promise<{ default: Component }>) {\r\n  return new Promise<Component>(resolve => {\r\n    dynamic().then(module => {\r\n      if (!module.default) {\r\n        throw new Error('lazy loaded component should be exported as default!');\r\n      }\r\n\r\n      resolve(module.default);\r\n    });\r\n  });\r\n}\r\n\r\nexport { lazy, detectIsLazy };\r\n","import { useState } from '../use-state';\r\nimport { useEffect } from '../use-effect';\r\nimport { TaskPriority } from '../constants';\r\n\r\ntype UseDeferredValueOprions = {\r\n  timeoutMs: number;\r\n};\r\n\r\nfunction useDeferredValue<T>(value: T, options?: UseDeferredValueOprions): T {\r\n  const { timeoutMs } = options || {};\r\n  const [deferredValue, setDeferredValue] = useState(value, {\r\n    priority: TaskPriority.LOW,\r\n    timeoutMs,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setDeferredValue(value);\r\n  }, [value]);\r\n\r\n  return deferredValue;\r\n}\r\n\r\nexport { useDeferredValue };\r\n","import { componentFiberHelper } from '../scope';\r\nimport { useEffect } from '../use-effect';\r\nimport { useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\n\r\ntype ErrorScope = {\r\n  error: Error;\r\n};\r\n\r\nfunction useError(): Error | null {\r\n  const fiber = componentFiberHelper.get();\r\n  const update = useUpdate();\r\n  const scope: ErrorScope = useMemo(() => ({ error: null }), []);\r\n\r\n  fiber.catchException = (error: Error) => {\r\n    scope.error = error;\r\n    update();\r\n  };\r\n\r\n  useEffect(() => {\r\n    scope.error = null;\r\n  }, [scope.error]);\r\n\r\n  return scope.error;\r\n}\r\n\r\nexport { useError };\r\n","import { useMemo } from '../use-memo';\r\nimport { useCallback } from '../use-callback';\r\n\r\nfunction useEvent<T extends (...args) => any>(fn: T) {\r\n  const scope = useMemo(() => ({ fn }), []);\r\n\r\n  scope.fn = fn;\r\n\r\n  const callback = useCallback((...args) => {\r\n    return scope.fn(...args);\r\n  }, []);\r\n\r\n  return callback as unknown as T;\r\n}\r\n\r\nexport { useEvent };\r\n","import { useMemo } from '../use-memo';\r\nimport type { MutableRef } from '../ref';\r\n\r\nfunction useImperativeHandle<T>(ref: MutableRef<T>, createHandle: () => T, deps: Array<any>) {\r\n  const current = useMemo(() => createHandle(), deps);\r\n\r\n  ref.current = current;\r\n}\r\n\r\nexport { useImperativeHandle };\r\n","import { useState } from '../use-state';\r\nimport { useCallback } from '../use-callback';\r\nimport { useMemo } from '../use-memo';\r\nimport { detectIsFunction } from '../helpers';\r\nimport type { Reducer, Dispatch, ReducerAction, ReducerState } from './types';\r\n\r\nfunction useReducer<R extends Reducer>(\r\n  reducer: R,\r\n  initialState: ReducerState<R>,\r\n  initializer?: (state: ReducerState<R>) => ReducerState<R>,\r\n): [ReducerState<R>, Dispatch<ReducerAction<R>>] {\r\n  const initialValue = useMemo(() => {\r\n    return detectIsFunction(initializer) ? initializer(initialState) : initialState;\r\n  }, []);\r\n  const [state, setState] = useState<ReducerState<R>>(initialValue);\r\n  const dispatch = useCallback((action: ReducerAction<R>) => setState(state => reducer(state, action)), []) as Dispatch<\r\n    ReducerAction<R>\r\n  >;\r\n\r\n  return [state, dispatch];\r\n}\r\n\r\nexport { useReducer };\r\n","import { useMemo } from '../use-memo';\r\nimport type { MutableRef } from '../ref';\r\n\r\nfunction useRef<T>(initialValue: T = null): MutableRef<T> {\r\n  const ref = useMemo(() => ({ current: initialValue }), []) as MutableRef<T>;\r\n\r\n  return ref;\r\n}\r\n\r\nexport { useRef };\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","TaskPriority","ROOT","EMPTY_NODE","ATTR_KEY","ATTR_REF","PARTIAL_UPDATE","detectIsFunction","detectIsUndefined","detectIsNumber","detectIsString","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","error","str","console","flatten","source","list","levelMap","idx","level","item","length","push","getTime","Date","now","keyBy","fn","reduce","acc","x","takeListFromEnd","count","slice","dummyFn","detectIsDepsDifferent","deps","prevDeps","i","defaultOptions","displayName","defaultProps","token","options","children","this","type","props","ref","shouldUpdate","createComponent","createElement","computedOptions","computedProps","ComponentFactory","NodeType","detectIsComponentFactory","getComponentFactoryKey","wipRoot","currentRoot","nextUnitOfWork","fromHookUpdate","events","Map","unsubscribers","deletions","fiberMount","navigation","isDeepWalking","componentFiber","effects","layoutEffects","rootId","stores","effectStoreHelper","set","id","effectStore","remove","delete","getRootId","Store","storeHelper","wipRootHelper","fiber","currentRootHelper","nextUnitOfWorkHelper","componentFiberHelper","fromHookUpdateHelper","eventsHelper","addUnsubscriber","mapUnsubscribers","forEach","deletionsHelper","fiberMountHelper","reset","getIndex","jumpToChild","nextLevel","jumpToParent","jumpToSibling","deepWalking","effectsHelper","add","effect","layoutEffectsHelper","createEffectFunctions","useEffect","hasEffects","cleanupEffects","store","hook","values","runEffect","undefined","cleanup","some","$$virtualNode","TAG","name","isVoid","attrs","VirtualNode","text","TEXT","COMMENT","detectIsVirtualNode","vNode","detectIsTagVirtualNode","TagVirtualNode","detectIsCommentVirtualNode","CommentVirtualNode","detectIsTextVirtualNode","TextVirtualNode","detectIsEmptyVirtualNode","getVirtualNodeKey","Text","Comment","View","def","as","slot","rest","createEmptyVirtualNode","detectIsVirtualNodeFactory","$$fragment","Fragment","detectIsFragment","forwardRef","component","detectIsRef","mutableRef","$$memo","defaultShouldUpdate","nextProps","keys","detectIsMemo","memo","Memo","processValue","getValue","isDepsDifferent","check","wrap","useMemo","hookValue","computedGetValue","EffectTag","platform","scheduleCallback","Error","shouldYeildToHost","createNativeElement","applyCommits","detectIsPortal","unmountPortal","cloneTagMap","PLACEMENT","SKIP","useLayoutEffect","hasLayoutEffects","cleanupLayoutEffects","walkFiber","onLoop","nextFiber","isReturn","isStopped","visitedMap","detectCanVisit","resetIsDeepWalking","stop","child","newFiber","nextSibling","parent","unmountFiber","effectHost","layoutEffectHost","transposition","instance","portalHost","unmountRoot","onComplete","nativeElement","alternate","effectTag","shadow","provider","mountedToHost","childrenCount","marker","isUsed","markPortalHost","markEffectHost","markLayoutEffectHost","setError","catchException","workLoop","wipFiber","shouldYield","hasMoreWork","Boolean","performUnitOfWork","fromHook","hasPortals","layoutEffect","setTimeout","commitChanges","hasChildrenProp","performChild","performedFiber","performSibling","performPartialUpdateEffects","DELETION","getChildAlternate","getHook","Fiber","pertformInstance","mutateAlternate","mutateFiber","performMemo","performedNextFiber","performedShadow","performedInstance","childrenIdx","getNextSiblingAlternate","isDifferentKeys","getElementKey","isUpdate","getInstanceType","UPDATE","alternateType","isSameType","isSameKeys","isRemovingCase","isInsertingCase","nextKeys","nextKey","extractKeys","diffKeys","getDiffKeys","fibersMap","map","createFibersByKeyMap","diffCount","fibers","getSiblingFibers","performRemovingNodes","diffKeyMap","fibersByPositionsMap","position","createFibersByPositionMap","usedKeyMap","keyIdx","insertionFiber","performInsertingNodes","memoFiber","alternateFactory","elements","splice","getAlternateByKey","getRootShadow","mountInstance","isComponentFactory","result","err","transformElementInstance","nextKeysMap","diff","element","createHook","createUpdateCallback","forceStart","onStart","useUpdate","scope","callback","timeoutMs","useContext","context","defaultValue","getProvider","update","prevValue","hasProvider","subscriber","newValue","is","subscribers","findIndex","createContext","Provider","Consumer","mutateContext","createProvider","createConsumer","getChildren","toString","tag","useCallback","useState","initialValue","setState","sourceValue","priority","LOW","SuspenseContext","fallback","isLoaded","trigger","Suspense","isSuspenseLoaded","setIsLoaded","$$lazy","lazy","dynamic","setScope","Promise","resolve","then","default","fetchModule","detectIsLazy","useDeferredValue","deferredValue","setDeferredValue","useError","useEvent","args","useImperativeHandle","createHandle","current","useReducer","reducer","initialState","initializer","state","dispatch","action","useRef"],"sourceRoot":""}