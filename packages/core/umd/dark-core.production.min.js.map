{"version":3,"file":"dark-core.production.min.js","mappings":"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","sources":["webpack://DarkCore/webpack/universalModuleDefinition","webpack://DarkCore/webpack/bootstrap","webpack://DarkCore/webpack/runtime/define property getters","webpack://DarkCore/webpack/runtime/hasOwnProperty shorthand","webpack://DarkCore/webpack/runtime/make namespace object","webpack://DarkCore/./src/constants.ts","webpack://DarkCore/./src/helpers/index.ts","webpack://DarkCore/./src/component/component.ts","webpack://DarkCore/./src/view/model.ts","webpack://DarkCore/./src/scope/scope.ts","webpack://DarkCore/./src/use-effect/use-effect.ts","webpack://DarkCore/./src/view/view.ts","webpack://DarkCore/./src/fragment/fragment.ts","webpack://DarkCore/./src/ref/ref.ts","webpack://DarkCore/./src/memo/memo.ts","webpack://DarkCore/./src/use-memo/use-memo.ts","webpack://DarkCore/./src/global/global.ts","webpack://DarkCore/./src/fiber/model.ts","webpack://DarkCore/./src/use-layout-effect/use-layout-effect.ts","webpack://DarkCore/./src/fiber/fiber.ts","webpack://DarkCore/./src/use-update/use-update.ts","webpack://DarkCore/./src/use-context/use-context.ts","webpack://DarkCore/./src/context/context.ts","webpack://DarkCore/./src/element/element.ts","webpack://DarkCore/./src/use-callback/use-callback.ts","webpack://DarkCore/./src/use-state/use-state.ts","webpack://DarkCore/./src/suspense/suspense.ts","webpack://DarkCore/./src/lazy/lazy.ts","webpack://DarkCore/./src/use-deferred-value/use-deferred-value.ts","webpack://DarkCore/./src/use-error/use-error.ts","webpack://DarkCore/./src/use-event/use-event.ts","webpack://DarkCore/./src/use-imperative-handle/use-imperative-handle.ts","webpack://DarkCore/./src/use-reducer/use-reducer.ts","webpack://DarkCore/./src/use-ref/use-ref.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DarkCore\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DarkCore\"] = factory();\n\telse\n\t\troot[\"DarkCore\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const ROOT = 'root';\r\nexport const EMPTY_NODE = 'dark:matter';\r\nexport const ATTR_KEY = 'key';\r\nexport const ATTR_REF = 'ref';\r\nexport const PARTIAL_UPDATE = 'partial-update';\r\n\r\nexport enum TaskPriority {\r\n  HIGH = 2,\r\n  NORMAL = 1,\r\n  LOW = 0,\r\n}\r\n","import type { NestedArray } from '../shared';\r\n\r\nconst detectIsFunction = (o: any): o is Function => typeof o === 'function';\r\nconst detectIsUndefined = (o: any) => typeof o === 'undefined';\r\nconst detectIsNumber = (o: any) => typeof o === 'number';\r\nconst detectIsString = (o: any) => typeof o === 'string';\r\nconst detectIsObject = (o: any) => typeof o === 'object';\r\nconst detectIsBoolean = (o: any) => typeof o === 'boolean';\r\nconst detectIsArray = (o: any): o is Array<any> => Array.isArray(o);\r\nconst detectIsNull = (o: any) => o === null;\r\nconst detectIsEmpty = (o: any) => detectIsNull(o) || detectIsUndefined(o);\r\n\r\nfunction error(str: string) {\r\n  !detectIsUndefined(console) && console.error(str);\r\n}\r\n\r\nfunction flatten<T = any>(source: Array<NestedArray<T>>): Array<T> {\r\n  const list = [];\r\n  const levelMap = { 0: { idx: 0, source } };\r\n  let level = 0;\r\n\r\n  do {\r\n    const { source, idx } = levelMap[level];\r\n    const item = source[idx];\r\n\r\n    if (idx >= source.length) {\r\n      level--;\r\n      levelMap[level].idx++;\r\n      continue;\r\n    }\r\n\r\n    if (detectIsArray(item)) {\r\n      level++;\r\n      levelMap[level] = {\r\n        idx: 0,\r\n        source: item,\r\n      };\r\n    } else {\r\n      list.push(item);\r\n      levelMap[level].idx++;\r\n    }\r\n  } while (level > 0 || levelMap[level].idx < levelMap[level].source.length);\r\n\r\n  return list;\r\n}\r\n\r\nfunction getTime() {\r\n  return Date.now();\r\n}\r\n\r\nfunction keyBy<T = any>(\r\n  list: Array<T>,\r\n  fn: (o: T) => string | number,\r\n  value = false,\r\n): Record<string | number, T | boolean> {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\n\r\nfunction takeListFromEnd(source: Array<any>, count: number) {\r\n  return source.slice(source.length - count, source.length);\r\n}\r\n\r\nconst dummyFn = () => {};\r\n\r\nfunction detectIsDepsDifferent(deps: Array<unknown>, prevDeps: Array<unknown>): boolean {\r\n  if (!detectIsUndefined(deps) && !detectIsUndefined(prevDeps) && deps.length > 0 && prevDeps.length > 0) {\r\n    for (let i = 0; i < prevDeps.length; i++) {\r\n      if (prevDeps[i] !== deps[i]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  error,\r\n  flatten,\r\n  getTime,\r\n  keyBy,\r\n  takeListFromEnd,\r\n  dummyFn,\r\n  detectIsDepsDifferent,\r\n};\r\n","import { ATTR_KEY } from '../constants';\r\nimport { error, detectIsEmpty } from '../helpers';\r\nimport type { DarkElementKey, DarkElementInstance } from '../shared/model';\r\nimport type { MutableRef } from '../ref';\r\nimport type { CreateElement, ComponentOptions, StandardComponentProps, SlotProps } from './model';\r\n\r\nconst $$component = Symbol('component');\r\nconst defaultOptions: ComponentOptions<any> = {\r\n  displayName: '',\r\n  defaultProps: {},\r\n  token: $$component,\r\n};\r\nclass ComponentFactory<P extends StandardComponentProps = any, R = any> {\r\n  public type: CreateElement<P>;\r\n  public token: Symbol;\r\n  public props: P;\r\n  public ref: MutableRef<R>;\r\n  public displayName: string;\r\n  public children: Array<DarkElementInstance> = [];\r\n  public shouldUpdate?: (props: P, nextProps: P) => boolean;\r\n\r\n  constructor(options: ComponentFactory<P>) {\r\n    this.type = options.type || null;\r\n    this.token = options.token || null;\r\n    this.props = options.props || null;\r\n    this.ref = options.ref || null;\r\n    this.displayName = options.displayName || '';\r\n    this.shouldUpdate = options.shouldUpdate || null;\r\n  }\r\n}\r\n\r\nfunction createComponent<P, R = any>(\r\n  createElement: CreateElement<P & SlotProps, R>,\r\n  options: ComponentOptions<P> = {},\r\n) {\r\n  type Props = P & StandardComponentProps;\r\n  const computedOptions = { ...defaultOptions, ...options };\r\n  const { token, defaultProps, displayName, shouldUpdate } = computedOptions;\r\n\r\n  return (props = {} as Props, ref?: MutableRef<R>): ComponentFactory<Props> => {\r\n    const computedProps = { ...defaultProps, ...props };\r\n    const factory = new ComponentFactory({\r\n      token,\r\n      ref,\r\n      displayName,\r\n      shouldUpdate,\r\n      props: computedProps,\r\n      type: createElement,\r\n      children: [],\r\n    });\r\n\r\n    if (computedProps.ref) {\r\n      delete computedProps.ref;\r\n\r\n      if (process.env.NODE_ENV === 'development') {\r\n        error(`[Dark]: To use ref you need to wrap the createComponent with forwardRef!`);\r\n      }\r\n    }\r\n\r\n    return factory;\r\n  };\r\n}\r\n\r\nconst detectIsComponentFactory = (factory: unknown): factory is ComponentFactory => factory instanceof ComponentFactory;\r\n\r\nconst getComponentFactoryKey = (factory: ComponentFactory): DarkElementKey =>\r\n  !detectIsEmpty(factory.props[ATTR_KEY]) ? factory.props[ATTR_KEY] : null;\r\n\r\nexport { ComponentFactory, createComponent, detectIsComponentFactory, getComponentFactoryKey };\r\n","export type ViewDef = {\r\n  as: string;\r\n  slot?: any;\r\n  isVoid?: boolean;\r\n  [prop: string]: any;\r\n};\r\n\r\nexport enum NodeType {\r\n  TAG = 'TAG',\r\n  TEXT = 'TEXT',\r\n  COMMENT = 'COMMENT',\r\n}\r\n","import type { Fiber } from '../fiber';\r\n\r\nclass Store {\r\n  public wipRoot: Fiber = null;\r\n  public currentRoot: Fiber = null;\r\n  public nextUnitOfWork: Fiber = null;\r\n  public fromHookUpdate = false;\r\n  public events: Map<string, WeakMap<object, Function>> = new Map();\r\n  public deletions: Array<Fiber> = [];\r\n  public fiberMount = {\r\n    level: 0,\r\n    navigation: {},\r\n    isDeepWalking: true,\r\n  };\r\n  public componentFiber: Fiber = null;\r\n  public effects: Array<() => void> = [];\r\n  public layoutEffects: Array<() => void> = [];\r\n}\r\n\r\nlet rootId = null;\r\nconst stores = new Map<number, Store>();\r\n\r\nconst effectStoreHelper = {\r\n  set: (id: number) => effectStore(id),\r\n};\r\n\r\nconst getRootId = (): number => rootId;\r\n\r\nconst effectStore = (id: number) => {\r\n  rootId = id;\r\n  !stores.get(rootId) && stores.set(rootId, new Store());\r\n};\r\n\r\nconst storeHelper = {\r\n  get: (id: number = rootId) => stores.get(id),\r\n};\r\n\r\nconst wipRootHelper = {\r\n  get: () => storeHelper.get()?.wipRoot || null,\r\n  set: (fiber: Fiber) => (storeHelper.get().wipRoot = fiber),\r\n};\r\n\r\nconst currentRootHelper = {\r\n  get: () => storeHelper.get()?.currentRoot || null,\r\n  set: (fiber: Fiber) => (storeHelper.get().currentRoot = fiber),\r\n};\r\n\r\nconst nextUnitOfWorkHelper = {\r\n  get: () => storeHelper.get()?.nextUnitOfWork || null,\r\n  set: (fiber: Fiber) => (storeHelper.get().nextUnitOfWork = fiber),\r\n};\r\n\r\nconst componentFiberHelper = {\r\n  get: () => storeHelper.get()?.componentFiber,\r\n  set: (fiber: Fiber) => (storeHelper.get().componentFiber = fiber),\r\n};\r\n\r\nconst fromHookUpdateHelper = {\r\n  get: () => storeHelper.get()?.fromHookUpdate || false,\r\n  set: (value: boolean) => (storeHelper.get().fromHookUpdate = value),\r\n};\r\n\r\nconst eventsHelper = {\r\n  get: () => storeHelper.get().events,\r\n};\r\n\r\nconst deletionsHelper = {\r\n  get: () => storeHelper.get().deletions,\r\n  set: (deletions: Array<Fiber>) => (storeHelper.get().deletions = deletions),\r\n};\r\n\r\nconst fiberMountHelper = {\r\n  reset: () => {\r\n    storeHelper.get().fiberMount = {\r\n      level: 0,\r\n      navigation: {},\r\n      isDeepWalking: true,\r\n    };\r\n  },\r\n  getIndex: () => storeHelper.get().fiberMount.navigation[storeHelper.get().fiberMount.level],\r\n  jumpToChild: () => {\r\n    const { fiberMount } = storeHelper.get();\r\n    const level = fiberMount.level;\r\n    const nextLevel = level + 1;\r\n\r\n    fiberMount.level = nextLevel;\r\n    fiberMount.navigation[nextLevel] = 0;\r\n  },\r\n  jumpToParent: () => {\r\n    const { fiberMount } = storeHelper.get();\r\n    const level = fiberMount.level;\r\n    const nextLevel = level - 1;\r\n\r\n    fiberMount.navigation[level] = 0;\r\n    fiberMount.level = nextLevel;\r\n  },\r\n  jumpToSibling: () => {\r\n    const { fiberMount } = storeHelper.get();\r\n    const level = fiberMount.level;\r\n    const idx = fiberMount.navigation[level] + 1;\r\n\r\n    fiberMount.navigation[level] = idx;\r\n  },\r\n  deepWalking: {\r\n    get: () => storeHelper.get().fiberMount.isDeepWalking,\r\n    set: (value: boolean) => (storeHelper.get().fiberMount.isDeepWalking = value),\r\n  },\r\n};\r\n\r\nconst effectsHelper = {\r\n  get: () => storeHelper.get().effects,\r\n  reset: () => (storeHelper.get().effects = []),\r\n  add: (effect: () => void) => storeHelper.get().effects.push(effect),\r\n};\r\n\r\nconst layoutEffectsHelper = {\r\n  get: () => storeHelper.get().layoutEffects,\r\n  reset: () => (storeHelper.get().layoutEffects = []),\r\n  add: (effect: () => void) => storeHelper.get().layoutEffects.push(effect),\r\n};\r\n\r\nexport {\r\n  getRootId,\r\n  effectStoreHelper,\r\n  wipRootHelper,\r\n  currentRootHelper,\r\n  nextUnitOfWorkHelper,\r\n  componentFiberHelper,\r\n  fromHookUpdateHelper,\r\n  eventsHelper,\r\n  deletionsHelper,\r\n  fiberMountHelper,\r\n  effectsHelper,\r\n  layoutEffectsHelper,\r\n};\r\n","import { detectIsUndefined, detectIsFunction, detectIsDepsDifferent } from '../helpers';\r\nimport { componentFiberHelper, effectsHelper } from '../scope';\r\nimport type { Fiber, Hook, HookValue } from '../fiber';\r\nimport type { Effect, EffectCleanup } from './model';\r\n\r\nconst $$useEffect = Symbol('use-effect');\r\n\r\nconst { useEffect, hasEffects, cleanupEffects } = createEffectFunctions($$useEffect, effectsHelper);\r\n\r\nfunction createEffectFunctions(token: Symbol, store: typeof effectsHelper) {\r\n  function useEffect(effect: Effect, deps?: Array<any>) {\r\n    const fiber = componentFiberHelper.get();\r\n    const hook = fiber.hook as Hook<HookValue<EffectCleanup>>;\r\n    const { idx, values } = hook;\r\n    const runEffect = () => {\r\n      values[idx] = {\r\n        deps,\r\n        token,\r\n        value: undefined,\r\n      };\r\n\r\n      store.add(() => {\r\n        values[idx].value = effect();\r\n      });\r\n    };\r\n\r\n    if (detectIsUndefined(values[idx])) {\r\n      runEffect();\r\n    } else {\r\n      const { deps: prevDeps, value: cleanup } = values[idx];\r\n      const isDepsDifferent = deps ? detectIsDepsDifferent(deps, prevDeps) : true;\r\n\r\n      if (isDepsDifferent) {\r\n        detectIsFunction(cleanup) && cleanup();\r\n        runEffect();\r\n      }\r\n    }\r\n\r\n    hook.idx++;\r\n  }\r\n\r\n  function hasEffects(fiber: Fiber) {\r\n    const { values } = fiber.hook as Hook<HookValue>;\r\n    const hasEffect = values.some(x => x.token === token);\r\n\r\n    return hasEffect;\r\n  }\r\n\r\n  function cleanupEffects(hook: Hook<HookValue<EffectCleanup>>) {\r\n    const { values } = hook;\r\n\r\n    for (const value of values) {\r\n      if (value.token === token) {\r\n        const cleanup = value.value;\r\n\r\n        detectIsFunction(cleanup) && cleanup();\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    useEffect,\r\n    hasEffects,\r\n    cleanupEffects,\r\n  };\r\n}\r\n\r\nexport { useEffect, hasEffects, cleanupEffects, createEffectFunctions };\r\n","import { EMPTY_NODE, ATTR_KEY } from '../constants';\r\nimport { detectIsArray, detectIsEmpty, detectIsFunction } from '../helpers';\r\nimport type { DarkElementKey } from '../shared/model';\r\nimport type { ComponentFactory, StandardComponentProps } from '../component';\r\nimport { NodeType, type ViewDef } from './model';\r\n\r\nexport type VirtualNodeFactory = () => VirtualNode;\r\nexport type TagVirtualNodeFactory = () => TagVirtualNode;\r\nexport type TextVirtualNodeFactory = () => TextVirtualNode;\r\nexport type CommentVirtualNodeFactory = () => CommentVirtualNode;\r\n\r\nconst $$virtualNode = Symbol('virtual-node');\r\n\r\nclass VirtualNode {\r\n  public type: NodeType = null;\r\n\r\n  constructor(options: Partial<VirtualNode>) {\r\n    this.type = options.type;\r\n  }\r\n}\r\n\r\nclass TagVirtualNode extends VirtualNode {\r\n  public type = NodeType.TAG;\r\n  public name: string = null;\r\n  public isVoid = false;\r\n  public attrs: Record<string, any> = {};\r\n  public children: Array<VirtualNodeFactory | ComponentFactory> = [];\r\n\r\n  constructor(options: Partial<TagVirtualNode>) {\r\n    super(options);\r\n    this.name = options.name || this.name;\r\n    this.isVoid = options.isVoid || this.isVoid;\r\n    this.attrs = options.attrs || this.attrs;\r\n    this.children = options.children || this.children;\r\n  }\r\n}\r\n\r\nclass TextVirtualNode extends VirtualNode {\r\n  public type = NodeType.TEXT;\r\n  public value = '';\r\n\r\n  constructor(text: string) {\r\n    super({});\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nclass CommentVirtualNode extends VirtualNode {\r\n  public type = NodeType.COMMENT;\r\n  public value = '';\r\n\r\n  constructor(text: string) {\r\n    super({});\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nconst detectIsVirtualNode = (vNode: unknown): vNode is VirtualNode => vNode instanceof VirtualNode;\r\nconst detectIsTagVirtualNode = (vNode: unknown): vNode is TagVirtualNode => vNode instanceof TagVirtualNode;\r\nconst detectIsCommentVirtualNode = (vNode: unknown): vNode is CommentVirtualNode => vNode instanceof CommentVirtualNode;\r\nconst detectIsTextVirtualNode = (vNode: unknown): vNode is TextVirtualNode => vNode instanceof TextVirtualNode;\r\nconst detectIsEmptyVirtualNode = (vNode: unknown): boolean =>\r\n  detectIsCommentVirtualNode(vNode) && vNode.value === EMPTY_NODE;\r\n\r\nfunction getVirtualNodeKey(vNode: TagVirtualNode): DarkElementKey | null {\r\n  const key = vNode && vNode.attrs[ATTR_KEY];\r\n\r\n  return !detectIsEmpty(key) ? key : null;\r\n}\r\n\r\nfunction Text(source: string | StandardComponentProps['slot']): string | TextVirtualNode {\r\n  const text =\r\n    typeof source === 'string' ? new TextVirtualNode(source) : detectIsTextVirtualNode(source) ? source.value : '';\r\n\r\n  return text;\r\n}\r\n\r\nfunction Comment(text: string): CommentVirtualNodeFactory {\r\n  const factory = () => new CommentVirtualNode(text);\r\n\r\n  factory[$$virtualNode] = true;\r\n\r\n  return factory;\r\n}\r\n\r\nfunction View(def: ViewDef): TagVirtualNodeFactory {\r\n  const factory = () => {\r\n    const { as, slot, isVoid = false, ...rest } = def;\r\n    const children = isVoid ? [] : detectIsArray(slot) ? slot : slot ? [slot] : [];\r\n\r\n    return new TagVirtualNode({\r\n      name: as,\r\n      isVoid,\r\n      attrs: { ...rest },\r\n      children: children as Array<VirtualNodeFactory>,\r\n    });\r\n  };\r\n\r\n  factory[$$virtualNode] = true;\r\n\r\n  return factory;\r\n}\r\n\r\nconst createEmptyVirtualNode = () => new CommentVirtualNode(EMPTY_NODE);\r\n\r\nconst detectIsVirtualNodeFactory = (factory: unknown): factory is VirtualNodeFactory =>\r\n  detectIsFunction(factory) && factory[$$virtualNode] === true;\r\n\r\nexport {\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsEmptyVirtualNode,\r\n  getVirtualNodeKey,\r\n  Text,\r\n  Comment,\r\n  View,\r\n  createEmptyVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n};\r\n","import { type KeyProps, createComponent, detectIsComponentFactory } from '../component';\r\n\r\nconst $$fragment = Symbol('fragment');\r\n\r\nconst Fragment = createComponent<KeyProps>(({ slot }) => slot || null, {\r\n  token: $$fragment,\r\n});\r\n\r\nconst detectIsFragment = (factory: unknown) => detectIsComponentFactory(factory) && factory.token === $$fragment;\r\n\r\nexport { Fragment, detectIsFragment };\r\n","import { detectIsObject, detectIsNull } from '../helpers';\r\nimport type { Component, RefProps, ComponentFactory } from '../component';\r\nimport type { MutableRef } from './model';\r\n\r\nfunction forwardRef<P, R>(component: Component<P, R>) {\r\n  type Props = P & RefProps<R>;\r\n\r\n  return ({ ref, ...rest }: Props) => {\r\n    return component(rest as P, ref) as ComponentFactory<P, R>;\r\n  };\r\n}\r\n\r\nconst detectIsRef = (ref: unknown) => {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref as MutableRef;\r\n\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport { forwardRef, detectIsRef };\r\n","import {\r\n  type Component,\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n  type RefProps,\r\n  type SlotProps,\r\n  createComponent,\r\n  detectIsComponentFactory,\r\n} from '../component';\r\nimport { type MutableRef, forwardRef } from '../ref';\r\n\r\ntype ShouldUpdate<T> = (props: T, nextProps: T) => boolean;\r\n\r\nconst $$memo = Symbol('memo');\r\n\r\nconst defaultShouldUpdate = (props: {}, nextProps: {}): boolean => {\r\n  const keys = Object.keys(nextProps);\r\n\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst detectIsMemo = (factory: unknown) => detectIsComponentFactory(factory) && factory.token === $$memo;\r\n\r\nfunction memo<T>(\r\n  component: (props: T, ref?: MutableRef<unknown>) => ComponentFactory<T, unknown>,\r\n  shouldUpdate: ShouldUpdate<T & SlotProps> = defaultShouldUpdate,\r\n): Component<T & StandardComponentProps> {\r\n  return forwardRef(\r\n    createComponent(\r\n      (props: T & RefProps, ref) => {\r\n        ref && (props.ref = ref);\r\n\r\n        return component(props);\r\n      },\r\n      { token: $$memo, shouldUpdate },\r\n    ),\r\n  );\r\n}\r\n\r\nexport { $$memo, memo, detectIsMemo };\r\n","import { type DarkElement } from '../shared';\r\nimport { detectIsUndefined, detectIsArray, detectIsDepsDifferent } from '../helpers';\r\nimport { detectIsComponentFactory, createComponent } from '../component';\r\nimport { detectIsVirtualNodeFactory } from '../view';\r\nimport { componentFiberHelper } from '../scope';\r\nimport { Fragment } from '../fragment';\r\nimport { $$memo } from '../memo';\r\n\r\nconst Memo = createComponent(({ slot }) => slot, { token: $$memo });\r\n\r\nfunction wrap<T>(value: T, isDepsDifferent: boolean) {\r\n  const check = (value: T) => detectIsVirtualNodeFactory(value) || detectIsComponentFactory(value);\r\n\r\n  if (detectIsArray(value) ? check(value[0]) : check(value)) {\r\n    const slot = value as unknown as DarkElement;\r\n    const factory = Memo({\r\n      slot: Fragment({ slot }),\r\n    });\r\n\r\n    factory.shouldUpdate = () => isDepsDifferent;\r\n\r\n    return factory;\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nfunction processValue<T>(getValue: () => T, isDepsDifferent = false) {\r\n  return wrap(getValue(), isDepsDifferent);\r\n}\r\n\r\nfunction useMemo<T>(getValue: () => T, deps: Array<any>): T {\r\n  const fiber = componentFiberHelper.get();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook;\r\n\r\n  if (detectIsUndefined(values[idx])) {\r\n    const value = processValue(getValue);\r\n\r\n    values[idx] = {\r\n      deps,\r\n      value,\r\n    };\r\n\r\n    hook.idx++;\r\n\r\n    return value as T;\r\n  }\r\n\r\n  const hookValue = values[idx];\r\n  const prevDeps = hookValue.deps as Array<any>;\r\n  const isDepsDifferent = detectIsDepsDifferent(deps, prevDeps);\r\n  const computedGetValue = isDepsDifferent ? getValue : () => hookValue.value;\r\n\r\n  hookValue.deps = deps;\r\n  hookValue.value = processValue(computedGetValue, isDepsDifferent);\r\n\r\n  hook.idx++;\r\n\r\n  return hookValue.value;\r\n}\r\n\r\nexport { useMemo };\r\n","import type { Platform } from './model';\r\n\r\nexport const platform: Platform = {\r\n  scheduleCallback: () => {\r\n    throw new Error('scheduleCallback not installed by renderer');\r\n  },\r\n  shouldYeildToHost: () => {\r\n    throw new Error('shouldYeildToHost not installed by renderer');\r\n  },\r\n  createNativeElement: () => {\r\n    throw new Error('createNativeElement not installed by renderer');\r\n  },\r\n  applyCommits: () => {\r\n    throw new Error('applyCommits not installed by renderer');\r\n  },\r\n  detectIsPortal: () => {\r\n    throw new Error('detectIsPortal not installed by renderer');\r\n  },\r\n  unmountPortal: () => {\r\n    throw new Error('unmountPortal not installed by renderer');\r\n  },\r\n};\r\n","export enum EffectTag {\r\n  PLACEMENT = 'PLACEMENT',\r\n  UPDATE = 'UPDATE',\r\n  DELETION = 'DELETION',\r\n  SKIP = 'SKIP',\r\n}\r\n\r\nexport type NativeElement = unknown;\r\n\r\nexport type HookValue<T = any> = {\r\n  token?: Symbol;\r\n  deps: Array<any>;\r\n  value: T;\r\n};\r\n\r\nexport type Hook<T = any> = {\r\n  idx: number;\r\n  values: Array<T>;\r\n};\r\n\r\nexport const cloneTagMap = {\r\n  [EffectTag.PLACEMENT]: true,\r\n  [EffectTag.SKIP]: true,\r\n};\r\n","import { layoutEffectsHelper } from '../scope';\r\nimport { createEffectFunctions } from '../use-effect';\r\n\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\n\r\nconst {\r\n  useEffect: useLayoutEffect,\r\n  hasEffects: hasLayoutEffects,\r\n  cleanupEffects: cleanupLayoutEffects,\r\n} = createEffectFunctions($$useLayoutEffect, layoutEffectsHelper);\r\n\r\nexport { useLayoutEffect, hasLayoutEffects, cleanupLayoutEffects };\r\n","import { flatten, detectIsEmpty, error, keyBy, takeListFromEnd, detectIsUndefined, detectIsArray } from '../helpers';\r\nimport { platform } from '../global';\r\nimport {\r\n  wipRootHelper,\r\n  currentRootHelper,\r\n  nextUnitOfWorkHelper,\r\n  deletionsHelper,\r\n  fiberMountHelper,\r\n  componentFiberHelper,\r\n  fromHookUpdateHelper,\r\n  effectStoreHelper,\r\n  effectsHelper,\r\n  layoutEffectsHelper,\r\n} from '../scope';\r\nimport { type ComponentFactory, detectIsComponentFactory, getComponentFactoryKey } from '../component';\r\nimport {\r\n  type TagVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  createEmptyVirtualNode,\r\n  getVirtualNodeKey,\r\n  detectIsVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport type { Context, ContextProviderValue } from '../context/model';\r\nimport type { DarkElementKey, DarkElement, DarkElementInstance } from '../shared/model';\r\nimport { PARTIAL_UPDATE } from '../constants';\r\nimport { type NativeElement, type Hook, EffectTag, cloneTagMap } from './model';\r\nimport { hasEffects, cleanupEffects } from '../use-effect';\r\nimport { hasLayoutEffects, cleanupLayoutEffects } from '../use-layout-effect';\r\n\r\nclass Fiber<N = NativeElement> {\r\n  public nativeElement: N;\r\n  public parent: Fiber<N>;\r\n  public child: Fiber<N>;\r\n  public nextSibling: Fiber<N>;\r\n  public alternate: Fiber<N>;\r\n  public effectTag: EffectTag;\r\n  public instance: DarkElementInstance;\r\n  public hook: Hook;\r\n  public shadow: Fiber<N>;\r\n  public provider: Map<Context, ContextProviderValue>;\r\n  public transposition: boolean;\r\n  public mountedToHost: boolean;\r\n  public portalHost: boolean;\r\n  public effectHost: boolean;\r\n  public layoutEffectHost: boolean;\r\n  public childrenCount: number;\r\n  public marker: string;\r\n  public isUsed: boolean;\r\n  public catchException: (error: Error) => void;\r\n\r\n  constructor(options: Partial<Fiber<N>>) {\r\n    this.nativeElement = options.nativeElement || null;\r\n    this.parent = options.parent || null;\r\n    this.child = options.child || null;\r\n    this.nextSibling = options.nextSibling || null;\r\n    this.alternate = options.alternate || null;\r\n    this.effectTag = options.effectTag || null;\r\n    this.instance = options.instance || null;\r\n    this.hook = options.hook || createHook();\r\n    this.shadow = options.shadow || null;\r\n    this.provider = options.provider || null;\r\n    this.transposition = !detectIsUndefined(options.transposition) ? options.transposition : false;\r\n    this.mountedToHost = !detectIsUndefined(options.mountedToHost) || false;\r\n    this.portalHost = !detectIsUndefined(options.portalHost) ? options.portalHost : false;\r\n    this.effectHost = !detectIsUndefined(options.effectHost) ? options.effectHost : false;\r\n    this.layoutEffectHost = !detectIsUndefined(options.layoutEffectHost) ? options.layoutEffectHost : false;\r\n    this.childrenCount = options.childrenCount || 0;\r\n    this.marker = options.marker || '';\r\n    this.isUsed = options.isUsed || false;\r\n  }\r\n\r\n  public markPortalHost() {\r\n    this.portalHost = true;\r\n    this.parent && !this.parent.portalHost && this.parent.markPortalHost();\r\n  }\r\n\r\n  public markEffectHost() {\r\n    this.effectHost = true;\r\n    this.parent && !this.parent.effectHost && this.parent.markEffectHost();\r\n  }\r\n\r\n  public markLayoutEffectHost() {\r\n    this.layoutEffectHost = true;\r\n    this.parent && !this.parent.layoutEffectHost && this.parent.markLayoutEffectHost();\r\n  }\r\n\r\n  public setError(error: Error) {\r\n    if (typeof this.catchException === 'function') {\r\n      this.catchException(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n}\r\n\r\nfunction workLoop() {\r\n  const wipFiber = wipRootHelper.get();\r\n  let nextUnitOfWork = nextUnitOfWorkHelper.get();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(nextUnitOfWork);\r\n\r\n  while (nextUnitOfWork && !shouldYield) {\r\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\r\n    nextUnitOfWorkHelper.set(nextUnitOfWork);\r\n    hasMoreWork = Boolean(nextUnitOfWork);\r\n    shouldYield = platform.shouldYeildToHost();\r\n  }\r\n\r\n  if (!nextUnitOfWork && wipFiber) {\r\n    commitChanges();\r\n  }\r\n\r\n  return hasMoreWork;\r\n}\r\n\r\nfunction performUnitOfWork(fiber: Fiber) {\r\n  let isDeepWalking = true;\r\n  let nextFiber = fiber;\r\n  let shadow: Fiber = fiber.shadow;\r\n  let instance = fiber.instance;\r\n\r\n  while (true) {\r\n    isDeepWalking = fiberMountHelper.deepWalking.get();\r\n    nextFiber.hook.idx = 0;\r\n\r\n    if (isDeepWalking) {\r\n      const hasChildren = hasChildrenProp(instance) && instance.children.length > 0;\r\n\r\n      if (hasChildren) {\r\n        const { performedFiber, performedNextFiber, performedShadow, performedInstance } = performChild({\r\n          nextFiber,\r\n          shadow,\r\n          instance,\r\n        });\r\n\r\n        nextFiber = performedNextFiber;\r\n        shadow = performedShadow;\r\n        instance = performedInstance;\r\n\r\n        if (performedFiber) return performedFiber;\r\n      } else {\r\n        const { performedFiber, performedNextFiber, performedShadow, performedInstance } = performSibling({\r\n          nextFiber,\r\n          shadow,\r\n          instance,\r\n        });\r\n\r\n        nextFiber = performedNextFiber;\r\n        shadow = performedShadow;\r\n        instance = performedInstance;\r\n\r\n        if (performedFiber) return performedFiber;\r\n      }\r\n    } else {\r\n      const { performedFiber, performedNextFiber, performedShadow, performedInstance } = performSibling({\r\n        nextFiber,\r\n        shadow,\r\n        instance,\r\n      });\r\n\r\n      nextFiber = performedNextFiber;\r\n      shadow = performedShadow;\r\n      instance = performedInstance;\r\n\r\n      if (performedFiber) return performedFiber;\r\n    }\r\n\r\n    performPartialUpdateEffects(nextFiber);\r\n\r\n    if (nextFiber.parent === null) return null;\r\n  }\r\n}\r\n\r\nfunction performPartialUpdateEffects(nextFiber: Fiber) {\r\n  if (nextFiber.marker === PARTIAL_UPDATE) {\r\n    const alternate = nextFiber.child?.alternate || null;\r\n    const fiber = nextFiber.child || null;\r\n\r\n    if (alternate && fiber && alternate.nextSibling && !fiber.nextSibling) {\r\n      let nextFiber = alternate.nextSibling;\r\n      const deletions: Array<Fiber> = [];\r\n\r\n      while (nextFiber) {\r\n        nextFiber.effectTag = EffectTag.DELETION;\r\n        deletions.push(nextFiber);\r\n        nextFiber = nextFiber.nextSibling;\r\n      }\r\n\r\n      deletionsHelper.get().push(...deletions);\r\n    }\r\n  }\r\n}\r\n\r\ntype PerformChildOptions = {\r\n  nextFiber: Fiber;\r\n  shadow: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction performChild(options: PerformChildOptions) {\r\n  fiberMountHelper.jumpToChild();\r\n  let nextFiber = options.nextFiber;\r\n  let shadow = options.shadow;\r\n  let instance = options.instance;\r\n\r\n  shadow = shadow ? shadow.child : null;\r\n\r\n  const alternate = getChildAlternate(nextFiber);\r\n  const hook = getHook({ shadow, alternate, instance });\r\n  const provider = shadow ? shadow.provider : alternate ? alternate.provider : null;\r\n  let fiber = new Fiber({ hook, provider });\r\n\r\n  componentFiberHelper.set(fiber);\r\n  fiber.parent = nextFiber;\r\n\r\n  const { performedInstance, performedShadow } = pertformInstance({\r\n    instance,\r\n    idx: 0,\r\n    fiber,\r\n    alternate,\r\n  });\r\n  instance = performedInstance || instance;\r\n  shadow = performedShadow || shadow;\r\n  alternate && mutateAlternate({ fiber, alternate, instance });\r\n  mutateFiber({ fiber, alternate, instance });\r\n  fiber = alternate ? performMemo({ fiber, alternate, instance }) : fiber;\r\n\r\n  nextFiber.child = fiber;\r\n  fiber.parent = nextFiber;\r\n  fiber.shadow = shadow;\r\n  nextFiber = fiber;\r\n\r\n  cloneTagMap[fiber.parent.effectTag] && (fiber.effectTag = fiber.parent.effectTag);\r\n\r\n  return {\r\n    performedFiber: nextFiber,\r\n    performedNextFiber: nextFiber,\r\n    performedShadow: shadow,\r\n    performedInstance: instance,\r\n  };\r\n}\r\n\r\ntype PerformSiblingOptions = {\r\n  nextFiber: Fiber;\r\n  shadow: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction performSibling(options: PerformSiblingOptions) {\r\n  fiberMountHelper.jumpToSibling();\r\n  let nextFiber = options.nextFiber;\r\n  let shadow = options.shadow;\r\n  let instance = options.instance;\r\n  const parent = nextFiber.parent.instance;\r\n  const childrenIdx = fiberMountHelper.getIndex();\r\n  const hasSibling = hasChildrenProp(parent) && parent.children[childrenIdx];\r\n\r\n  if (hasSibling) {\r\n    fiberMountHelper.deepWalking.set(true);\r\n\r\n    shadow = shadow ? shadow.nextSibling : null;\r\n    const alternate = getNextSiblingAlternate(nextFiber);\r\n    const hook = getHook({ shadow, alternate, instance });\r\n    const provider = shadow ? shadow.provider : alternate ? alternate.provider : null;\r\n    let fiber = new Fiber({ hook, provider });\r\n\r\n    componentFiberHelper.set(fiber);\r\n    fiber.parent = nextFiber.parent;\r\n\r\n    const { performedInstance, performedShadow } = pertformInstance({\r\n      instance: parent,\r\n      idx: childrenIdx,\r\n      fiber,\r\n      alternate,\r\n    });\r\n    instance = performedInstance || instance;\r\n    shadow = performedShadow || shadow;\r\n    alternate && mutateAlternate({ fiber, alternate, instance });\r\n    mutateFiber({ fiber, alternate, instance });\r\n    fiber = alternate ? performMemo({ fiber, alternate, instance }) : fiber;\r\n\r\n    fiber.parent = nextFiber.parent;\r\n    nextFiber.nextSibling = fiber;\r\n    fiber.shadow = shadow;\r\n    nextFiber = fiber;\r\n\r\n    cloneTagMap[fiber.parent.effectTag] && (fiber.effectTag = fiber.parent.effectTag);\r\n\r\n    return {\r\n      performedFiber: nextFiber,\r\n      performedNextFiber: nextFiber,\r\n      performedShadow: shadow,\r\n      performedInstance: instance,\r\n    };\r\n  } else {\r\n    fiberMountHelper.jumpToParent();\r\n    fiberMountHelper.deepWalking.set(false);\r\n    shadow = shadow ? shadow.parent : null;\r\n    nextFiber = nextFiber.parent;\r\n    instance = nextFiber.instance;\r\n\r\n    if (hasChildrenProp(nextFiber.instance)) {\r\n      nextFiber.instance.children = [];\r\n    }\r\n  }\r\n\r\n  return {\r\n    performedFiber: null,\r\n    performedNextFiber: nextFiber,\r\n    performedShadow: shadow,\r\n    performedInstance: instance,\r\n  };\r\n}\r\n\r\ntype GetHookOptions = {\r\n  shadow: Fiber;\r\n  alternate: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction getHook(options: GetHookOptions) {\r\n  const { shadow, alternate, instance } = options;\r\n\r\n  if (shadow) return shadow.hook;\r\n\r\n  if (alternate && getElementKey(alternate.instance) === getElementKey(instance)) {\r\n    return alternate.hook;\r\n  }\r\n\r\n  return createHook();\r\n}\r\n\r\ntype MutateFiberOptions = {\r\n  fiber: Fiber;\r\n  alternate: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction mutateFiber(options: MutateFiberOptions) {\r\n  const { fiber, alternate, instance } = options;\r\n  const key = alternate ? getElementKey(alternate.instance) : null;\r\n  const nextKey = alternate ? getElementKey(instance) : null;\r\n  const isDifferentKeys = key !== nextKey;\r\n  const isSameType = Boolean(alternate) && getInstanceType(alternate.instance) === getInstanceType(instance);\r\n  const isUpdate = isSameType && !isDifferentKeys;\r\n\r\n  fiber.instance = instance;\r\n  fiber.alternate = alternate || null;\r\n  fiber.nativeElement = isUpdate ? alternate.nativeElement : null;\r\n  fiber.effectTag = isUpdate ? EffectTag.UPDATE : EffectTag.PLACEMENT;\r\n  fiber.mountedToHost = fiber.nativeElement ? isUpdate : false;\r\n\r\n  if (hasChildrenProp(fiber.instance)) {\r\n    fiber.childrenCount = fiber.instance.children.length;\r\n  }\r\n\r\n  if (fiber.alternate) {\r\n    fiber.alternate.shadow = null;\r\n    fiber.alternate.alternate = null;\r\n  }\r\n\r\n  if (!fiber.nativeElement && detectIsVirtualNode(fiber.instance)) {\r\n    fiber.nativeElement = platform.createNativeElement(fiber);\r\n  }\r\n}\r\n\r\ntype PerformAlternateOptions = {\r\n  fiber: Fiber;\r\n  alternate: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction mutateAlternate(options: PerformAlternateOptions) {\r\n  const { fiber, alternate, instance } = options;\r\n  const alternateType = getInstanceType(alternate.instance);\r\n  const elementType = getInstanceType(instance);\r\n  const isSameType = elementType === alternateType;\r\n  const prevKey = getElementKey(alternate.instance);\r\n  const nextKey = getElementKey(instance);\r\n  const isSameKeys = prevKey === nextKey;\r\n\r\n  alternate.isUsed = true;\r\n\r\n  if (!isSameType || !isSameKeys) {\r\n    alternate.effectTag = EffectTag.DELETION;\r\n    deletionsHelper.get().push(alternate);\r\n  } else if (hasChildrenProp(alternate.instance) && hasChildrenProp(instance)) {\r\n    const prevElementsCount = alternate.childrenCount;\r\n    const nextElementsCount = instance.children.length;\r\n    const isRequestedKeys = prevElementsCount !== nextElementsCount;\r\n\r\n    if (isRequestedKeys) {\r\n      const isRemovingCase = nextElementsCount < prevElementsCount;\r\n      const isInsertingCase = nextElementsCount > prevElementsCount;\r\n      const children = hasChildrenProp(instance) ? instance.children : [];\r\n      const { keys, nextKeys } = extractKeys(alternate.child, children);\r\n      const hasKeys = keys.length > 0;\r\n      const hasAnyKeys = hasKeys || nextKeys.length > 0;\r\n\r\n      if (process.env.NODE_ENV === 'development') {\r\n        if (!hasAnyKeys && prevElementsCount !== 0 && nextElementsCount !== 0) {\r\n          error(`\r\n            [Dark]: Operation of inserting, adding, replacing elements into list requires to have a unique key for every node (string or number, but not array index)!\r\n          `);\r\n        }\r\n      }\r\n\r\n      const performRemovingNodes = () => {\r\n        const diffKeys = getDiffKeys(keys, nextKeys);\r\n\r\n        if (diffKeys.length > 0) {\r\n          const fibersMap = createFibersByKeyMap(alternate.child);\r\n\r\n          for (const key of diffKeys) {\r\n            const childAlternate = fibersMap[key] || null;\r\n\r\n            if (childAlternate) {\r\n              childAlternate.effectTag = EffectTag.DELETION;\r\n              deletionsHelper.get().push(childAlternate);\r\n\r\n              if (childAlternate.effectHost) {\r\n                fiber.markEffectHost();\r\n              }\r\n\r\n              if (childAlternate.layoutEffectHost) {\r\n                fiber.markLayoutEffectHost();\r\n              }\r\n\r\n              if (childAlternate.portalHost) {\r\n                fiber.markPortalHost();\r\n              }\r\n            }\r\n          }\r\n        } else if (!hasKeys) {\r\n          const diffCount = prevElementsCount - nextElementsCount;\r\n          const childAlternates: Array<Fiber> = takeListFromEnd(getSiblingFibers(alternate.child), diffCount);\r\n\r\n          for (const childAlternate of childAlternates) {\r\n            childAlternate.effectTag = EffectTag.DELETION;\r\n\r\n            if (childAlternate.effectHost) {\r\n              fiber.markEffectHost();\r\n            }\r\n\r\n            if (childAlternate.layoutEffectHost) {\r\n              fiber.markLayoutEffectHost();\r\n            }\r\n\r\n            if (childAlternate.portalHost) {\r\n              fiber.markPortalHost();\r\n            }\r\n          }\r\n\r\n          deletionsHelper.get().push(...childAlternates);\r\n        }\r\n      };\r\n\r\n      const performInsertingNodes = () => {\r\n        const diffKeys = getDiffKeys(nextKeys, keys);\r\n\r\n        if (diffKeys.length > 0) {\r\n          const diffKeyMap = keyBy(diffKeys, x => x);\r\n          const fibersByPositionsMap = createFibersByPositionMap(alternate.child);\r\n          const usedKeyMap = {};\r\n          let keyIdx = 0;\r\n\r\n          for (const nextKey of nextKeys) {\r\n            if (process.env.NODE_ENV === 'development') {\r\n              if (usedKeyMap[nextKey]) {\r\n                error(`Some key of node already has been used!`);\r\n              }\r\n            }\r\n\r\n            usedKeyMap[nextKey] = true;\r\n\r\n            if (nextKey !== keys[keyIdx] && diffKeyMap[nextKey]) {\r\n              const insertionFiber = new Fiber({\r\n                instance: createEmptyVirtualNode(),\r\n                parent: alternate,\r\n                effectTag: EffectTag.PLACEMENT,\r\n              });\r\n\r\n              if (keyIdx === 0) {\r\n                insertionFiber.nextSibling = alternate.child;\r\n                alternate.child = insertionFiber;\r\n              } else {\r\n                const fiber = fibersByPositionsMap[keyIdx] || null;\r\n\r\n                if (fiber) {\r\n                  insertionFiber.nextSibling = fiber;\r\n                }\r\n              }\r\n            }\r\n\r\n            keyIdx++;\r\n          }\r\n        }\r\n      };\r\n\r\n      isRemovingCase && performRemovingNodes();\r\n      isInsertingCase && performInsertingNodes();\r\n    }\r\n  }\r\n}\r\n\r\ntype PerformMemoOptions = {\r\n  fiber: Fiber;\r\n  alternate: Fiber;\r\n  instance: DarkElementInstance;\r\n};\r\n\r\nfunction performMemo(options: PerformMemoOptions) {\r\n  const { fiber, alternate, instance } = options;\r\n\r\n  if (detectIsMemo(fiber.instance)) {\r\n    let memoFiber: Fiber = null;\r\n    const factory = instance as ComponentFactory;\r\n    const alternateFactory = alternate.instance as ComponentFactory;\r\n\r\n    if (factory.type !== alternateFactory.type) return fiber;\r\n\r\n    const props = alternateFactory.props;\r\n    const nextProps = factory.props;\r\n    const skip = !factory.shouldUpdate(props, nextProps);\r\n\r\n    if (skip) {\r\n      let nextFiber: Fiber = null;\r\n      fiberMountHelper.deepWalking.set(false);\r\n\r\n      memoFiber = new Fiber({\r\n        ...alternate,\r\n        alternate,\r\n        effectTag: EffectTag.SKIP,\r\n        nextSibling: alternate.nextSibling\r\n          ? alternate.nextSibling.effectTag === EffectTag.DELETION\r\n            ? null\r\n            : alternate.nextSibling\r\n          : null,\r\n      });\r\n\r\n      alternate.alternate = null;\r\n      nextFiber = memoFiber.child;\r\n\r\n      while (nextFiber) {\r\n        nextFiber.parent = memoFiber;\r\n        nextFiber = nextFiber.nextSibling;\r\n      }\r\n\r\n      return memoFiber;\r\n    }\r\n  }\r\n\r\n  return fiber;\r\n}\r\n\r\ntype PerformInstanceOptions = {\r\n  instance: DarkElementInstance;\r\n  idx: number;\r\n  fiber: Fiber;\r\n  alternate: Fiber;\r\n};\r\n\r\nfunction pertformInstance(options: PerformInstanceOptions) {\r\n  const { instance, idx, fiber, alternate } = options;\r\n  let performedInstance: DarkElementInstance = null;\r\n  let performedShadow: Fiber = null;\r\n\r\n  if (hasChildrenProp(instance)) {\r\n    const elements = detectIsArray(instance.children[idx])\r\n      ? flatten([instance.children[idx]])\r\n      : [instance.children[idx]];\r\n\r\n    instance.children.splice(idx, 1, ...elements);\r\n    performedInstance = instance.children[idx];\r\n    performedShadow = alternate\r\n      ? getRootShadow({\r\n          instance: performedInstance,\r\n          fiber,\r\n          alternate,\r\n        })\r\n      : performedShadow;\r\n    performedInstance = mountInstance(fiber, performedInstance);\r\n  }\r\n\r\n  if (detectIsComponentFactory(performedInstance)) {\r\n    if (hasEffects(fiber)) {\r\n      fiber.markEffectHost();\r\n    }\r\n\r\n    if (hasLayoutEffects(fiber)) {\r\n      fiber.markLayoutEffectHost();\r\n    }\r\n\r\n    if (platform.detectIsPortal(performedInstance)) {\r\n      fiber.markPortalHost();\r\n    }\r\n  }\r\n\r\n  return {\r\n    performedInstance,\r\n    performedShadow,\r\n  };\r\n}\r\n\r\ntype GetRootShadowOptions = {\r\n  instance: DarkElementInstance;\r\n  fiber: Fiber;\r\n  alternate: Fiber;\r\n};\r\n\r\nfunction getRootShadow(options: GetRootShadowOptions) {\r\n  const { instance, fiber, alternate } = options;\r\n  const key = getElementKey(alternate.instance);\r\n  const nextKey = getElementKey(instance);\r\n  let shadow: Fiber = null;\r\n\r\n  if (key !== nextKey) {\r\n    shadow = getAlternateByKey(nextKey, alternate.parent.child);\r\n\r\n    if (shadow) {\r\n      fiber.hook = shadow.hook;\r\n      fiber.provider = shadow.provider;\r\n      alternate.transposition = true;\r\n    }\r\n  }\r\n\r\n  return shadow;\r\n}\r\n\r\nfunction mountInstance(fiber: Fiber, instance: DarkElementInstance) {\r\n  const isComponentFactory = detectIsComponentFactory(instance);\r\n  const factory = instance as ComponentFactory;\r\n\r\n  if (isComponentFactory) {\r\n    try {\r\n      const result = factory.type(factory.props, factory.ref);\r\n\r\n      factory.children = detectIsArray(result)\r\n        ? (flatten([result]) as Array<DarkElementInstance>)\r\n        : ([result] as Array<DarkElementInstance>);\r\n    } catch (err) {\r\n      factory.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(instance)) {\r\n    instance = instance();\r\n  }\r\n\r\n  if (hasChildrenProp(instance)) {\r\n    for (let i = 0; i < instance.children.length; i++) {\r\n      if (!instance.children[i]) {\r\n        instance.children[i] = transformElementInstance(instance.children[i]) as DarkElementInstance;\r\n      }\r\n    }\r\n\r\n    instance.children = isComponentFactory\r\n      ? instance.children\r\n      : detectIsArray(instance.children)\r\n      ? flatten([instance.children])\r\n      : [instance.children];\r\n\r\n    if (isComponentFactory && factory.children.length === 0) {\r\n      factory.children.push(createEmptyVirtualNode());\r\n    }\r\n  }\r\n\r\n  return instance;\r\n}\r\n\r\nfunction createFibersByPositionMap(fiber: Fiber) {\r\n  let nextFiber = fiber;\r\n  let position = 0;\r\n  const map: Record<string, Fiber> = {};\r\n\r\n  while (nextFiber) {\r\n    map[position] = nextFiber;\r\n\r\n    position++;\r\n    nextFiber = nextFiber.nextSibling;\r\n  }\r\n\r\n  return map;\r\n}\r\n\r\nfunction createFibersByKeyMap(fiber: Fiber) {\r\n  let nextFiber = fiber;\r\n  const map: Record<string, Fiber> = {};\r\n\r\n  while (nextFiber) {\r\n    const key = getElementKey(nextFiber.instance);\r\n\r\n    if (!detectIsEmpty(key)) {\r\n      map[key] = nextFiber;\r\n    }\r\n\r\n    nextFiber = nextFiber.nextSibling;\r\n  }\r\n\r\n  return map;\r\n}\r\n\r\nfunction extractKeys(alternate: Fiber, children: Array<DarkElementInstance>) {\r\n  let nextFiber = alternate;\r\n  let idx = 0;\r\n  const keys: Array<DarkElementKey> = [];\r\n  const nextKeys: Array<DarkElementKey> = [];\r\n\r\n  while (nextFiber || idx < children.length) {\r\n    const key = nextFiber && getElementKey(nextFiber.instance);\r\n    const nextKey = children[idx] && getElementKey(children[idx]);\r\n\r\n    if (!detectIsEmpty(key)) {\r\n      keys.push(key);\r\n    }\r\n\r\n    if (!detectIsEmpty(nextKey)) {\r\n      nextKeys.push(nextKey);\r\n    }\r\n\r\n    nextFiber = nextFiber ? nextFiber.nextSibling : null;\r\n    idx++;\r\n  }\r\n\r\n  return {\r\n    keys,\r\n    nextKeys,\r\n  };\r\n}\r\n\r\nfunction getAlternateByKey(key: DarkElementKey, fiber: Fiber) {\r\n  if (detectIsEmpty(key)) return null;\r\n  let nextFiber = fiber;\r\n\r\n  while (nextFiber) {\r\n    if (key === getElementKey(nextFiber.instance)) {\r\n      return nextFiber;\r\n    }\r\n\r\n    nextFiber = nextFiber.nextSibling;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getElementKey(instance: DarkElementInstance): DarkElementKey | null {\r\n  const key = detectIsComponentFactory(instance)\r\n    ? getComponentFactoryKey(instance)\r\n    : detectIsTagVirtualNode(instance)\r\n    ? getVirtualNodeKey(instance)\r\n    : null;\r\n\r\n  return key;\r\n}\r\n\r\nfunction getDiffKeys(keys: Array<DarkElementKey>, nextKeys: Array<DarkElementKey>): Array<DarkElementKey> {\r\n  const nextKeysMap = nextKeys.reduce((acc, key) => ((acc[key] = true), acc), {});\r\n  const diff = [];\r\n\r\n  for (const key of keys) {\r\n    if (!nextKeysMap[key]) {\r\n      diff.push(key);\r\n    }\r\n  }\r\n\r\n  return diff;\r\n}\r\n\r\nfunction getChildAlternate(fiber: Fiber): Fiber | null {\r\n  let alternate = fiber.alternate && fiber.alternate.effectTag !== EffectTag.DELETION ? fiber.alternate.child : null;\r\n\r\n  while (alternate && alternate.effectTag === EffectTag.DELETION) {\r\n    alternate = alternate.nextSibling;\r\n  }\r\n\r\n  return alternate;\r\n}\r\n\r\nfunction getNextSiblingAlternate(fiber: Fiber): Fiber | null {\r\n  let alternate = fiber.alternate?.nextSibling || null;\r\n\r\n  while (alternate && alternate.effectTag === EffectTag.DELETION) {\r\n    alternate = alternate.nextSibling;\r\n  }\r\n\r\n  return alternate;\r\n}\r\n\r\nfunction transformElementInstance(instance: DarkElement) {\r\n  return detectIsEmpty(instance) || instance === false ? createEmptyVirtualNode() : instance;\r\n}\r\n\r\nfunction getInstanceType(instance: DarkElementInstance): string | Function {\r\n  return detectIsTagVirtualNode(instance)\r\n    ? instance.name\r\n    : detectIsVirtualNode(instance)\r\n    ? instance.type\r\n    : detectIsComponentFactory(instance)\r\n    ? instance.type\r\n    : null;\r\n}\r\n\r\nfunction getSiblingFibers(fiber: Fiber): Array<Fiber> {\r\n  const list = [];\r\n  let nextFiber = fiber;\r\n\r\n  while (nextFiber) {\r\n    list.push(nextFiber);\r\n    nextFiber = nextFiber.nextSibling;\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction hasChildrenProp(element: DarkElementInstance): element is TagVirtualNode | ComponentFactory {\r\n  return detectIsTagVirtualNode(element) || detectIsComponentFactory(element);\r\n}\r\n\r\nfunction commitChanges() {\r\n  const wipFiber = wipRootHelper.get();\r\n  const fromHook = fromHookUpdateHelper.get();\r\n  const deletions = deletionsHelper.get();\r\n  const hasEffects = Boolean(wipFiber.alternate?.effectHost);\r\n  const hasLayoutEffects = Boolean(wipFiber.alternate?.layoutEffectHost);\r\n  const hasPortals = Boolean(wipFiber.alternate?.portalHost);\r\n\r\n  if (hasEffects || hasLayoutEffects || hasPortals) {\r\n    for (const fiber of deletions) {\r\n      fiber.portalHost && platform.unmountPortal(fiber);\r\n\r\n      if (fiber.effectHost || fiber.layoutEffectHost) {\r\n        walkFiber({\r\n          fiber,\r\n          onLoop: ({ nextFiber, isReturn, stop }) => {\r\n            if (nextFiber === fiber.nextSibling || fiber.transposition) return stop();\r\n\r\n            if (!isReturn && detectIsComponentFactory(nextFiber.instance)) {\r\n              cleanupLayoutEffects(nextFiber.hook);\r\n              cleanupEffects(nextFiber.hook);\r\n            }\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  commitWork(wipFiber.child, () => {\r\n    const layoutEffects = layoutEffectsHelper.get();\r\n    const effects = effectsHelper.get();\r\n\r\n    for (const fiber of deletions) {\r\n      platform.applyCommits(fiber);\r\n    }\r\n\r\n    deletionsHelper.set([]);\r\n    wipRootHelper.set(null);\r\n\r\n    for (const layoutEffect of layoutEffects) {\r\n      layoutEffect();\r\n    }\r\n\r\n    setTimeout(() => {\r\n      for (const effect of effects) {\r\n        effect();\r\n      }\r\n    });\r\n\r\n    layoutEffectsHelper.reset();\r\n    effectsHelper.reset();\r\n\r\n    if (fromHook) {\r\n      fromHookUpdateHelper.set(false);\r\n    } else {\r\n      currentRootHelper.set(wipFiber);\r\n    }\r\n  });\r\n}\r\nfunction commitWork(fiber: Fiber, onComplete: Function) {\r\n  walkFiber({\r\n    fiber,\r\n    onLoop: ({ nextFiber, isReturn, resetIsDeepWalking }) => {\r\n      const skip = nextFiber.effectTag === EffectTag.SKIP;\r\n\r\n      if (skip) {\r\n        resetIsDeepWalking();\r\n      } else if (!isReturn) {\r\n        platform.applyCommits(nextFiber);\r\n      }\r\n\r\n      if (nextFiber && nextFiber.shadow) {\r\n        nextFiber.shadow = null;\r\n      }\r\n    },\r\n  });\r\n\r\n  onComplete();\r\n}\r\n\r\ntype WalkFiberOptions<T> = {\r\n  fiber: Fiber;\r\n  onLoop: (options: OnLoopOptions<T>) => void;\r\n};\r\n\r\ntype OnLoopOptions<T> = {\r\n  nextFiber: Fiber<T>;\r\n  isReturn: boolean;\r\n  resetIsDeepWalking: () => void;\r\n  stop: () => void;\r\n};\r\n\r\nfunction walkFiber<T = unknown>(options: WalkFiberOptions<T>) {\r\n  const { fiber, onLoop } = options;\r\n  let nextFiber = fiber;\r\n  let isDeepWalking = true;\r\n  let isReturn = false;\r\n  let isStopped = false;\r\n  const visitedMap = new Map<Fiber, true>();\r\n  const detectCanVisit = (fiber: Fiber) => !visitedMap.get(fiber);\r\n\r\n  while (nextFiber) {\r\n    onLoop({\r\n      nextFiber: nextFiber as Fiber<T>,\r\n      isReturn,\r\n      resetIsDeepWalking: () => (isDeepWalking = false),\r\n      stop: () => (isStopped = true),\r\n    });\r\n\r\n    if (isStopped) {\r\n      break;\r\n    }\r\n\r\n    if (nextFiber.child && isDeepWalking && detectCanVisit(nextFiber.child)) {\r\n      const newFiber = nextFiber.child;\r\n\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap.set(newFiber, true);\r\n    } else if (nextFiber.nextSibling && detectCanVisit(nextFiber.nextSibling)) {\r\n      const newFiber = nextFiber.nextSibling;\r\n\r\n      isDeepWalking = true;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap.set(newFiber, true);\r\n    } else if (\r\n      nextFiber.parent &&\r\n      nextFiber.parent === fiber &&\r\n      nextFiber.parent.nextSibling &&\r\n      detectCanVisit(nextFiber.parent.nextSibling)\r\n    ) {\r\n      const newFiber = nextFiber.parent.nextSibling;\r\n\r\n      isDeepWalking = true;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap.set(newFiber, true);\r\n    } else if (nextFiber.parent && nextFiber.parent !== fiber) {\r\n      isDeepWalking = false;\r\n      isReturn = true;\r\n      nextFiber = nextFiber.parent;\r\n    } else {\r\n      nextFiber = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction createHook(): Hook {\r\n  return {\r\n    idx: 0,\r\n    values: [],\r\n  };\r\n}\r\n\r\ntype CreateUpdateCallbackOptions = {\r\n  rootId: number;\r\n  fiber: Fiber;\r\n  forceStart?: boolean;\r\n  onStart: () => void;\r\n};\r\n\r\nfunction createUpdateCallback(options: CreateUpdateCallbackOptions) {\r\n  const { rootId, fiber, forceStart = false, onStart } = options;\r\n  const callback = () => {\r\n    forceStart && onStart();\r\n    if (fiber.isUsed) return;\r\n    !forceStart && onStart();\r\n    effectStoreHelper.set(rootId); // important order!\r\n    fromHookUpdateHelper.set(true);\r\n    fiberMountHelper.reset();\r\n\r\n    fiber.alternate = new Fiber({\r\n      ...fiber,\r\n      alternate: null,\r\n    });\r\n    fiber.marker = PARTIAL_UPDATE;\r\n    fiber.effectTag = EffectTag.UPDATE;\r\n    fiber.child = null;\r\n\r\n    wipRootHelper.set(fiber);\r\n    componentFiberHelper.set(fiber);\r\n    fiber.instance = mountInstance(fiber, fiber.instance);\r\n    nextUnitOfWorkHelper.set(fiber);\r\n  };\r\n\r\n  return callback;\r\n}\r\n\r\nexport { Fiber, workLoop, createHook, hasChildrenProp, createUpdateCallback };\r\n","import { platform, type ScheduleCallbackOptions } from '../global';\r\nimport { getRootId, componentFiberHelper } from '../scope';\r\nimport { createUpdateCallback } from '../fiber';\r\nimport { useMemo } from '../use-memo';\r\nimport { dummyFn } from '../helpers';\r\n\r\nfunction useUpdate(options?: ScheduleCallbackOptions) {\r\n  const rootId = getRootId();\r\n  const fiber = componentFiberHelper.get();\r\n  const scope = useMemo(() => ({ fiber }), []);\r\n\r\n  scope.fiber = fiber;\r\n\r\n  const update = (onStart?: () => void) => {\r\n    const callback = createUpdateCallback({\r\n      rootId,\r\n      fiber: scope.fiber,\r\n      forceStart: Boolean(options?.timeoutMs),\r\n      onStart: onStart || dummyFn,\r\n    });\r\n\r\n    platform.scheduleCallback(callback, options);\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nexport { useUpdate };\r\n","import { useEffect } from '../use-effect';\r\nimport { useMemo } from '../use-memo';\r\nimport { componentFiberHelper } from '../scope';\r\nimport { useUpdate } from '../use-update';\r\nimport type { Fiber } from '../fiber';\r\nimport type { Context, ContextProviderValue } from '../context/model';\r\n\r\nfunction useContext<T>(context: Context<T>): T {\r\n  const { defaultValue } = context;\r\n  const fiber = componentFiberHelper.get();\r\n  const provider = getProvider<T>(context, fiber);\r\n  const value = provider ? provider.value : defaultValue;\r\n  const update = useUpdate();\r\n  const scope = useMemo(() => ({ prevValue: value }), []);\r\n  const hasProvider = Boolean(provider);\r\n\r\n  useEffect(() => {\r\n    if (!hasProvider) return;\r\n\r\n    const subscriber = (newValue: T) => {\r\n      if (!Object.is(scope.prevValue, newValue)) {\r\n        update();\r\n      }\r\n    };\r\n\r\n    provider.subscribers.push(subscriber);\r\n\r\n    return () => {\r\n      const idx = provider.subscribers.findIndex(x => x === subscriber);\r\n\r\n      if (idx !== -1) {\r\n        provider.subscribers.splice(idx, 1);\r\n      }\r\n    };\r\n  }, [hasProvider]);\r\n\r\n  scope.prevValue = value;\r\n\r\n  return value;\r\n}\r\n\r\nfunction getProvider<T>(context: Context<T>, fiber: Fiber): ContextProviderValue<T> {\r\n  let nextFiber = fiber;\r\n\r\n  while (nextFiber) {\r\n    if (nextFiber.provider && nextFiber.provider.get(context)) {\r\n      return nextFiber.provider.get(context) as ContextProviderValue<T>;\r\n    }\r\n\r\n    nextFiber = nextFiber.parent;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { useContext };\r\n","import { createComponent } from '../component';\r\nimport { useEffect } from '../use-effect';\r\nimport { componentFiberHelper } from '../scope';\r\nimport { useContext } from '../use-context';\r\nimport { detectIsFunction } from '../helpers';\r\nimport type { Context, ContexProviderProps } from './model';\r\n\r\nfunction createContext<T>(defaultValue: T): Context<T> {\r\n  let displayName = 'Context';\r\n  const context: Context<T> = {\r\n    displayName,\r\n    defaultValue,\r\n    Provider: null,\r\n    Consumer: null,\r\n  };\r\n\r\n  mutateContext(context, defaultValue, displayName);\r\n\r\n  Object.defineProperty(context, 'displayName', {\r\n    get: () => displayName,\r\n    set: (newValue: string) => {\r\n      displayName = newValue;\r\n      mutateContext(context, defaultValue, displayName);\r\n    },\r\n  });\r\n\r\n  return context;\r\n}\r\n\r\nfunction mutateContext<T>(context: Context<T>, defaultValue: T, displayName: string) {\r\n  context.Provider = createProvider(context, defaultValue, displayName);\r\n  context.Consumer = createConsumer(context, displayName);\r\n}\r\n\r\nfunction createProvider<T>(context: Context<T>, defaultValue: T, displayName: string) {\r\n  return createComponent<ContexProviderProps<T>>(\r\n    ({ value = defaultValue, slot }) => {\r\n      const fiber = componentFiberHelper.get();\r\n\r\n      if (!fiber.provider) {\r\n        fiber.provider = new Map();\r\n      }\r\n\r\n      if (!fiber.provider.get(context)) {\r\n        fiber.provider.set(context, {\r\n          subscribers: [],\r\n          value,\r\n        });\r\n      }\r\n\r\n      const provider = fiber.provider.get(context);\r\n\r\n      useEffect(() => {\r\n        for (const subscriber of provider.subscribers) {\r\n          subscriber(value);\r\n        }\r\n      }, [value]);\r\n\r\n      provider.value = value;\r\n\r\n      return slot;\r\n    },\r\n    { displayName: `${displayName}.Provider` },\r\n  );\r\n}\r\n\r\nfunction createConsumer<T>(context: Context<T>, displayName: string) {\r\n  return createComponent(\r\n    ({ slot }) => {\r\n      const value = useContext(context);\r\n\r\n      return detectIsFunction(slot) ? slot(value) : null;\r\n    },\r\n    { displayName: `${displayName}.Consumer` },\r\n  );\r\n}\r\n\r\nexport { createContext };\r\n","import { detectIsNumber, detectIsString, detectIsFunction } from '../helpers';\r\nimport { View, Text, type TagVirtualNodeFactory } from '../view';\r\n\r\nfunction getChildren(children: Array<any>) {\r\n  children = children.map(x => (detectIsString(x) || detectIsNumber(x) ? Text(x.toString()) : x));\r\n\r\n  return children ? (Array.isArray(children) ? [...children] : [children]) : [];\r\n}\r\n\r\nfunction createElement(\r\n  tag: string | Function,\r\n  props: any,\r\n  ...children: Array<any>\r\n): TagVirtualNodeFactory | Function | null {\r\n  if (detectIsString(tag)) {\r\n    return View({\r\n      ...props,\r\n      as: tag,\r\n      slot: getChildren(children),\r\n    });\r\n  }\r\n\r\n  if (detectIsFunction(tag)) {\r\n    let slot = getChildren(children);\r\n\r\n    slot = slot.length === 1 ? slot[0] : slot;\r\n\r\n    return tag({ ...props, slot });\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createElement };\r\n","import { useMemo } from '../use-memo';\r\n\r\nfunction useCallback<T = Function>(callback: T, deps: Array<any>): T {\r\n  const value = useMemo(() => callback, deps);\r\n\r\n  return value;\r\n}\r\n\r\nexport { useCallback };\r\n","import { type ScheduleCallbackOptions } from '../global';\r\nimport { detectIsUndefined, detectIsFunction } from '../helpers';\r\nimport { componentFiberHelper } from '../scope';\r\nimport { useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\nimport { useCallback } from '../use-callback';\r\nimport { TaskPriority } from '../constants';\r\n\r\ntype Value<T> = T | ((prevValue: T) => T);\r\ntype Scope = {\r\n  idx: number;\r\n  values: Array<any>;\r\n};\r\n\r\nfunction useState<T = unknown>(initialValue: T, options?: ScheduleCallbackOptions): [T, (value: Value<T>) => void] {\r\n  const fiber = componentFiberHelper.get();\r\n  const update = useUpdate(options);\r\n  const scope: Scope = useMemo(\r\n    () => ({\r\n      idx: fiber.hook.idx,\r\n      values: fiber.hook.values,\r\n    }),\r\n    [],\r\n  );\r\n  const setState = useCallback((sourceValue: Value<T>) => {\r\n    const value = scope.values[scope.idx];\r\n    const newValue = detectIsFunction(sourceValue) ? sourceValue(value) : sourceValue;\r\n\r\n    if (!Object.is(value, newValue)) {\r\n      const setValue = () => {\r\n        scope.values[scope.idx] = newValue;\r\n      };\r\n\r\n      if (options?.priority === TaskPriority.LOW) {\r\n        update(() => setValue());\r\n      } else {\r\n        setValue();\r\n        update();\r\n      }\r\n    }\r\n  }, []);\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook;\r\n  const value: T = !detectIsUndefined(values[idx]) ? values[idx] : initialValue;\r\n\r\n  values[idx] = value;\r\n  scope.idx = idx;\r\n  scope.values = values;\r\n  hook.idx++;\r\n\r\n  return [value, setState];\r\n}\r\n\r\nexport { useState };\r\n","import { createComponent } from '../component';\r\nimport { useState } from '../use-state';\r\nimport { createContext } from '../context';\r\nimport { useContext } from '../use-context';\r\nimport { useMemo } from '../use-memo';\r\nimport { useCallback } from '../use-callback';\r\nimport type { DarkElement } from '../shared';\r\n\r\ntype SuspenseProps = {\r\n  fallback: DarkElement;\r\n};\r\n\r\ntype SuspenseContextValue = {\r\n  fallback: DarkElement;\r\n  isLoaded: boolean;\r\n  trigger: () => void;\r\n};\r\n\r\nconst SuspenseContext = createContext<SuspenseContextValue>({\r\n  fallback: null,\r\n  isLoaded: true,\r\n  trigger: () => {},\r\n});\r\n\r\nconst Suspense = createComponent<SuspenseProps>(({ fallback, slot }) => {\r\n  if (!fallback) {\r\n    throw new Error(`Suspense fallback not found`);\r\n  }\r\n  const { isLoaded: isSuspenseLoaded } = useContext(SuspenseContext);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const trigger = useCallback(() => setIsLoaded(true), []);\r\n  const value = useMemo(() => ({ fallback, isLoaded, trigger }), [fallback, isLoaded]);\r\n\r\n  return SuspenseContext.Provider({\r\n    value,\r\n    slot: isSuspenseLoaded ? slot : null,\r\n  });\r\n});\r\n\r\nexport { SuspenseContext, Suspense };\r\n","import { type Component, createComponent, detectIsComponentFactory } from '../component';\r\nimport { useState } from '../use-state';\r\nimport { useEffect } from '../use-effect';\r\nimport { forwardRef } from '../ref';\r\nimport { SuspenseContext } from '../suspense';\r\nimport { useContext } from '../use-context';\r\n\r\nconst $$lazy = Symbol('lazy');\r\n\r\ntype LazyScope<P, R> = {\r\n  component: Component<P, R>;\r\n};\r\n\r\nfunction lazy<P, R = unknown>(dynamic: () => Promise<{ default: Component<P> }>) {\r\n  return forwardRef(\r\n    createComponent<P, R>(\r\n      (props, ref) => {\r\n        const { fallback, trigger } = useContext(SuspenseContext);\r\n        const [scope, setScope] = useState<LazyScope<P, R>>({\r\n          component: null,\r\n        });\r\n\r\n        useEffect(() => {\r\n          fetchModule(dynamic).then(component => {\r\n            setScope({ component });\r\n          });\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n          if (!scope.component) return;\r\n          trigger();\r\n        }, [scope.component]);\r\n\r\n        return scope.component ? scope.component(props, ref) : fallback;\r\n      },\r\n      { token: $$lazy },\r\n    ),\r\n  );\r\n}\r\n\r\nconst detectIsLazy = (factory: unknown) => detectIsComponentFactory(factory) && factory.token === $$lazy;\r\n\r\nfunction fetchModule(dynamic: () => Promise<{ default: Component }>) {\r\n  return new Promise<Component>(resolve => {\r\n    dynamic().then(module => {\r\n      if (!module.default) {\r\n        throw new Error('lazy loaded component should be exported as default!');\r\n      }\r\n\r\n      resolve(module.default);\r\n    });\r\n  });\r\n}\r\n\r\nexport { lazy, detectIsLazy };\r\n","import { useState } from '../use-state';\r\nimport { useEffect } from '../use-effect';\r\nimport { TaskPriority } from '../constants';\r\n\r\ntype UseDeferredValueOprions = {\r\n  timeoutMs: number;\r\n};\r\n\r\nfunction useDeferredValue<T>(value: T, options?: UseDeferredValueOprions): T {\r\n  const { timeoutMs } = options || {};\r\n  const [deferredValue, setDeferredValue] = useState(value, {\r\n    priority: TaskPriority.LOW,\r\n    timeoutMs,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setDeferredValue(value);\r\n  }, [value]);\r\n\r\n  return deferredValue;\r\n}\r\n\r\nexport { useDeferredValue };\r\n","import { componentFiberHelper } from '../scope';\r\nimport { useEffect } from '../use-effect';\r\nimport { useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\n\r\ntype ErrorScope = {\r\n  error: Error;\r\n};\r\n\r\nfunction useError(): Error | null {\r\n  const fiber = componentFiberHelper.get();\r\n  const update = useUpdate();\r\n  const scope: ErrorScope = useMemo(() => ({ error: null }), []);\r\n\r\n  fiber.catchException = (error: Error) => {\r\n    scope.error = error;\r\n    update();\r\n  };\r\n\r\n  useEffect(() => {\r\n    scope.error = null;\r\n  }, [scope.error]);\r\n\r\n  return scope.error;\r\n}\r\n\r\nexport { useError };\r\n","import { useMemo } from '../use-memo';\r\nimport { useCallback } from '../use-callback';\r\n\r\nfunction useEvent<T extends (...args) => any>(fn: T) {\r\n  const scope = useMemo(() => ({ fn }), []);\r\n\r\n  scope.fn = fn;\r\n\r\n  const callback = useCallback((...args) => {\r\n    return scope.fn(...args);\r\n  }, []);\r\n\r\n  return callback as unknown as T;\r\n}\r\n\r\nexport { useEvent };\r\n","import { useMemo } from '../use-memo';\r\nimport type { MutableRef } from '../ref';\r\n\r\nfunction useImperativeHandle<T>(ref: MutableRef<T>, createHandle: () => T, deps: Array<any>) {\r\n  const current = useMemo(() => createHandle(), deps);\r\n\r\n  ref.current = current;\r\n}\r\n\r\nexport { useImperativeHandle };\r\n","import { useState } from '../use-state';\r\nimport { useCallback } from '../use-callback';\r\nimport { useMemo } from '../use-memo';\r\nimport { detectIsFunction } from '../helpers';\r\nimport type { Reducer, Dispatch, ReducerAction, ReducerState } from './model';\r\n\r\nfunction useReducer<R extends Reducer>(\r\n  reducer: R,\r\n  initialState: ReducerState<R>,\r\n  initializer?: (state: ReducerState<R>) => ReducerState<R>,\r\n): [ReducerState<R>, Dispatch<ReducerAction<R>>] {\r\n  const initialValue = useMemo(() => {\r\n    return detectIsFunction(initializer) ? initializer(initialState) : initialState;\r\n  }, []);\r\n  const [state, setState] = useState<ReducerState<R>>(initialValue);\r\n  const dispatch = useCallback((action: ReducerAction<R>) => setState(state => reducer(state, action)), []) as Dispatch<\r\n    ReducerAction<R>\r\n  >;\r\n\r\n  return [state, dispatch];\r\n}\r\n\r\nexport { useReducer };\r\n","import { useMemo } from '../use-memo';\r\nimport type { MutableRef } from '../ref/model';\r\n\r\nfunction useRef<T>(initialValue: T = null): MutableRef<T> {\r\n  const ref = useMemo(() => ({ current: initialValue }), []) as MutableRef<T>;\r\n\r\n  return ref;\r\n}\r\n\r\nexport { useRef };\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","TaskPriority","ROOT","EMPTY_NODE","ATTR_KEY","ATTR_REF","PARTIAL_UPDATE","detectIsFunction","detectIsUndefined","detectIsNumber","detectIsString","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","error","str","console","flatten","source","list","levelMap","idx","level","item","length","push","getTime","Date","now","keyBy","fn","reduce","acc","x","takeListFromEnd","count","slice","dummyFn","detectIsDepsDifferent","deps","prevDeps","i","defaultOptions","displayName","defaultProps","token","options","children","this","type","props","ref","shouldUpdate","createComponent","createElement","computedOptions","computedProps","ComponentFactory","NodeType","detectIsComponentFactory","getComponentFactoryKey","wipRoot","currentRoot","nextUnitOfWork","fromHookUpdate","events","Map","deletions","fiberMount","navigation","isDeepWalking","componentFiber","effects","layoutEffects","rootId","stores","effectStoreHelper","set","id","effectStore","getRootId","Store","storeHelper","wipRootHelper","fiber","currentRootHelper","nextUnitOfWorkHelper","componentFiberHelper","fromHookUpdateHelper","eventsHelper","deletionsHelper","fiberMountHelper","reset","getIndex","jumpToChild","nextLevel","jumpToParent","jumpToSibling","deepWalking","effectsHelper","add","effect","layoutEffectsHelper","createEffectFunctions","useEffect","hasEffects","cleanupEffects","store","hook","values","runEffect","undefined","cleanup","some","$$virtualNode","TAG","name","isVoid","attrs","VirtualNode","text","TEXT","COMMENT","detectIsVirtualNode","vNode","detectIsTagVirtualNode","TagVirtualNode","detectIsCommentVirtualNode","CommentVirtualNode","detectIsTextVirtualNode","TextVirtualNode","detectIsEmptyVirtualNode","getVirtualNodeKey","Text","Comment","View","def","as","slot","rest","createEmptyVirtualNode","detectIsVirtualNodeFactory","$$fragment","Fragment","detectIsFragment","forwardRef","component","detectIsRef","mutableRef","$$memo","defaultShouldUpdate","nextProps","keys","detectIsMemo","memo","Memo","processValue","getValue","isDepsDifferent","check","wrap","useMemo","hookValue","computedGetValue","EffectTag","platform","scheduleCallback","Error","shouldYeildToHost","createNativeElement","applyCommits","detectIsPortal","unmountPortal","cloneTagMap","PLACEMENT","SKIP","useLayoutEffect","hasLayoutEffects","cleanupLayoutEffects","nativeElement","parent","child","nextSibling","alternate","effectTag","instance","shadow","provider","transposition","mountedToHost","portalHost","effectHost","layoutEffectHost","childrenCount","marker","isUsed","markPortalHost","markEffectHost","markLayoutEffectHost","setError","catchException","workLoop","wipFiber","shouldYield","hasMoreWork","Boolean","performUnitOfWork","fromHook","hasPortals","walkFiber","onLoop","nextFiber","isReturn","stop","resetIsDeepWalking","layoutEffect","setTimeout","onComplete","commitChanges","hasChildrenProp","performChild","performedFiber","performSibling","performPartialUpdateEffects","DELETION","getChildAlternate","getHook","Fiber","pertformInstance","mutateAlternate","mutateFiber","performMemo","performedNextFiber","performedShadow","performedInstance","childrenIdx","getNextSiblingAlternate","getElementKey","isDifferentKeys","isUpdate","getInstanceType","UPDATE","alternateType","isSameType","isSameKeys","isRemovingCase","isInsertingCase","nextKeys","nextKey","extractKeys","diffKeys","getDiffKeys","fibersMap","map","createFibersByKeyMap","childAlternate","diffCount","childAlternates","getSiblingFibers","performRemovingNodes","diffKeyMap","fibersByPositionsMap","position","createFibersByPositionMap","usedKeyMap","keyIdx","insertionFiber","performInsertingNodes","memoFiber","alternateFactory","elements","splice","getAlternateByKey","getRootShadow","mountInstance","isComponentFactory","result","err","transformElementInstance","nextKeysMap","diff","element","isStopped","visitedMap","detectCanVisit","newFiber","createHook","createUpdateCallback","forceStart","onStart","useUpdate","scope","callback","timeoutMs","useContext","context","defaultValue","getProvider","update","prevValue","hasProvider","subscriber","newValue","is","subscribers","findIndex","createContext","Provider","Consumer","mutateContext","createProvider","createConsumer","getChildren","toString","tag","useCallback","useState","initialValue","setState","sourceValue","priority","LOW","SuspenseContext","fallback","isLoaded","trigger","Suspense","isSuspenseLoaded","setIsLoaded","$$lazy","lazy","dynamic","setScope","Promise","resolve","then","default","fetchModule","detectIsLazy","useDeferredValue","deferredValue","setDeferredValue","useError","useEvent","args","useImperativeHandle","createHandle","current","useReducer","reducer","initialState","initializer","state","dispatch","action","useRef"],"sourceRoot":""}