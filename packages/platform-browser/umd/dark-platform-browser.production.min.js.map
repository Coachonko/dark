{"version":3,"file":"dark-platform-browser.production.min.js","mappings":"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","sources":["webpack://DarkPlatformBrowser/webpack/universalModuleDefinition","webpack://DarkPlatformBrowser/external umd {\"root\":\"DarkCore\",\"commonjs2\":\"@dark-engine/core\",\"commonjs\":\"@dark-engine/core\",\"amd\":\"@dark-engine/core\"}","webpack://DarkPlatformBrowser/webpack/bootstrap","webpack://DarkPlatformBrowser/webpack/runtime/define property getters","webpack://DarkPlatformBrowser/webpack/runtime/hasOwnProperty shorthand","webpack://DarkPlatformBrowser/webpack/runtime/make namespace object","webpack://DarkPlatformBrowser/./src/portal/portal.tsx","webpack://DarkPlatformBrowser/./src/events/events.ts","webpack://DarkPlatformBrowser/./src/dom/dom.ts","webpack://DarkPlatformBrowser/./src/scheduler/scheduler.ts","webpack://DarkPlatformBrowser/./src/render/render.ts","webpack://DarkPlatformBrowser/./src/create-root/create-root.tsx","webpack://DarkPlatformBrowser/./src/use-style/use-style.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@dark-engine/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DarkPlatformBrowser\", [\"@dark-engine/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DarkPlatformBrowser\"] = factory(require(\"@dark-engine/core\"));\n\telse\n\t\troot[\"DarkPlatformBrowser\"] = factory(root[\"DarkCore\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__317__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__317__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\r\n  type Fiber,\r\n  type DarkElement,\r\n  type ComponentFactory,\r\n  createComponent,\r\n  detectIsComponentFactory,\r\n  useMemo,\r\n} from '@dark-engine/core';\r\n\r\nconst $$portal = Symbol('portal');\r\n\r\nfunction createPortal(slot: DarkElement, container: Element) {\r\n  if (!(container instanceof Element)) {\r\n    throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n  }\r\n\r\n  return Portal({ [$$portal]: container, slot });\r\n}\r\n\r\ntype PortalProps = {\r\n  [$$portal]: Element;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst Portal = createComponent<PortalProps>(\r\n  ({ slot, ...rest }) => {\r\n    useMemo(() => (rest[$$portal].innerHTML = ''), []);\r\n\r\n    return slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\n\r\nconst detectIsPortal = (factory: unknown): factory is ComponentFactory =>\r\n  detectIsComponentFactory(factory) && factory.token === $$portal;\r\n\r\nconst getPortalContainer = (factory: unknown): Element | null =>\r\n  detectIsPortal(factory) ? factory.props[$$portal] : null;\r\n\r\nfunction unmountPortal(fiber: Fiber<Element>) {\r\n  const container = getPortalContainer(fiber.instance);\r\n\r\n  if (container) {\r\n    container.innerHTML = '';\r\n  }\r\n}\r\n\r\nexport { createPortal, detectIsPortal, getPortalContainer, unmountPortal };\r\n","import { detectIsFunction, eventsStore } from '@dark-engine/core';\r\n\r\ntype BrowserEventConstructor = (type: string, event: Event) => void;\r\n\r\nclass SyntheticEvent<E extends Event, T = Element> {\r\n  public type = '';\r\n  public sourceEvent: E = null;\r\n  public target: T = null;\r\n  private propagation = true;\r\n\r\n  constructor(options: Pick<SyntheticEvent<E, T>, 'sourceEvent' | 'target'>) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n\r\n  public stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n\r\n  public preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n\r\n  public getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\n\r\ntype DelegateEventOptions = {\r\n  target: Element;\r\n  eventName: string;\r\n  handler: (e: Event) => void;\r\n};\r\n\r\nfunction delegateEvent(options: DelegateEventOptions) {\r\n  const { target, eventName, handler } = options;\r\n  const eventsMap = eventsStore.get();\r\n  const handlerMap = eventsMap.get(eventName);\r\n\r\n  if (!handlerMap) {\r\n    const rootHandler = (event: Event) => {\r\n      const fireEvent = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target as Element;\r\n      let syntheticEvent: SyntheticEvent<Event> = null;\r\n\r\n      if (detectIsFunction(fireEvent)) {\r\n        syntheticEvent = new SyntheticEvent({\r\n          sourceEvent: event,\r\n          target,\r\n        });\r\n        fireEvent(syntheticEvent);\r\n      }\r\n\r\n      if (syntheticEvent ? syntheticEvent.getPropagation() : target.parentElement) {\r\n        target.parentElement.dispatchEvent(new (event.constructor as BrowserEventConstructor)(event.type, event));\r\n      }\r\n    };\r\n\r\n    eventsMap.set(eventName, new WeakMap([[target, handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    eventsStore.addUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlerMap.set(target, handler);\r\n  }\r\n}\r\n\r\nconst detectIsEvent = (attrName: string) => attrName.startsWith('on');\r\n\r\nconst getEventName = (attrName: string) => attrName.slice(2, attrName.length).toLowerCase();\r\n\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n","import {\r\n  type Fiber,\r\n  type VirtualNode,\r\n  type TagVirtualNode,\r\n  type TextVirtualNode,\r\n  type CommentVirtualNode,\r\n  type Ref,\r\n  ATTR_KEY,\r\n  ATTR_REF,\r\n  EffectTag,\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  NodeType,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsMutableRef,\r\n  walkFiber,\r\n} from '@dark-engine/core';\r\nimport { detectIsPortal, getPortalContainer } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport type { DOMElement, DOMFragment } from './types';\r\n\r\nconst attrBlackListMap = {\r\n  [ATTR_KEY]: true,\r\n  [ATTR_REF]: true,\r\n  void: true,\r\n};\r\n\r\nlet fragmentsMap: Map<Element, DOMFragment> = new Map();\r\n\r\nlet trackUpdate: (nativeElement: Element) => void = null;\r\n\r\nfunction createNativeElement(vNode: VirtualNode): DOMElement {\r\n  const map = {\r\n    [NodeType.TAG]: (vNode: VirtualNode) => {\r\n      const tagNode = vNode as TagVirtualNode;\r\n      const node = detectIsSvgElement(tagNode.name)\r\n        ? document.createElementNS('http://www.w3.org/2000/svg', tagNode.name)\r\n        : document.createElement(tagNode.name);\r\n\r\n      return node;\r\n    },\r\n    [NodeType.TEXT]: (vNode: VirtualNode) => {\r\n      const textNode = vNode as TextVirtualNode;\r\n      const node = document.createTextNode(textNode.value);\r\n\r\n      return node;\r\n    },\r\n    [NodeType.COMMENT]: (vNode: VirtualNode) => {\r\n      const commentNode = vNode as CommentVirtualNode;\r\n      const node = document.createComment(commentNode.value);\r\n\r\n      return node;\r\n    },\r\n  };\r\n\r\n  return map[vNode.type](vNode);\r\n}\r\n\r\nfunction detectIsSvgElement(tagName: string) {\r\n  const tagMap = {\r\n    svg: true,\r\n    circle: true,\r\n    ellipse: true,\r\n    g: true,\r\n    text: true,\r\n    tspan: true,\r\n    textPath: true,\r\n    path: true,\r\n    polygon: true,\r\n    polyline: true,\r\n    line: true,\r\n    rect: true,\r\n    use: true,\r\n    image: true,\r\n    symbol: true,\r\n    defs: true,\r\n    linearGradient: true,\r\n    radialGradient: true,\r\n    stop: true,\r\n    clipPath: true,\r\n    pattern: true,\r\n    mask: true,\r\n    marker: true,\r\n  };\r\n\r\n  return Boolean(tagMap[tagName]);\r\n}\r\n\r\nfunction applyRef(ref: Ref<Element>, element: Element) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(element);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = element;\r\n  }\r\n}\r\n\r\nfunction addAttributes(element: Element, vNode: VirtualNode) {\r\n  if (!detectIsTagVirtualNode(vNode)) return;\r\n  const attrNames = Object.keys(vNode.attrs);\r\n\r\n  for (const attrName of attrNames) {\r\n    const attrValue = vNode.attrs[attrName];\r\n\r\n    if (attrName === ATTR_REF) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if (detectIsFunction(attrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        delegateEvent({\r\n          target: element,\r\n          handler: attrValue,\r\n          eventName: getEventName(attrName),\r\n        });\r\n      }\r\n    } else if (!detectIsUndefined(attrValue) && !attrBlackListMap[attrName]) {\r\n      const stopAttrsMap = upgradeInputAttributes({\r\n        tagName: vNode.name,\r\n        value: attrValue,\r\n        attrName,\r\n        element,\r\n      });\r\n\r\n      !stopAttrsMap[attrName] && element.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAttributes(element: Element, vNode: TagVirtualNode, nextVNode: TagVirtualNode) {\r\n  const attrNames = new Set([...Object.keys(vNode.attrs), ...Object.keys(nextVNode.attrs)]);\r\n\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = vNode.attrs[attrName];\r\n    const nextAttrValue = nextVNode.attrs[attrName];\r\n\r\n    if (attrName === ATTR_REF) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsFunction(prevAttrValue)) {\r\n        if (detectIsEvent(attrName) && prevAttrValue !== nextAttrValue) {\r\n          delegateEvent({\r\n            target: element,\r\n            handler: nextAttrValue,\r\n            eventName: getEventName(attrName),\r\n          });\r\n        }\r\n      } else if (!attrBlackListMap[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stopAttrsMap = upgradeInputAttributes({\r\n          tagName: nextVNode.name,\r\n          value: nextAttrValue,\r\n          attrName,\r\n          element,\r\n        });\r\n        !stopAttrsMap[attrName] && element.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      element.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\n\r\nconst INPUT_STOP_ATTRS_MAP = {\r\n  value: true,\r\n  checked: true,\r\n};\r\n\r\nconst TEXTAREA_STOP_ATTRS_MAP = {\r\n  value: true,\r\n};\r\n\r\nconst OPTIONS_STOP_ATTRS_MAP = {\r\n  selected: true,\r\n};\r\n\r\nconst DEFAULT_STOP_ATTRS_MAP = {};\r\n\r\ntype PatchedElements = 'input' | 'textarea' | 'option';\r\n\r\ntype UpgradeInputAttributesOptions = {\r\n  tagName: string;\r\n  element: Element;\r\n  attrName: string;\r\n  value: string | boolean;\r\n};\r\n\r\nfunction upgradeInputAttributes(options: UpgradeInputAttributesOptions): Record<string, boolean> {\r\n  const { tagName, element, attrName, value } = options;\r\n  const map: Record<PatchedElements, () => Record<string, boolean>> = {\r\n    input: () => {\r\n      if (INPUT_STOP_ATTRS_MAP[attrName]) {\r\n        element[attrName] = value;\r\n      }\r\n\r\n      return INPUT_STOP_ATTRS_MAP;\r\n    },\r\n    textarea: () => {\r\n      if (TEXTAREA_STOP_ATTRS_MAP[attrName]) {\r\n        element[attrName] = value;\r\n      }\r\n\r\n      return TEXTAREA_STOP_ATTRS_MAP;\r\n    },\r\n    option: () => {\r\n      if (OPTIONS_STOP_ATTRS_MAP[attrName]) {\r\n        element[attrName] = value;\r\n      }\r\n\r\n      return OPTIONS_STOP_ATTRS_MAP;\r\n    },\r\n  };\r\n\r\n  return map[tagName] ? map[tagName]() : DEFAULT_STOP_ATTRS_MAP;\r\n}\r\n\r\nfunction getParentFiberWithNativeElement(fiber: Fiber<Element>): Fiber<Element> {\r\n  let nextFiber = fiber;\r\n\r\n  while (nextFiber) {\r\n    nextFiber = nextFiber.parent;\r\n\r\n    if (detectIsPortal(nextFiber.instance)) {\r\n      nextFiber.nativeElement = getPortalContainer(nextFiber.instance);\r\n    }\r\n\r\n    if (nextFiber.nativeElement) return nextFiber;\r\n  }\r\n\r\n  return nextFiber;\r\n}\r\n\r\nfunction getNodeOnTheRight(fiber: Fiber<Element>, parentElement: Element) {\r\n  let node: Element = null;\r\n\r\n  walkFiber<Element>({\r\n    fiber,\r\n    onLoop: ({ nextFiber, stop, resetIsDeepWalking }) => {\r\n      if (nextFiber.nativeElement && nextFiber.nativeElement.parentElement === parentElement) {\r\n        node = nextFiber.nativeElement;\r\n\r\n        return stop();\r\n      }\r\n\r\n      if (!nextFiber.mountedToHost) {\r\n        return resetIsDeepWalking();\r\n      }\r\n    },\r\n  });\r\n\r\n  return node;\r\n}\r\n\r\nfunction getChildIndex(fiber: Fiber<Element>, parentNativeElement: Element) {\r\n  let nextFiber = fiber;\r\n\r\n  while (nextFiber) {\r\n    if (nextFiber?.parent?.nativeElement === parentNativeElement) {\r\n      return nextFiber.idx;\r\n    }\r\n\r\n    nextFiber = nextFiber.parent;\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nfunction commitCreation(fiber: Fiber<Element>) {\r\n  const parentFiber = getParentFiberWithNativeElement(fiber);\r\n  const parentNativeElement = parentFiber.nativeElement;\r\n  const childNodes = parentNativeElement.childNodes;\r\n\r\n  const append = () => {\r\n    const { fragment } =\r\n      fragmentsMap.get(parentNativeElement) ||\r\n      ({\r\n        fragment: document.createDocumentFragment(),\r\n        callback: () => {},\r\n      } as DOMFragment);\r\n\r\n    fragmentsMap.set(parentNativeElement, {\r\n      fragment,\r\n      callback: () => {\r\n        parentNativeElement.appendChild(fragment);\r\n      },\r\n    });\r\n    fragment.appendChild(fiber.nativeElement);\r\n    fiber.markMountedToHost();\r\n  };\r\n\r\n  const insert = () => {\r\n    parentNativeElement.insertBefore(fiber.nativeElement, getNodeOnTheRight(fiber, parentNativeElement));\r\n    fiber.markMountedToHost();\r\n  };\r\n\r\n  if (childNodes.length === 0 || getChildIndex(fiber, parentNativeElement) > childNodes.length - 1) {\r\n    append();\r\n  } else {\r\n    insert();\r\n  }\r\n\r\n  addAttributes(fiber.nativeElement, fiber.instance as VirtualNode);\r\n}\r\n\r\nfunction commitUpdate(nativeElement: Element, instance: VirtualNode, nextInstance: VirtualNode) {\r\n  if (\r\n    detectIsTextVirtualNode(instance) &&\r\n    detectIsTextVirtualNode(nextInstance) &&\r\n    instance.value !== nextInstance.value\r\n  ) {\r\n    return (nativeElement.textContent = nextInstance.value);\r\n  }\r\n\r\n  if (detectIsTagVirtualNode(instance) && detectIsTagVirtualNode(nextInstance)) {\r\n    return updateAttributes(nativeElement, instance, nextInstance);\r\n  }\r\n}\r\n\r\nfunction commitDeletion(fiber: Fiber<Element>) {\r\n  const parentFiber = getParentFiberWithNativeElement(fiber);\r\n\r\n  walkFiber<Element>({\r\n    fiber,\r\n    onLoop: ({ nextFiber, isReturn, resetIsDeepWalking, stop }) => {\r\n      if (nextFiber === fiber.nextSibling || nextFiber === fiber.parent) {\r\n        return stop();\r\n      }\r\n\r\n      if (!isReturn && nextFiber.nativeElement) {\r\n        !detectIsPortal(nextFiber.instance) && parentFiber.nativeElement.removeChild(nextFiber.nativeElement);\r\n\r\n        return resetIsDeepWalking();\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nfunction applyCommit(fiber: Fiber<Element>) {\r\n  const map: Record<EffectTag, () => void> = {\r\n    [EffectTag.CREATE]: () => {\r\n      if (fiber.nativeElement === null) return;\r\n      trackUpdate && trackUpdate(fiber.nativeElement);\r\n      commitCreation(fiber);\r\n    },\r\n    [EffectTag.UPDATE]: () => {\r\n      if (\r\n        fiber.nativeElement === null ||\r\n        !detectIsVirtualNode(fiber.alternate.instance) ||\r\n        !detectIsVirtualNode(fiber.instance)\r\n      ) {\r\n        return;\r\n      }\r\n      trackUpdate && trackUpdate(fiber.nativeElement);\r\n      commitUpdate(fiber.nativeElement, fiber.alternate.instance, fiber.instance);\r\n    },\r\n    [EffectTag.DELETE]: () => commitDeletion(fiber),\r\n    [EffectTag.SKIP]: () => {},\r\n  };\r\n\r\n  map[fiber.effectTag]();\r\n}\r\n\r\nfunction finishCommitWork() {\r\n  for (const { callback } of fragmentsMap.values()) {\r\n    callback();\r\n  }\r\n\r\n  fragmentsMap = new Map();\r\n}\r\n\r\nfunction setTrackUpdate(fn: typeof trackUpdate) {\r\n  trackUpdate = fn;\r\n}\r\n\r\nexport { createNativeElement, applyCommit, finishCommitWork, setTrackUpdate };\r\n","import { type ScheduleCallbackOptions, getTime, workLoop, wipRootStore, TaskPriority } from '@dark-engine/core';\r\n\r\ntype Callback = () => boolean;\r\n\r\ntype QueueByPriority = {\r\n  hight: Array<Task>;\r\n  normal: Array<Task>;\r\n  low1: Array<Task>;\r\n  low2: Array<Task>;\r\n};\r\n\r\nconst queueByPriority: QueueByPriority = {\r\n  hight: [],\r\n  normal: [],\r\n  low1: [],\r\n  low2: [],\r\n};\r\nconst YEILD_INTERVAL = 10;\r\nlet scheduledCallback: Callback = null;\r\nlet deadline = 0;\r\nlet isMessageLoopRunning = false;\r\nlet currentTask: Task = null;\r\n\r\nclass Task {\r\n  public static nextTaskId = 0;\r\n  public id: number;\r\n  public time: number;\r\n  public timeoutMs: number;\r\n  public priority: TaskPriority;\r\n  public forceSync: boolean;\r\n  public callback: () => void;\r\n\r\n  constructor(options: Omit<Task, 'id'>) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.time = options.time;\r\n    this.timeoutMs = options.timeoutMs;\r\n    this.priority = options.priority;\r\n    this.forceSync = options.forceSync;\r\n    this.callback = options.callback;\r\n  }\r\n}\r\n\r\nconst shouldYeildToHost = () => getTime() >= deadline;\r\n\r\nfunction scheduleCallback(callback: () => void, options?: ScheduleCallbackOptions) {\r\n  const { priority = TaskPriority.NORMAL, timeoutMs = 0, forceSync = false } = options || {};\r\n  const task = new Task({ time: getTime(), timeoutMs, priority, forceSync, callback });\r\n  const map: Record<TaskPriority, () => void> = {\r\n    [TaskPriority.HIGH]: () => queueByPriority.hight.push(task),\r\n    [TaskPriority.NORMAL]: () => queueByPriority.normal.push(task),\r\n    [TaskPriority.LOW]: () => (task.timeoutMs > 0 ? queueByPriority.low2.push(task) : queueByPriority.low1.push(task)),\r\n  };\r\n\r\n  map[task.priority]();\r\n  executeTasks();\r\n}\r\n\r\nfunction pick(queue: Array<Task>) {\r\n  if (!queue.length) return false;\r\n  currentTask = queue.shift();\r\n\r\n  currentTask.callback();\r\n\r\n  if (currentTask.forceSync) {\r\n    requestCallbackSync(workLoop);\r\n  } else {\r\n    requestCallback(workLoop);\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction executeTasks() {\r\n  const isBusy = Boolean(wipRootStore.get());\r\n\r\n  if (!isBusy) {\r\n    checkOverdueTasks() ||\r\n      pick(queueByPriority.hight) ||\r\n      pick(queueByPriority.normal) ||\r\n      requestIdleCallback(() => pick(queueByPriority.low1) || pick(queueByPriority.low2));\r\n  }\r\n}\r\n\r\nfunction checkOverdueTasks() {\r\n  const [task] = queueByPriority.low2;\r\n\r\n  if (task && getTime() - task.time > task.timeoutMs) {\r\n    pick(queueByPriority.low2);\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction performWorkUntilDeadline() {\r\n  if (scheduledCallback) {\r\n    deadline = getTime() + YEILD_INTERVAL;\r\n\r\n    try {\r\n      const hasMoreWork = scheduledCallback();\r\n\r\n      if (!hasMoreWork) {\r\n        currentTask = null;\r\n        isMessageLoopRunning = false;\r\n        scheduledCallback = null;\r\n        executeTasks();\r\n      } else {\r\n        port.postMessage(null);\r\n      }\r\n    } catch (error) {\r\n      port.postMessage(null);\r\n      throw error;\r\n    }\r\n  } else {\r\n    isMessageLoopRunning = false;\r\n  }\r\n}\r\n\r\nfunction requestCallback(callback: Callback) {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return requestCallbackSync(callback);\r\n  }\r\n\r\n  scheduledCallback = callback;\r\n\r\n  if (!isMessageLoopRunning) {\r\n    isMessageLoopRunning = true;\r\n    port.postMessage(null);\r\n  }\r\n}\r\n\r\nfunction requestCallbackSync(callback: Callback) {\r\n  while (callback()) {\r\n    //\r\n  }\r\n  executeTasks();\r\n  currentTask = null;\r\n}\r\n\r\nlet channel: MessageChannel = null;\r\nlet port: MessagePort = null;\r\n\r\nfunction setup() {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return;\r\n  }\r\n\r\n  channel = new MessageChannel();\r\n  port = channel.port2;\r\n\r\n  channel.port1.onmessage = performWorkUntilDeadline;\r\n}\r\n\r\nsetup();\r\n\r\nexport { shouldYeildToHost, scheduleCallback };\r\n","import {\r\n  type DarkElement,\r\n  type VirtualNodeFactory,\r\n  type ComponentFactory,\r\n  ROOT,\r\n  Fiber,\r\n  EffectTag,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  TagVirtualNode,\r\n  rootStore,\r\n  wipRootStore,\r\n  currentRootStore,\r\n  nextUnitOfWorkStore,\r\n  fiberMountStore,\r\n  TaskPriority,\r\n  createEmptyVirtualNode,\r\n  isLayoutEffectsZone,\r\n} from '@dark-engine/core';\r\nimport { createNativeElement, applyCommit, finishCommitWork } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport { scheduleCallback, shouldYeildToHost } from '../scheduler';\r\n\r\nplatform.createNativeElement = createNativeElement as typeof platform.createNativeElement;\r\nplatform.requestAnimationFrame = requestAnimationFrame.bind(this);\r\nplatform.scheduleCallback = scheduleCallback;\r\nplatform.shouldYeildToHost = shouldYeildToHost;\r\nplatform.applyCommit = applyCommit;\r\nplatform.finishCommitWork = finishCommitWork;\r\nplatform.detectIsPortal = detectIsPortal;\r\nplatform.unmountPortal = unmountPortal;\r\n\r\nconst roots = new Map<Element, number>();\r\n\r\nfunction render(element: DarkElement, container: Element) {\r\n  if (!(container instanceof Element)) {\r\n    throw new Error(`[Dark]: render receives only Element as container!`);\r\n  }\r\n\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  let rootId = null;\r\n\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n\r\n    roots.set(container, rootId);\r\n    container.innerHTML = '';\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n\r\n  const callback = () => {\r\n    rootStore.set(rootId); // important order!\r\n    const currentRoot = currentRootStore.get();\r\n    const fiber = new Fiber({\r\n      nativeElement: container,\r\n      instance: new TagVirtualNode({\r\n        name: ROOT,\r\n        children: flatten([element || createEmptyVirtualNode()]) as Array<VirtualNodeFactory | ComponentFactory>,\r\n      }),\r\n      alternate: currentRoot,\r\n      effectTag: isMounted ? EffectTag.UPDATE : EffectTag.CREATE,\r\n    });\r\n\r\n    currentRoot && (currentRoot.alternate = null);\r\n    fiberMountStore.reset();\r\n    wipRootStore.set(fiber);\r\n    nextUnitOfWorkStore.set(fiber);\r\n  };\r\n\r\n  platform.scheduleCallback(callback, { priority: TaskPriority.NORMAL, forceSync: isLayoutEffectsZone.get() });\r\n}\r\n\r\nexport { render, roots };\r\n","import { type DarkElement, unmountRoot } from '@dark-engine/core';\r\nimport { render, roots } from '../render';\r\n\r\nfunction createRoot(container: Element) {\r\n  return {\r\n    render: (element: DarkElement) => render(element, container),\r\n    unmount: () => {\r\n      const rootId = roots.get(container);\r\n\r\n      unmountRoot(rootId, () => {\r\n        roots.delete(container);\r\n        container.innerHTML = '';\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\nexport { createRoot };\r\n","import { useMemo, detectIsUndefined } from '@dark-engine/core';\r\n\r\nfunction styled(strings: TemplateStringsArray, ...args: Array<string | number>): string {\r\n  const style = useMemo(() => {\r\n    return strings\r\n      .map((x, idx) => x + (!detectIsUndefined(args[idx]) ? args[idx] : ''))\r\n      .join('')\r\n      .replace(/;\\s*/gm, ';')\r\n      .replace(/:\\s*/gm, ':')\r\n      .trim();\r\n  }, [strings, ...args]);\r\n\r\n  return style;\r\n}\r\n\r\ntype Style = Record<string, string>;\r\n\r\ntype Config<T extends Style> = (x: typeof styled) => T;\r\n\r\nfunction useStyle<T extends Style>(config: Config<T>) {\r\n  return config(styled);\r\n}\r\n\r\nexport { useStyle };\r\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__317__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","$$portal","createPortal","slot","container","Element","Error","Portal","createComponent","rest","useMemo","innerHTML","token","detectIsPortal","detectIsComponentFactory","getPortalContainer","props","SyntheticEvent","constructor","options","type","sourceEvent","target","propagation","this","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","eventsStore","handlerMap","set","rootHandler","event","fireEvent","syntheticEvent","detectIsFunction","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","slice","length","toLowerCase","attrBlackListMap","ATTR_KEY","ATTR_REF","void","fragmentsMap","Map","trackUpdate","applyRef","ref","element","detectIsMutableRef","current","INPUT_STOP_ATTRS_MAP","checked","TEXTAREA_STOP_ATTRS_MAP","OPTIONS_STOP_ATTRS_MAP","selected","DEFAULT_STOP_ATTRS_MAP","upgradeInputAttributes","tagName","map","input","textarea","option","getParentFiberWithNativeElement","fiber","nextFiber","parent","instance","nativeElement","setTrackUpdate","fn","queueByPriority","hight","normal","low1","low2","scheduledCallback","deadline","isMessageLoopRunning","currentTask","Task","id","nextTaskId","time","timeoutMs","priority","forceSync","callback","pick","queue","shift","executeTasks","requestCallbackSync","workLoop","port","postMessage","Boolean","wipRootStore","task","getTime","checkOverdueTasks","requestIdleCallback","channel","MessageChannel","port2","port1","onmessage","error","platform","vNode","NodeType","tagNode","name","svg","circle","ellipse","g","text","tspan","textPath","path","polygon","polyline","line","rect","use","image","symbol","defs","linearGradient","radialGradient","stop","clipPath","pattern","mask","marker","createElementNS","createElement","textNode","createTextNode","commentNode","createComment","requestAnimationFrame","bind","TaskPriority","push","EffectTag","parentNativeElement","childNodes","idx","getChildIndex","fragment","createDocumentFragment","appendChild","markMountedToHost","append","insertBefore","node","walkFiber","onLoop","resetIsDeepWalking","mountedToHost","getNodeOnTheRight","detectIsTagVirtualNode","attrNames","keys","attrs","attrValue","detectIsUndefined","setAttribute","addAttributes","commitCreation","nextInstance","detectIsVirtualNode","alternate","detectIsTextVirtualNode","textContent","nextVNode","Set","prevAttrValue","nextAttrValue","removeAttribute","updateAttributes","parentFiber","isReturn","nextSibling","removeChild","commitDeletion","effectTag","values","roots","render","isMounted","rootId","size","rootStore","currentRoot","currentRootStore","Fiber","TagVirtualNode","ROOT","children","flatten","createEmptyVirtualNode","fiberMountStore","nextUnitOfWorkStore","isLayoutEffectsZone","createRoot","unmount","unmountRoot","styled","strings","args","x","join","replace","trim","useStyle","config"],"sourceRoot":""}